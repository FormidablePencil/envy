2024-10-02 10:10:07,925 - ERROR - Error: The specified script 'tests' does not exist at path '/root/envy/tests'.
2024-10-02 10:10:59,817 - ERROR - Error: The specified script 'tests' does not exist at path '/root/envy/tests'.
2024-10-02 10:14:42,033 - ERROR - Error: The specified script 'tests' does not exist at path '/root/envy/tests'.
2024-10-02 10:18:15,992 - INFO - PYTHONPATH set to default: envy
2024-10-02 10:18:18,273 - INFO - Successfully executed command: py /root/envy/tests/test_py_command.py
2024-10-02 10:18:39,777 - INFO - PYTHONPATH set to default: envy
2024-10-02 10:18:41,059 - INFO - Successfully executed command: py /root/envy/tests/test_py_command.py
2024-10-02 10:19:02,739 - INFO - PYTHONPATH set to default: envy
2024-10-02 10:19:04,193 - INFO - Successfully executed command: py /root/envy/tests/test_py_command.py
2024-10-02 10:21:59,075 - INFO - PYTHONPATH set to default: envy
2024-10-02 10:22:01,042 - INFO - Successfully executed command: pytest /root/envy/tests/test_py_command.py
2024-10-02 10:23:04,479 - INFO - PYTHONPATH set to default: envy
2024-10-02 10:23:05,991 - INFO - Successfully executed command: pytest /root/envy/tests/test_py_command.py
2024-10-02 10:24:00,113 - INFO - PYTHONPATH set to default: envy
2024-10-02 10:24:01,561 - INFO - Successfully executed command: pytest --color=yes /root/envy/tests/test_py_command.py
2024-10-02 10:24:17,947 - INFO - PYTHONPATH set to default: envy
2024-10-02 10:24:20,262 - INFO - Successfully executed command: pytest --color=yes /root/envy/tests/test_py_command.py
2024-10-02 10:24:40,358 - ERROR - Error: The specified script 'tests/' does not exist at path '/root/envy/tests'.
2024-10-02 10:25:13,110 - ERROR - Error: The specified script 'tests' does not exist at path '/root/envy/tests'.
2024-10-02 10:25:40,490 - ERROR - Error: The specified script 'tests' does not exist at path '/root/envy/tests'.
2024-10-02 10:25:53,761 - ERROR - Error: The specified script 'tests/' does not exist at path '/root/envy/tests'.
2024-10-02 10:26:57,729 - INFO - PYTHONPATH set to default: envy
2024-10-02 10:27:00,099 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests']' returned non-zero exit status 2.
2024-10-02 10:27:00,099 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
plugins: anyio-4.2.0
collected 3 items / 1 error

==================================== ERRORS ====================================
[31m[1m____________ ERROR collecting tests/test_version_control_manager.py ____________[0m
[31mImportError while importing test module '/root/envy/tests/test_version_control_manager.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.12/importlib/__init__.py:90: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests/test_version_control_manager.py:3: in <module>
    from version_control.version_control_manager import VersionControlManager
E   ModuleNotFoundError: No module named 'version_control'[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/test_version_control_manager.py
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
[31m=============================== [31m[1m1 error[0m[31m in 0.83s[0m[31m ===============================[0m

2024-10-02 10:27:00,099 - ERROR - Command error: 
2024-10-02 10:32:24,886 - INFO - PYTHONPATH set to default: envy
2024-10-02 10:32:27,508 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests']' returned non-zero exit status 2.
2024-10-02 10:32:27,509 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
plugins: anyio-4.2.0
collected 3 items / 1 error

==================================== ERRORS ====================================
[31m[1m____________ ERROR collecting tests/test_version_control_manager.py ____________[0m
[31mImportError while importing test module '/root/envy/tests/test_version_control_manager.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.12/importlib/__init__.py:90: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests/test_version_control_manager.py:3: in <module>
    from version_control.version_control_manager import VersionControlManager
E   ModuleNotFoundError: No module named 'version_control'[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/test_version_control_manager.py
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
[31m=============================== [31m[1m1 error[0m[31m in 1.25s[0m[31m ===============================[0m

2024-10-02 10:32:27,509 - ERROR - Command error: 
2024-10-02 10:41:17,580 - INFO - PYTHONPATH set to default: envy
2024-10-02 10:41:20,741 - ERROR - Error running command: Command '['pytest', '--color=yes', '.']' returned non-zero exit status 2.
2024-10-02 10:41:20,742 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy/tests
plugins: anyio-4.2.0
collected 3 items / 1 error

==================================== ERRORS ====================================
[31m[1m_______________ ERROR collecting test_version_control_manager.py _______________[0m
[31mImportError while importing test module '/root/envy/tests/test_version_control_manager.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.12/importlib/__init__.py:90: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
test_version_control_manager.py:3: in <module>
    from version_control.version_control_manager import VersionControlManager
E   ModuleNotFoundError: No module named 'version_control'[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m test_version_control_manager.py
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
[31m=============================== [31m[1m1 error[0m[31m in 1.34s[0m[31m ===============================[0m

2024-10-02 10:41:20,742 - ERROR - Command error: 
2024-10-02 10:44:21,704 - INFO - PYTHONPATH set to default: envy
2024-10-02 10:44:23,270 - INFO - Successfully executed command: py /root/envy/tests/test_py_command.py
2024-10-02 10:45:37,449 - INFO - PYTHONPATH set to default: envy
2024-10-02 10:45:37,972 - ERROR - Error running command: Command '['py', '/root/envy/tests/test_version_control_manager.py']' returned non-zero exit status 1.
2024-10-02 10:45:37,973 - ERROR - Command output: 
2024-10-02 10:45:37,973 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/test_version_control_manager.py", line 3, in <module>
    from version_control.version_control_manager import VersionControlManager
ModuleNotFoundError: No module named 'version_control'

2024-10-02 10:47:35,935 - INFO - PYTHONPATH set to default: envy
2024-10-02 10:47:36,332 - ERROR - Error running command: Command '['py', '/root/envy/tests/test_version_control_manager.py']' returned non-zero exit status 1.
2024-10-02 10:47:36,332 - ERROR - Command output: 
2024-10-02 10:47:36,332 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/test_version_control_manager.py", line 3, in <module>
    from version_control.version_control_manager import VersionControlManager
ModuleNotFoundError: No module named 'version_control'

2024-10-02 10:48:13,295 - INFO - PYTHONPATH set to: envy
2024-10-02 10:48:13,701 - ERROR - Error running command: Command '['py', '/root/envy/tests/test_version_control_manager.py']' returned non-zero exit status 1.
2024-10-02 10:48:13,701 - ERROR - Command output: 
2024-10-02 10:48:13,701 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/test_version_control_manager.py", line 3, in <module>
    from version_control.version_control_manager import VersionControlManager
ModuleNotFoundError: No module named 'version_control'

2024-10-02 10:48:33,979 - INFO - PYTHONPATH set to: root/envy
2024-10-02 10:48:34,523 - ERROR - Error running command: Command '['py', '/root/envy/tests/test_version_control_manager.py']' returned non-zero exit status 1.
2024-10-02 10:48:34,523 - ERROR - Command output: 
2024-10-02 10:48:34,523 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/test_version_control_manager.py", line 3, in <module>
    from version_control.version_control_manager import VersionControlManager
ModuleNotFoundError: No module named 'version_control'

2024-10-02 10:56:41,978 - INFO - PYTHONPATH set to default: envy
2024-10-02 10:56:42,498 - ERROR - Error running command: Command '['py', 'test_version_control_manager.py']' returned non-zero exit status 1.
2024-10-02 10:56:42,498 - ERROR - Command output: 
2024-10-02 10:56:42,498 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/test_version_control_manager.py", line 3, in <module>
    from version_control.version_control_manager import VersionControlManager
ModuleNotFoundError: No module named 'version_control'

2024-10-02 10:57:36,688 - INFO - PYTHONPATH set to default: envy
2024-10-02 10:57:37,128 - ERROR - Error running command: Command '['py', 'test_version_control_manager.py']' returned non-zero exit status 1.
2024-10-02 10:57:37,128 - ERROR - Command output: 
2024-10-02 10:57:37,128 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/test_version_control_manager.py", line 3, in <module>
    from version_control.version_control_manager import VersionControlManager
ModuleNotFoundError: No module named 'version_control'

2024-10-02 10:57:56,916 - INFO - PYTHONPATH set to default: envy
2024-10-02 10:57:57,279 - ERROR - Error running command: Command '['py', 'test_version_control_manager.py']' returned non-zero exit status 1.
2024-10-02 10:57:57,279 - ERROR - Command output: 
2024-10-02 10:57:57,279 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/test_version_control_manager.py", line 3, in <module>
    from version_control.version_control_manager import VersionControlManager
ModuleNotFoundError: No module named 'version_control'

2024-10-02 10:58:58,513 - INFO - PYTHONPATH set to default: envy
2024-10-02 10:58:59,076 - ERROR - Error running command: Command '['py', 'test_version_control_manager.py']' returned non-zero exit status 1.
2024-10-02 10:58:59,076 - ERROR - Command output: 
2024-10-02 10:58:59,076 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/test_version_control_manager.py", line 3, in <module>
    from version_control.version_control_manager import VersionControlManager
ModuleNotFoundError: No module named 'version_control'

2024-10-02 10:59:18,637 - INFO - PYTHONPATH set to default: envy
2024-10-02 10:59:19,045 - ERROR - Error running command: Command '['py', 'test_version_control_manager.py']' returned non-zero exit status 1.
2024-10-02 10:59:19,046 - ERROR - Command output: 
2024-10-02 10:59:19,046 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/test_version_control_manager.py", line 3, in <module>
    from version_control.version_control_manager import VersionControlManager
ModuleNotFoundError: No module named 'version_control'

2024-10-02 10:59:25,310 - INFO - PYTHONPATH set to default: envy
2024-10-02 10:59:25,547 - ERROR - Error running command: Command '['py', 'test_version_control_manager.py']' returned non-zero exit status 1.
2024-10-02 10:59:25,548 - ERROR - Command output: 
2024-10-02 10:59:25,548 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/test_version_control_manager.py", line 3, in <module>
    from version_control.version_control_manager import VersionControlManager
ModuleNotFoundError: No module named 'version_control'

2024-10-02 11:00:21,927 - INFO - PYTHONPATH set to default: envy
2024-10-02 11:00:22,390 - ERROR - Error running command: Command '['py', 'test_version_control_manager.py']' returned non-zero exit status 1.
2024-10-02 11:00:22,390 - ERROR - Command output: 
2024-10-02 11:00:22,390 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/test_version_control_manager.py", line 3, in <module>
    from envy.version_control.version_control_manager import VersionControlManager
ModuleNotFoundError: No module named 'envy'

2024-10-02 11:30:41,640 - INFO - PYTHONPATH set to default: envy
2024-10-02 11:30:42,114 - ERROR - Error running command: Command '['py', 'test_version_control_manager.py']' returned non-zero exit status 1.
2024-10-02 11:30:42,115 - ERROR - Command output: 
2024-10-02 11:30:42,115 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/test_version_control_manager.py", line 3, in <module>
    from version_control.version_control_manager import VersionControlManager
ModuleNotFoundError: No module named 'version_control'

2024-10-02 11:30:46,978 - INFO - PYTHONPATH set to default: envy
2024-10-02 11:30:47,255 - ERROR - Error running command: Command '['py', 'test_version_control_manager.py']' returned non-zero exit status 1.
2024-10-02 11:30:47,255 - ERROR - Command output: 
2024-10-02 11:30:47,255 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/test_version_control_manager.py", line 3, in <module>
    from version_control.version_control_manager import VersionControlManager
ModuleNotFoundError: No module named 'version_control'

2024-10-02 11:30:55,288 - INFO - PYTHONPATH set to default: envy
2024-10-02 11:30:55,688 - ERROR - Error running command: Command '['py', 'test_version_control_manager.py']' returned non-zero exit status 1.
2024-10-02 11:30:55,688 - ERROR - Command output: 
2024-10-02 11:30:55,688 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/test_version_control_manager.py", line 3, in <module>
    from version_control.version_control_manager import VersionControlManager
ModuleNotFoundError: No module named 'version_control'

2024-10-02 11:47:32,914 - INFO - PYTHONPATH set to default: envy
2024-10-02 11:47:34,469 - INFO - Successfully executed command: pytest --color=yes .
2024-10-02 11:48:10,218 - INFO - PYTHONPATH set to default: envy
2024-10-02 11:48:11,209 - INFO - Successfully executed command: py test_py_command.py
2024-10-02 11:52:57,298 - INFO - PYTHONPATH set to default: envy
2024-10-02 11:52:57,315 - ERROR - Error running command: Command '['py', '--color=yes', 'test_py_command.py']' returned non-zero exit status 2.
2024-10-02 11:52:57,315 - ERROR - Command output: 
2024-10-02 11:52:57,315 - ERROR - Command error: unknown option --color=yes
usage: py [option] ... [-c cmd | -m mod | file | -] [arg] ...
Try `python -h' for more information.

2024-10-02 12:00:15,052 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:00:24,256 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:00:27,804 - ERROR - Error running command: Command '['pytest', '--color=yes', '.']' returned non-zero exit status 1.
2024-10-02 12:00:27,804 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 9 items

test_py_command.py [31mF[0m[31mF[0m[31mF[0m[31m                                                   [ 33%][0m
test_version_control_manager.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                   [100%][0m

=================================== FAILURES ===================================
[31m[1m_______________________ test_py_command_sets_pythonpath ________________________[0m

    [94mdef[39;49;00m [92mtest_py_command_sets_pythonpath[39;49;00m():[90m[39;49;00m
>       run_py_command([ [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpass[39;49;00m[33m"[39;49;00m ], [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m)[90m[39;49;00m

[1m[31mtest_py_command.py[0m:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtest_py_command.py[0m:9: in run_py_command
    result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m] + args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=[94mTrue[39;49;00m, check=[94mTrue[39;49;00m)[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:548: in run
    [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:1026: in __init__
    [96mself[39;49;00m._execute_child(args, executable, preexec_fn, close_fds,[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Popen: returncode: 255 args: ['py', '-c', 'pass']>
args = ['py', '-c', 'pass'], executable = b'py', preexec_fn = None
close_fds = True, pass_fds = (), cwd = None, env = None, startupinfo = None
creationflags = 0, shell = False, p2cread = -1, p2cwrite = -1, c2pread = 11
c2pwrite = 12, errread = 13, errwrite = 14, restore_signals = True, gid = None
gids = None, uid = None, umask = -1, start_new_session = False
process_group = -1

    [94mdef[39;49;00m [92m_execute_child[39;49;00m([96mself[39;49;00m, args, executable, preexec_fn, close_fds,[90m[39;49;00m
                       pass_fds, cwd, env,[90m[39;49;00m
                       startupinfo, creationflags, shell,[90m[39;49;00m
                       p2cread, p2cwrite,[90m[39;49;00m
                       c2pread, c2pwrite,[90m[39;49;00m
                       errread, errwrite,[90m[39;49;00m
                       restore_signals,[90m[39;49;00m
                       gid, gids, uid, umask,[90m[39;49;00m
                       start_new_session, process_group):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Execute program (POSIX version)"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(args, ([96mstr[39;49;00m, [96mbytes[39;49;00m)):[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melif[39;49;00m [96misinstance[39;49;00m(args, os.PathLike):[90m[39;49;00m
            [94mif[39;49;00m shell:[90m[39;49;00m
                [94mraise[39;49;00m [96mTypeError[39;49;00m([33m'[39;49;00m[33mpath-like args is not allowed when [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                [33m'[39;49;00m[33mshell is true[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            args = [96mlist[39;49;00m(args)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m shell:[90m[39;49;00m
            [90m# On Android the default shell is at '/system/bin/sh'.[39;49;00m[90m[39;49;00m
            unix_shell = ([33m'[39;49;00m[33m/system/bin/sh[39;49;00m[33m'[39;49;00m [94mif[39;49;00m[90m[39;49;00m
                      [96mhasattr[39;49;00m(sys, [33m'[39;49;00m[33mgetandroidapilevel[39;49;00m[33m'[39;49;00m) [94melse[39;49;00m [33m'[39;49;00m[33m/bin/sh[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [unix_shell, [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m] + args[90m[39;49;00m
            [94mif[39;49;00m executable:[90m[39;49;00m
                args[[94m0[39;49;00m] = executable[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m executable [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            executable = args[[94m0[39;49;00m][90m[39;49;00m
    [90m[39;49;00m
        sys.audit([33m"[39;49;00m[33msubprocess.Popen[39;49;00m[33m"[39;49;00m, executable, args, cwd, env)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m (_USE_POSIX_SPAWN[90m[39;49;00m
                [95mand[39;49;00m os.path.dirname(executable)[90m[39;49;00m
                [95mand[39;49;00m preexec_fn [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m close_fds[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m pass_fds[90m[39;49;00m
                [95mand[39;49;00m cwd [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m (p2cread == -[94m1[39;49;00m [95mor[39;49;00m p2cread > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (c2pwrite == -[94m1[39;49;00m [95mor[39;49;00m c2pwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (errwrite == -[94m1[39;49;00m [95mor[39;49;00m errwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m start_new_session[90m[39;49;00m
                [95mand[39;49;00m process_group == -[94m1[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gids [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m uid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m umask < [94m0[39;49;00m):[90m[39;49;00m
            [96mself[39;49;00m._posix_spawn(args, executable, env, restore_signals,[90m[39;49;00m
                              p2cread, p2cwrite,[90m[39;49;00m
                              c2pread, c2pwrite,[90m[39;49;00m
                              errread, errwrite)[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        orig_executable = executable[90m[39;49;00m
    [90m[39;49;00m
        [90m# For transferring possible exec failure from child to parent.[39;49;00m[90m[39;49;00m
        [90m# Data format: "exception name:hex errno:description"[39;49;00m[90m[39;49;00m
        [90m# Pickle is not used; it is complex and involves memory allocation.[39;49;00m[90m[39;49;00m
        errpipe_read, errpipe_write = os.pipe()[90m[39;49;00m
        [90m# errpipe_write must not be in the standard io 0, 1, or 2 fd range.[39;49;00m[90m[39;49;00m
        low_fds_to_close = [][90m[39;49;00m
        [94mwhile[39;49;00m errpipe_write < [94m3[39;49;00m:[90m[39;49;00m
            low_fds_to_close.append(errpipe_write)[90m[39;49;00m
            errpipe_write = os.dup(errpipe_write)[90m[39;49;00m
        [94mfor[39;49;00m low_fd [95min[39;49;00m low_fds_to_close:[90m[39;49;00m
            os.close(low_fd)[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [90m# We must avoid complex work that could involve[39;49;00m[90m[39;49;00m
                [90m# malloc or free in the child process to avoid[39;49;00m[90m[39;49;00m
                [90m# potential deadlocks, thus we do all this here.[39;49;00m[90m[39;49;00m
                [90m# and pass it to fork_exec()[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
                [94mif[39;49;00m env [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    env_list = [][90m[39;49;00m
                    [94mfor[39;49;00m k, v [95min[39;49;00m env.items():[90m[39;49;00m
                        k = os.fsencode(k)[90m[39;49;00m
                        [94mif[39;49;00m [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m [95min[39;49;00m k:[90m[39;49;00m
                            [94mraise[39;49;00m [96mValueError[39;49;00m([33m"[39;49;00m[33millegal environment variable name[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                        env_list.append(k + [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m + os.fsencode(v))[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    env_list = [94mNone[39;49;00m  [90m# Use execv instead of execve.[39;49;00m[90m[39;49;00m
                executable = os.fsencode(executable)[90m[39;49;00m
                [94mif[39;49;00m os.path.dirname(executable):[90m[39;49;00m
                    executable_list = (executable,)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# This matches the behavior of os._execvpe().[39;49;00m[90m[39;49;00m
                    executable_list = [96mtuple[39;49;00m([90m[39;49;00m
                        os.path.join(os.fsencode([96mdir[39;49;00m), executable)[90m[39;49;00m
                        [94mfor[39;49;00m [96mdir[39;49;00m [95min[39;49;00m os.get_exec_path(env))[90m[39;49;00m
                fds_to_keep = [96mset[39;49;00m(pass_fds)[90m[39;49;00m
                fds_to_keep.add(errpipe_write)[90m[39;49;00m
                [96mself[39;49;00m.pid = _fork_exec([90m[39;49;00m
                        args, executable_list,[90m[39;49;00m
                        close_fds, [96mtuple[39;49;00m([96msorted[39;49;00m([96mmap[39;49;00m([96mint[39;49;00m, fds_to_keep))),[90m[39;49;00m
                        cwd, env_list,[90m[39;49;00m
                        p2cread, p2cwrite, c2pread, c2pwrite,[90m[39;49;00m
                        errread, errwrite,[90m[39;49;00m
                        errpipe_read, errpipe_write,[90m[39;49;00m
                        restore_signals, start_new_session,[90m[39;49;00m
                        process_group, gid, gids, uid, umask,[90m[39;49;00m
                        preexec_fn, _USE_VFORK)[90m[39;49;00m
                [96mself[39;49;00m._child_created = [94mTrue[39;49;00m[90m[39;49;00m
            [94mfinally[39;49;00m:[90m[39;49;00m
                [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
                os.close(errpipe_write)[90m[39;49;00m
    [90m[39;49;00m
            [96mself[39;49;00m._close_pipe_fds(p2cread, p2cwrite,[90m[39;49;00m
                                 c2pread, c2pwrite,[90m[39;49;00m
                                 errread, errwrite)[90m[39;49;00m
    [90m[39;49;00m
            [90m# Wait for exec to fail or succeed; possibly raising an[39;49;00m[90m[39;49;00m
            [90m# exception (limited in size)[39;49;00m[90m[39;49;00m
            errpipe_data = [96mbytearray[39;49;00m()[90m[39;49;00m
            [94mwhile[39;49;00m [94mTrue[39;49;00m:[90m[39;49;00m
                part = os.read(errpipe_read, [94m50000[39;49;00m)[90m[39;49;00m
                errpipe_data += part[90m[39;49;00m
                [94mif[39;49;00m [95mnot[39;49;00m part [95mor[39;49;00m [96mlen[39;49;00m(errpipe_data) > [94m50000[39;49;00m:[90m[39;49;00m
                    [94mbreak[39;49;00m[90m[39;49;00m
        [94mfinally[39;49;00m:[90m[39;49;00m
            [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
            os.close(errpipe_read)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m errpipe_data:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                pid, sts = os.waitpid([96mself[39;49;00m.pid, [94m0[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m pid == [96mself[39;49;00m.pid:[90m[39;49;00m
                    [96mself[39;49;00m._handle_exitstatus(sts)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.returncode = sys.maxsize[90m[39;49;00m
            [94mexcept[39;49;00m [96mChildProcessError[39;49;00m:[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                exception_name, hex_errno, err_msg = ([90m[39;49;00m
                        errpipe_data.split([33mb[39;49;00m[33m'[39;49;00m[33m:[39;49;00m[33m'[39;49;00m, [94m2[39;49;00m))[90m[39;49;00m
                [90m# The encoding here should match the encoding[39;49;00m[90m[39;49;00m
                [90m# written in by the subprocess implementations[39;49;00m[90m[39;49;00m
                [90m# like _posixsubprocess[39;49;00m[90m[39;49;00m
                err_msg = err_msg.decode()[90m[39;49;00m
            [94mexcept[39;49;00m [96mValueError[39;49;00m:[90m[39;49;00m
                exception_name = [33mb[39;49;00m[33m'[39;49;00m[33mSubprocessError[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                hex_errno = [33mb[39;49;00m[33m'[39;49;00m[33m0[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                err_msg = [33m'[39;49;00m[33mBad exception data from child: [39;49;00m[33m{!r}[39;49;00m[33m'[39;49;00m.format([90m[39;49;00m
                              [96mbytes[39;49;00m(errpipe_data))[90m[39;49;00m
            child_exception_type = [96mgetattr[39;49;00m([90m[39;49;00m
                    builtins, exception_name.decode([33m'[39;49;00m[33mascii[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                    SubprocessError)[90m[39;49;00m
            [94mif[39;49;00m [96missubclass[39;49;00m(child_exception_type, [96mOSError[39;49;00m) [95mand[39;49;00m hex_errno:[90m[39;49;00m
                errno_num = [96mint[39;49;00m(hex_errno, [94m16[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec:chdir[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    [90m# The error must be from chdir(cwd).[39;49;00m[90m[39;49;00m
                    err_filename = cwd[90m[39;49;00m
                [94melif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    err_filename = [94mNone[39;49;00m[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    err_filename = orig_executable[90m[39;49;00m
                [94mif[39;49;00m errno_num != [94m0[39;49;00m:[90m[39;49;00m
                    err_msg = os.strerror(errno_num)[90m[39;49;00m
                [94mif[39;49;00m err_filename [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
>                   [94mraise[39;49;00m child_exception_type(errno_num, err_msg, err_filename)[90m[39;49;00m
[1m[31mE                   FileNotFoundError: [Errno 2] No such file or directory: 'py'[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:1955: FileNotFoundError
[31m[1m____________________ test_py_command_sets_custom_pythonpath ____________________[0m

    [94mdef[39;49;00m [92mtest_py_command_sets_custom_pythonpath[39;49;00m():[90m[39;49;00m
>       run_py_command([ [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpass[39;49;00m[33m"[39;49;00m ], [33m"[39;49;00m[33mOuter_dir[39;49;00m[33m"[39;49;00m)[90m[39;49;00m

[1m[31mtest_py_command.py[0m:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtest_py_command.py[0m:9: in run_py_command
    result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m] + args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=[94mTrue[39;49;00m, check=[94mTrue[39;49;00m)[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:548: in run
    [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:1026: in __init__
    [96mself[39;49;00m._execute_child(args, executable, preexec_fn, close_fds,[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Popen: returncode: 255 args: ['py', '-c', 'pass']>
args = ['py', '-c', 'pass'], executable = b'py', preexec_fn = None
close_fds = True, pass_fds = (), cwd = None, env = None, startupinfo = None
creationflags = 0, shell = False, p2cread = -1, p2cwrite = -1, c2pread = 11
c2pwrite = 12, errread = 13, errwrite = 14, restore_signals = True, gid = None
gids = None, uid = None, umask = -1, start_new_session = False
process_group = -1

    [94mdef[39;49;00m [92m_execute_child[39;49;00m([96mself[39;49;00m, args, executable, preexec_fn, close_fds,[90m[39;49;00m
                       pass_fds, cwd, env,[90m[39;49;00m
                       startupinfo, creationflags, shell,[90m[39;49;00m
                       p2cread, p2cwrite,[90m[39;49;00m
                       c2pread, c2pwrite,[90m[39;49;00m
                       errread, errwrite,[90m[39;49;00m
                       restore_signals,[90m[39;49;00m
                       gid, gids, uid, umask,[90m[39;49;00m
                       start_new_session, process_group):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Execute program (POSIX version)"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(args, ([96mstr[39;49;00m, [96mbytes[39;49;00m)):[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melif[39;49;00m [96misinstance[39;49;00m(args, os.PathLike):[90m[39;49;00m
            [94mif[39;49;00m shell:[90m[39;49;00m
                [94mraise[39;49;00m [96mTypeError[39;49;00m([33m'[39;49;00m[33mpath-like args is not allowed when [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                [33m'[39;49;00m[33mshell is true[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            args = [96mlist[39;49;00m(args)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m shell:[90m[39;49;00m
            [90m# On Android the default shell is at '/system/bin/sh'.[39;49;00m[90m[39;49;00m
            unix_shell = ([33m'[39;49;00m[33m/system/bin/sh[39;49;00m[33m'[39;49;00m [94mif[39;49;00m[90m[39;49;00m
                      [96mhasattr[39;49;00m(sys, [33m'[39;49;00m[33mgetandroidapilevel[39;49;00m[33m'[39;49;00m) [94melse[39;49;00m [33m'[39;49;00m[33m/bin/sh[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [unix_shell, [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m] + args[90m[39;49;00m
            [94mif[39;49;00m executable:[90m[39;49;00m
                args[[94m0[39;49;00m] = executable[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m executable [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            executable = args[[94m0[39;49;00m][90m[39;49;00m
    [90m[39;49;00m
        sys.audit([33m"[39;49;00m[33msubprocess.Popen[39;49;00m[33m"[39;49;00m, executable, args, cwd, env)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m (_USE_POSIX_SPAWN[90m[39;49;00m
                [95mand[39;49;00m os.path.dirname(executable)[90m[39;49;00m
                [95mand[39;49;00m preexec_fn [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m close_fds[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m pass_fds[90m[39;49;00m
                [95mand[39;49;00m cwd [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m (p2cread == -[94m1[39;49;00m [95mor[39;49;00m p2cread > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (c2pwrite == -[94m1[39;49;00m [95mor[39;49;00m c2pwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (errwrite == -[94m1[39;49;00m [95mor[39;49;00m errwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m start_new_session[90m[39;49;00m
                [95mand[39;49;00m process_group == -[94m1[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gids [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m uid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m umask < [94m0[39;49;00m):[90m[39;49;00m
            [96mself[39;49;00m._posix_spawn(args, executable, env, restore_signals,[90m[39;49;00m
                              p2cread, p2cwrite,[90m[39;49;00m
                              c2pread, c2pwrite,[90m[39;49;00m
                              errread, errwrite)[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        orig_executable = executable[90m[39;49;00m
    [90m[39;49;00m
        [90m# For transferring possible exec failure from child to parent.[39;49;00m[90m[39;49;00m
        [90m# Data format: "exception name:hex errno:description"[39;49;00m[90m[39;49;00m
        [90m# Pickle is not used; it is complex and involves memory allocation.[39;49;00m[90m[39;49;00m
        errpipe_read, errpipe_write = os.pipe()[90m[39;49;00m
        [90m# errpipe_write must not be in the standard io 0, 1, or 2 fd range.[39;49;00m[90m[39;49;00m
        low_fds_to_close = [][90m[39;49;00m
        [94mwhile[39;49;00m errpipe_write < [94m3[39;49;00m:[90m[39;49;00m
            low_fds_to_close.append(errpipe_write)[90m[39;49;00m
            errpipe_write = os.dup(errpipe_write)[90m[39;49;00m
        [94mfor[39;49;00m low_fd [95min[39;49;00m low_fds_to_close:[90m[39;49;00m
            os.close(low_fd)[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [90m# We must avoid complex work that could involve[39;49;00m[90m[39;49;00m
                [90m# malloc or free in the child process to avoid[39;49;00m[90m[39;49;00m
                [90m# potential deadlocks, thus we do all this here.[39;49;00m[90m[39;49;00m
                [90m# and pass it to fork_exec()[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
                [94mif[39;49;00m env [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    env_list = [][90m[39;49;00m
                    [94mfor[39;49;00m k, v [95min[39;49;00m env.items():[90m[39;49;00m
                        k = os.fsencode(k)[90m[39;49;00m
                        [94mif[39;49;00m [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m [95min[39;49;00m k:[90m[39;49;00m
                            [94mraise[39;49;00m [96mValueError[39;49;00m([33m"[39;49;00m[33millegal environment variable name[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                        env_list.append(k + [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m + os.fsencode(v))[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    env_list = [94mNone[39;49;00m  [90m# Use execv instead of execve.[39;49;00m[90m[39;49;00m
                executable = os.fsencode(executable)[90m[39;49;00m
                [94mif[39;49;00m os.path.dirname(executable):[90m[39;49;00m
                    executable_list = (executable,)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# This matches the behavior of os._execvpe().[39;49;00m[90m[39;49;00m
                    executable_list = [96mtuple[39;49;00m([90m[39;49;00m
                        os.path.join(os.fsencode([96mdir[39;49;00m), executable)[90m[39;49;00m
                        [94mfor[39;49;00m [96mdir[39;49;00m [95min[39;49;00m os.get_exec_path(env))[90m[39;49;00m
                fds_to_keep = [96mset[39;49;00m(pass_fds)[90m[39;49;00m
                fds_to_keep.add(errpipe_write)[90m[39;49;00m
                [96mself[39;49;00m.pid = _fork_exec([90m[39;49;00m
                        args, executable_list,[90m[39;49;00m
                        close_fds, [96mtuple[39;49;00m([96msorted[39;49;00m([96mmap[39;49;00m([96mint[39;49;00m, fds_to_keep))),[90m[39;49;00m
                        cwd, env_list,[90m[39;49;00m
                        p2cread, p2cwrite, c2pread, c2pwrite,[90m[39;49;00m
                        errread, errwrite,[90m[39;49;00m
                        errpipe_read, errpipe_write,[90m[39;49;00m
                        restore_signals, start_new_session,[90m[39;49;00m
                        process_group, gid, gids, uid, umask,[90m[39;49;00m
                        preexec_fn, _USE_VFORK)[90m[39;49;00m
                [96mself[39;49;00m._child_created = [94mTrue[39;49;00m[90m[39;49;00m
            [94mfinally[39;49;00m:[90m[39;49;00m
                [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
                os.close(errpipe_write)[90m[39;49;00m
    [90m[39;49;00m
            [96mself[39;49;00m._close_pipe_fds(p2cread, p2cwrite,[90m[39;49;00m
                                 c2pread, c2pwrite,[90m[39;49;00m
                                 errread, errwrite)[90m[39;49;00m
    [90m[39;49;00m
            [90m# Wait for exec to fail or succeed; possibly raising an[39;49;00m[90m[39;49;00m
            [90m# exception (limited in size)[39;49;00m[90m[39;49;00m
            errpipe_data = [96mbytearray[39;49;00m()[90m[39;49;00m
            [94mwhile[39;49;00m [94mTrue[39;49;00m:[90m[39;49;00m
                part = os.read(errpipe_read, [94m50000[39;49;00m)[90m[39;49;00m
                errpipe_data += part[90m[39;49;00m
                [94mif[39;49;00m [95mnot[39;49;00m part [95mor[39;49;00m [96mlen[39;49;00m(errpipe_data) > [94m50000[39;49;00m:[90m[39;49;00m
                    [94mbreak[39;49;00m[90m[39;49;00m
        [94mfinally[39;49;00m:[90m[39;49;00m
            [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
            os.close(errpipe_read)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m errpipe_data:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                pid, sts = os.waitpid([96mself[39;49;00m.pid, [94m0[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m pid == [96mself[39;49;00m.pid:[90m[39;49;00m
                    [96mself[39;49;00m._handle_exitstatus(sts)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.returncode = sys.maxsize[90m[39;49;00m
            [94mexcept[39;49;00m [96mChildProcessError[39;49;00m:[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                exception_name, hex_errno, err_msg = ([90m[39;49;00m
                        errpipe_data.split([33mb[39;49;00m[33m'[39;49;00m[33m:[39;49;00m[33m'[39;49;00m, [94m2[39;49;00m))[90m[39;49;00m
                [90m# The encoding here should match the encoding[39;49;00m[90m[39;49;00m
                [90m# written in by the subprocess implementations[39;49;00m[90m[39;49;00m
                [90m# like _posixsubprocess[39;49;00m[90m[39;49;00m
                err_msg = err_msg.decode()[90m[39;49;00m
            [94mexcept[39;49;00m [96mValueError[39;49;00m:[90m[39;49;00m
                exception_name = [33mb[39;49;00m[33m'[39;49;00m[33mSubprocessError[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                hex_errno = [33mb[39;49;00m[33m'[39;49;00m[33m0[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                err_msg = [33m'[39;49;00m[33mBad exception data from child: [39;49;00m[33m{!r}[39;49;00m[33m'[39;49;00m.format([90m[39;49;00m
                              [96mbytes[39;49;00m(errpipe_data))[90m[39;49;00m
            child_exception_type = [96mgetattr[39;49;00m([90m[39;49;00m
                    builtins, exception_name.decode([33m'[39;49;00m[33mascii[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                    SubprocessError)[90m[39;49;00m
            [94mif[39;49;00m [96missubclass[39;49;00m(child_exception_type, [96mOSError[39;49;00m) [95mand[39;49;00m hex_errno:[90m[39;49;00m
                errno_num = [96mint[39;49;00m(hex_errno, [94m16[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec:chdir[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    [90m# The error must be from chdir(cwd).[39;49;00m[90m[39;49;00m
                    err_filename = cwd[90m[39;49;00m
                [94melif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    err_filename = [94mNone[39;49;00m[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    err_filename = orig_executable[90m[39;49;00m
                [94mif[39;49;00m errno_num != [94m0[39;49;00m:[90m[39;49;00m
                    err_msg = os.strerror(errno_num)[90m[39;49;00m
                [94mif[39;49;00m err_filename [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
>                   [94mraise[39;49;00m child_exception_type(errno_num, err_msg, err_filename)[90m[39;49;00m
[1m[31mE                   FileNotFoundError: [Errno 2] No such file or directory: 'py'[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:1955: FileNotFoundError
[31m[1m_________________________ test_py_command_runs_script __________________________[0m

    [94mdef[39;49;00m [92mtest_py_command_runs_script[39;49;00m():[90m[39;49;00m
        script_content = [33m"[39;49;00m[33mprint([39;49;00m[33m'[39;49;00m[33mHello, world![39;49;00m[33m'[39;49;00m[33m)[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m [96mopen[39;49;00m([33m"[39;49;00m[33mtest_script.py[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mw[39;49;00m[33m"[39;49;00m) [94mas[39;49;00m f:[90m[39;49;00m
            f.write(script_content)[90m[39;49;00m
>       output = run_py_command([[33m"[39;49;00m[33mtest_script.py[39;49;00m[33m"[39;49;00m], [33m"[39;49;00m[33menvy[39;49;00m[33m"[39;49;00m)[90m[39;49;00m

[1m[31mtest_py_command.py[0m:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtest_py_command.py[0m:9: in run_py_command
    result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m] + args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=[94mTrue[39;49;00m, check=[94mTrue[39;49;00m)[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:548: in run
    [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:1026: in __init__
    [96mself[39;49;00m._execute_child(args, executable, preexec_fn, close_fds,[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Popen: returncode: 255 args: ['py', 'test_script.py']>
args = ['py', 'test_script.py'], executable = b'py', preexec_fn = None
close_fds = True, pass_fds = (), cwd = None, env = None, startupinfo = None
creationflags = 0, shell = False, p2cread = -1, p2cwrite = -1, c2pread = 11
c2pwrite = 12, errread = 13, errwrite = 14, restore_signals = True, gid = None
gids = None, uid = None, umask = -1, start_new_session = False
process_group = -1

    [94mdef[39;49;00m [92m_execute_child[39;49;00m([96mself[39;49;00m, args, executable, preexec_fn, close_fds,[90m[39;49;00m
                       pass_fds, cwd, env,[90m[39;49;00m
                       startupinfo, creationflags, shell,[90m[39;49;00m
                       p2cread, p2cwrite,[90m[39;49;00m
                       c2pread, c2pwrite,[90m[39;49;00m
                       errread, errwrite,[90m[39;49;00m
                       restore_signals,[90m[39;49;00m
                       gid, gids, uid, umask,[90m[39;49;00m
                       start_new_session, process_group):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Execute program (POSIX version)"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(args, ([96mstr[39;49;00m, [96mbytes[39;49;00m)):[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melif[39;49;00m [96misinstance[39;49;00m(args, os.PathLike):[90m[39;49;00m
            [94mif[39;49;00m shell:[90m[39;49;00m
                [94mraise[39;49;00m [96mTypeError[39;49;00m([33m'[39;49;00m[33mpath-like args is not allowed when [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                [33m'[39;49;00m[33mshell is true[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            args = [96mlist[39;49;00m(args)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m shell:[90m[39;49;00m
            [90m# On Android the default shell is at '/system/bin/sh'.[39;49;00m[90m[39;49;00m
            unix_shell = ([33m'[39;49;00m[33m/system/bin/sh[39;49;00m[33m'[39;49;00m [94mif[39;49;00m[90m[39;49;00m
                      [96mhasattr[39;49;00m(sys, [33m'[39;49;00m[33mgetandroidapilevel[39;49;00m[33m'[39;49;00m) [94melse[39;49;00m [33m'[39;49;00m[33m/bin/sh[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [unix_shell, [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m] + args[90m[39;49;00m
            [94mif[39;49;00m executable:[90m[39;49;00m
                args[[94m0[39;49;00m] = executable[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m executable [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            executable = args[[94m0[39;49;00m][90m[39;49;00m
    [90m[39;49;00m
        sys.audit([33m"[39;49;00m[33msubprocess.Popen[39;49;00m[33m"[39;49;00m, executable, args, cwd, env)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m (_USE_POSIX_SPAWN[90m[39;49;00m
                [95mand[39;49;00m os.path.dirname(executable)[90m[39;49;00m
                [95mand[39;49;00m preexec_fn [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m close_fds[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m pass_fds[90m[39;49;00m
                [95mand[39;49;00m cwd [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m (p2cread == -[94m1[39;49;00m [95mor[39;49;00m p2cread > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (c2pwrite == -[94m1[39;49;00m [95mor[39;49;00m c2pwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (errwrite == -[94m1[39;49;00m [95mor[39;49;00m errwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m start_new_session[90m[39;49;00m
                [95mand[39;49;00m process_group == -[94m1[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gids [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m uid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m umask < [94m0[39;49;00m):[90m[39;49;00m
            [96mself[39;49;00m._posix_spawn(args, executable, env, restore_signals,[90m[39;49;00m
                              p2cread, p2cwrite,[90m[39;49;00m
                              c2pread, c2pwrite,[90m[39;49;00m
                              errread, errwrite)[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        orig_executable = executable[90m[39;49;00m
    [90m[39;49;00m
        [90m# For transferring possible exec failure from child to parent.[39;49;00m[90m[39;49;00m
        [90m# Data format: "exception name:hex errno:description"[39;49;00m[90m[39;49;00m
        [90m# Pickle is not used; it is complex and involves memory allocation.[39;49;00m[90m[39;49;00m
        errpipe_read, errpipe_write = os.pipe()[90m[39;49;00m
        [90m# errpipe_write must not be in the standard io 0, 1, or 2 fd range.[39;49;00m[90m[39;49;00m
        low_fds_to_close = [][90m[39;49;00m
        [94mwhile[39;49;00m errpipe_write < [94m3[39;49;00m:[90m[39;49;00m
            low_fds_to_close.append(errpipe_write)[90m[39;49;00m
            errpipe_write = os.dup(errpipe_write)[90m[39;49;00m
        [94mfor[39;49;00m low_fd [95min[39;49;00m low_fds_to_close:[90m[39;49;00m
            os.close(low_fd)[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [90m# We must avoid complex work that could involve[39;49;00m[90m[39;49;00m
                [90m# malloc or free in the child process to avoid[39;49;00m[90m[39;49;00m
                [90m# potential deadlocks, thus we do all this here.[39;49;00m[90m[39;49;00m
                [90m# and pass it to fork_exec()[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
                [94mif[39;49;00m env [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    env_list = [][90m[39;49;00m
                    [94mfor[39;49;00m k, v [95min[39;49;00m env.items():[90m[39;49;00m
                        k = os.fsencode(k)[90m[39;49;00m
                        [94mif[39;49;00m [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m [95min[39;49;00m k:[90m[39;49;00m
                            [94mraise[39;49;00m [96mValueError[39;49;00m([33m"[39;49;00m[33millegal environment variable name[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                        env_list.append(k + [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m + os.fsencode(v))[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    env_list = [94mNone[39;49;00m  [90m# Use execv instead of execve.[39;49;00m[90m[39;49;00m
                executable = os.fsencode(executable)[90m[39;49;00m
                [94mif[39;49;00m os.path.dirname(executable):[90m[39;49;00m
                    executable_list = (executable,)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# This matches the behavior of os._execvpe().[39;49;00m[90m[39;49;00m
                    executable_list = [96mtuple[39;49;00m([90m[39;49;00m
                        os.path.join(os.fsencode([96mdir[39;49;00m), executable)[90m[39;49;00m
                        [94mfor[39;49;00m [96mdir[39;49;00m [95min[39;49;00m os.get_exec_path(env))[90m[39;49;00m
                fds_to_keep = [96mset[39;49;00m(pass_fds)[90m[39;49;00m
                fds_to_keep.add(errpipe_write)[90m[39;49;00m
                [96mself[39;49;00m.pid = _fork_exec([90m[39;49;00m
                        args, executable_list,[90m[39;49;00m
                        close_fds, [96mtuple[39;49;00m([96msorted[39;49;00m([96mmap[39;49;00m([96mint[39;49;00m, fds_to_keep))),[90m[39;49;00m
                        cwd, env_list,[90m[39;49;00m
                        p2cread, p2cwrite, c2pread, c2pwrite,[90m[39;49;00m
                        errread, errwrite,[90m[39;49;00m
                        errpipe_read, errpipe_write,[90m[39;49;00m
                        restore_signals, start_new_session,[90m[39;49;00m
                        process_group, gid, gids, uid, umask,[90m[39;49;00m
                        preexec_fn, _USE_VFORK)[90m[39;49;00m
                [96mself[39;49;00m._child_created = [94mTrue[39;49;00m[90m[39;49;00m
            [94mfinally[39;49;00m:[90m[39;49;00m
                [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
                os.close(errpipe_write)[90m[39;49;00m
    [90m[39;49;00m
            [96mself[39;49;00m._close_pipe_fds(p2cread, p2cwrite,[90m[39;49;00m
                                 c2pread, c2pwrite,[90m[39;49;00m
                                 errread, errwrite)[90m[39;49;00m
    [90m[39;49;00m
            [90m# Wait for exec to fail or succeed; possibly raising an[39;49;00m[90m[39;49;00m
            [90m# exception (limited in size)[39;49;00m[90m[39;49;00m
            errpipe_data = [96mbytearray[39;49;00m()[90m[39;49;00m
            [94mwhile[39;49;00m [94mTrue[39;49;00m:[90m[39;49;00m
                part = os.read(errpipe_read, [94m50000[39;49;00m)[90m[39;49;00m
                errpipe_data += part[90m[39;49;00m
                [94mif[39;49;00m [95mnot[39;49;00m part [95mor[39;49;00m [96mlen[39;49;00m(errpipe_data) > [94m50000[39;49;00m:[90m[39;49;00m
                    [94mbreak[39;49;00m[90m[39;49;00m
        [94mfinally[39;49;00m:[90m[39;49;00m
            [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
            os.close(errpipe_read)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m errpipe_data:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                pid, sts = os.waitpid([96mself[39;49;00m.pid, [94m0[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m pid == [96mself[39;49;00m.pid:[90m[39;49;00m
                    [96mself[39;49;00m._handle_exitstatus(sts)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.returncode = sys.maxsize[90m[39;49;00m
            [94mexcept[39;49;00m [96mChildProcessError[39;49;00m:[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                exception_name, hex_errno, err_msg = ([90m[39;49;00m
                        errpipe_data.split([33mb[39;49;00m[33m'[39;49;00m[33m:[39;49;00m[33m'[39;49;00m, [94m2[39;49;00m))[90m[39;49;00m
                [90m# The encoding here should match the encoding[39;49;00m[90m[39;49;00m
                [90m# written in by the subprocess implementations[39;49;00m[90m[39;49;00m
                [90m# like _posixsubprocess[39;49;00m[90m[39;49;00m
                err_msg = err_msg.decode()[90m[39;49;00m
            [94mexcept[39;49;00m [96mValueError[39;49;00m:[90m[39;49;00m
                exception_name = [33mb[39;49;00m[33m'[39;49;00m[33mSubprocessError[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                hex_errno = [33mb[39;49;00m[33m'[39;49;00m[33m0[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                err_msg = [33m'[39;49;00m[33mBad exception data from child: [39;49;00m[33m{!r}[39;49;00m[33m'[39;49;00m.format([90m[39;49;00m
                              [96mbytes[39;49;00m(errpipe_data))[90m[39;49;00m
            child_exception_type = [96mgetattr[39;49;00m([90m[39;49;00m
                    builtins, exception_name.decode([33m'[39;49;00m[33mascii[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                    SubprocessError)[90m[39;49;00m
            [94mif[39;49;00m [96missubclass[39;49;00m(child_exception_type, [96mOSError[39;49;00m) [95mand[39;49;00m hex_errno:[90m[39;49;00m
                errno_num = [96mint[39;49;00m(hex_errno, [94m16[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec:chdir[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    [90m# The error must be from chdir(cwd).[39;49;00m[90m[39;49;00m
                    err_filename = cwd[90m[39;49;00m
                [94melif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    err_filename = [94mNone[39;49;00m[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    err_filename = orig_executable[90m[39;49;00m
                [94mif[39;49;00m errno_num != [94m0[39;49;00m:[90m[39;49;00m
                    err_msg = os.strerror(errno_num)[90m[39;49;00m
                [94mif[39;49;00m err_filename [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
>                   [94mraise[39;49;00m child_exception_type(errno_num, err_msg, err_filename)[90m[39;49;00m
[1m[31mE                   FileNotFoundError: [Errno 2] No such file or directory: 'py'[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:1955: FileNotFoundError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m test_py_command.py::[1mtest_py_command_sets_pythonpath[0m - FileNotFoundError: [Errno 2] No such file or directory: 'py'
[31mFAILED[0m test_py_command.py::[1mtest_py_command_sets_custom_pythonpath[0m - FileNotFoundError: [Errno 2] No such file or directory: 'py'
[31mFAILED[0m test_py_command.py::[1mtest_py_command_runs_script[0m - FileNotFoundError: [Errno 2] No such file or directory: 'py'
[31m========================= [31m[1m3 failed[0m, [32m6 passed[0m[31m in 2.02s[0m[31m ==========================[0m

2024-10-02 12:00:27,805 - ERROR - Command error: 
2024-10-02 12:00:58,746 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:01:03,782 - ERROR - Error running command: Command '['pytest', '--color=yes', '.']' returned non-zero exit status 1.
2024-10-02 12:01:03,782 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 9 items

test_py_command.py [31mF[0m[31mF[0m[31mF[0m[31m                                                   [ 33%][0m
test_version_control_manager.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                   [100%][0m

=================================== FAILURES ===================================
[31m[1m_______________________ test_py_command_sets_pythonpath ________________________[0m

    [94mdef[39;49;00m [92mtest_py_command_sets_pythonpath[39;49;00m():[90m[39;49;00m
>       run_py_command([ [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpass[39;49;00m[33m"[39;49;00m ], [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m)[90m[39;49;00m

[1m[31mtest_py_command.py[0m:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtest_py_command.py[0m:9: in run_py_command
    result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m] + args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=[94mTrue[39;49;00m, check=[94mTrue[39;49;00m)[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:548: in run
    [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:1026: in __init__
    [96mself[39;49;00m._execute_child(args, executable, preexec_fn, close_fds,[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Popen: returncode: 255 args: ['py', '-c', 'pass']>
args = ['py', '-c', 'pass'], executable = b'py', preexec_fn = None
close_fds = True, pass_fds = (), cwd = None, env = None, startupinfo = None
creationflags = 0, shell = False, p2cread = -1, p2cwrite = -1, c2pread = 11
c2pwrite = 12, errread = 13, errwrite = 14, restore_signals = True, gid = None
gids = None, uid = None, umask = -1, start_new_session = False
process_group = -1

    [94mdef[39;49;00m [92m_execute_child[39;49;00m([96mself[39;49;00m, args, executable, preexec_fn, close_fds,[90m[39;49;00m
                       pass_fds, cwd, env,[90m[39;49;00m
                       startupinfo, creationflags, shell,[90m[39;49;00m
                       p2cread, p2cwrite,[90m[39;49;00m
                       c2pread, c2pwrite,[90m[39;49;00m
                       errread, errwrite,[90m[39;49;00m
                       restore_signals,[90m[39;49;00m
                       gid, gids, uid, umask,[90m[39;49;00m
                       start_new_session, process_group):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Execute program (POSIX version)"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(args, ([96mstr[39;49;00m, [96mbytes[39;49;00m)):[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melif[39;49;00m [96misinstance[39;49;00m(args, os.PathLike):[90m[39;49;00m
            [94mif[39;49;00m shell:[90m[39;49;00m
                [94mraise[39;49;00m [96mTypeError[39;49;00m([33m'[39;49;00m[33mpath-like args is not allowed when [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                [33m'[39;49;00m[33mshell is true[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            args = [96mlist[39;49;00m(args)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m shell:[90m[39;49;00m
            [90m# On Android the default shell is at '/system/bin/sh'.[39;49;00m[90m[39;49;00m
            unix_shell = ([33m'[39;49;00m[33m/system/bin/sh[39;49;00m[33m'[39;49;00m [94mif[39;49;00m[90m[39;49;00m
                      [96mhasattr[39;49;00m(sys, [33m'[39;49;00m[33mgetandroidapilevel[39;49;00m[33m'[39;49;00m) [94melse[39;49;00m [33m'[39;49;00m[33m/bin/sh[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [unix_shell, [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m] + args[90m[39;49;00m
            [94mif[39;49;00m executable:[90m[39;49;00m
                args[[94m0[39;49;00m] = executable[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m executable [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            executable = args[[94m0[39;49;00m][90m[39;49;00m
    [90m[39;49;00m
        sys.audit([33m"[39;49;00m[33msubprocess.Popen[39;49;00m[33m"[39;49;00m, executable, args, cwd, env)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m (_USE_POSIX_SPAWN[90m[39;49;00m
                [95mand[39;49;00m os.path.dirname(executable)[90m[39;49;00m
                [95mand[39;49;00m preexec_fn [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m close_fds[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m pass_fds[90m[39;49;00m
                [95mand[39;49;00m cwd [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m (p2cread == -[94m1[39;49;00m [95mor[39;49;00m p2cread > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (c2pwrite == -[94m1[39;49;00m [95mor[39;49;00m c2pwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (errwrite == -[94m1[39;49;00m [95mor[39;49;00m errwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m start_new_session[90m[39;49;00m
                [95mand[39;49;00m process_group == -[94m1[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gids [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m uid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m umask < [94m0[39;49;00m):[90m[39;49;00m
            [96mself[39;49;00m._posix_spawn(args, executable, env, restore_signals,[90m[39;49;00m
                              p2cread, p2cwrite,[90m[39;49;00m
                              c2pread, c2pwrite,[90m[39;49;00m
                              errread, errwrite)[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        orig_executable = executable[90m[39;49;00m
    [90m[39;49;00m
        [90m# For transferring possible exec failure from child to parent.[39;49;00m[90m[39;49;00m
        [90m# Data format: "exception name:hex errno:description"[39;49;00m[90m[39;49;00m
        [90m# Pickle is not used; it is complex and involves memory allocation.[39;49;00m[90m[39;49;00m
        errpipe_read, errpipe_write = os.pipe()[90m[39;49;00m
        [90m# errpipe_write must not be in the standard io 0, 1, or 2 fd range.[39;49;00m[90m[39;49;00m
        low_fds_to_close = [][90m[39;49;00m
        [94mwhile[39;49;00m errpipe_write < [94m3[39;49;00m:[90m[39;49;00m
            low_fds_to_close.append(errpipe_write)[90m[39;49;00m
            errpipe_write = os.dup(errpipe_write)[90m[39;49;00m
        [94mfor[39;49;00m low_fd [95min[39;49;00m low_fds_to_close:[90m[39;49;00m
            os.close(low_fd)[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [90m# We must avoid complex work that could involve[39;49;00m[90m[39;49;00m
                [90m# malloc or free in the child process to avoid[39;49;00m[90m[39;49;00m
                [90m# potential deadlocks, thus we do all this here.[39;49;00m[90m[39;49;00m
                [90m# and pass it to fork_exec()[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
                [94mif[39;49;00m env [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    env_list = [][90m[39;49;00m
                    [94mfor[39;49;00m k, v [95min[39;49;00m env.items():[90m[39;49;00m
                        k = os.fsencode(k)[90m[39;49;00m
                        [94mif[39;49;00m [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m [95min[39;49;00m k:[90m[39;49;00m
                            [94mraise[39;49;00m [96mValueError[39;49;00m([33m"[39;49;00m[33millegal environment variable name[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                        env_list.append(k + [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m + os.fsencode(v))[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    env_list = [94mNone[39;49;00m  [90m# Use execv instead of execve.[39;49;00m[90m[39;49;00m
                executable = os.fsencode(executable)[90m[39;49;00m
                [94mif[39;49;00m os.path.dirname(executable):[90m[39;49;00m
                    executable_list = (executable,)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# This matches the behavior of os._execvpe().[39;49;00m[90m[39;49;00m
                    executable_list = [96mtuple[39;49;00m([90m[39;49;00m
                        os.path.join(os.fsencode([96mdir[39;49;00m), executable)[90m[39;49;00m
                        [94mfor[39;49;00m [96mdir[39;49;00m [95min[39;49;00m os.get_exec_path(env))[90m[39;49;00m
                fds_to_keep = [96mset[39;49;00m(pass_fds)[90m[39;49;00m
                fds_to_keep.add(errpipe_write)[90m[39;49;00m
                [96mself[39;49;00m.pid = _fork_exec([90m[39;49;00m
                        args, executable_list,[90m[39;49;00m
                        close_fds, [96mtuple[39;49;00m([96msorted[39;49;00m([96mmap[39;49;00m([96mint[39;49;00m, fds_to_keep))),[90m[39;49;00m
                        cwd, env_list,[90m[39;49;00m
                        p2cread, p2cwrite, c2pread, c2pwrite,[90m[39;49;00m
                        errread, errwrite,[90m[39;49;00m
                        errpipe_read, errpipe_write,[90m[39;49;00m
                        restore_signals, start_new_session,[90m[39;49;00m
                        process_group, gid, gids, uid, umask,[90m[39;49;00m
                        preexec_fn, _USE_VFORK)[90m[39;49;00m
                [96mself[39;49;00m._child_created = [94mTrue[39;49;00m[90m[39;49;00m
            [94mfinally[39;49;00m:[90m[39;49;00m
                [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
                os.close(errpipe_write)[90m[39;49;00m
    [90m[39;49;00m
            [96mself[39;49;00m._close_pipe_fds(p2cread, p2cwrite,[90m[39;49;00m
                                 c2pread, c2pwrite,[90m[39;49;00m
                                 errread, errwrite)[90m[39;49;00m
    [90m[39;49;00m
            [90m# Wait for exec to fail or succeed; possibly raising an[39;49;00m[90m[39;49;00m
            [90m# exception (limited in size)[39;49;00m[90m[39;49;00m
            errpipe_data = [96mbytearray[39;49;00m()[90m[39;49;00m
            [94mwhile[39;49;00m [94mTrue[39;49;00m:[90m[39;49;00m
                part = os.read(errpipe_read, [94m50000[39;49;00m)[90m[39;49;00m
                errpipe_data += part[90m[39;49;00m
                [94mif[39;49;00m [95mnot[39;49;00m part [95mor[39;49;00m [96mlen[39;49;00m(errpipe_data) > [94m50000[39;49;00m:[90m[39;49;00m
                    [94mbreak[39;49;00m[90m[39;49;00m
        [94mfinally[39;49;00m:[90m[39;49;00m
            [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
            os.close(errpipe_read)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m errpipe_data:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                pid, sts = os.waitpid([96mself[39;49;00m.pid, [94m0[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m pid == [96mself[39;49;00m.pid:[90m[39;49;00m
                    [96mself[39;49;00m._handle_exitstatus(sts)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.returncode = sys.maxsize[90m[39;49;00m
            [94mexcept[39;49;00m [96mChildProcessError[39;49;00m:[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                exception_name, hex_errno, err_msg = ([90m[39;49;00m
                        errpipe_data.split([33mb[39;49;00m[33m'[39;49;00m[33m:[39;49;00m[33m'[39;49;00m, [94m2[39;49;00m))[90m[39;49;00m
                [90m# The encoding here should match the encoding[39;49;00m[90m[39;49;00m
                [90m# written in by the subprocess implementations[39;49;00m[90m[39;49;00m
                [90m# like _posixsubprocess[39;49;00m[90m[39;49;00m
                err_msg = err_msg.decode()[90m[39;49;00m
            [94mexcept[39;49;00m [96mValueError[39;49;00m:[90m[39;49;00m
                exception_name = [33mb[39;49;00m[33m'[39;49;00m[33mSubprocessError[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                hex_errno = [33mb[39;49;00m[33m'[39;49;00m[33m0[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                err_msg = [33m'[39;49;00m[33mBad exception data from child: [39;49;00m[33m{!r}[39;49;00m[33m'[39;49;00m.format([90m[39;49;00m
                              [96mbytes[39;49;00m(errpipe_data))[90m[39;49;00m
            child_exception_type = [96mgetattr[39;49;00m([90m[39;49;00m
                    builtins, exception_name.decode([33m'[39;49;00m[33mascii[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                    SubprocessError)[90m[39;49;00m
            [94mif[39;49;00m [96missubclass[39;49;00m(child_exception_type, [96mOSError[39;49;00m) [95mand[39;49;00m hex_errno:[90m[39;49;00m
                errno_num = [96mint[39;49;00m(hex_errno, [94m16[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec:chdir[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    [90m# The error must be from chdir(cwd).[39;49;00m[90m[39;49;00m
                    err_filename = cwd[90m[39;49;00m
                [94melif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    err_filename = [94mNone[39;49;00m[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    err_filename = orig_executable[90m[39;49;00m
                [94mif[39;49;00m errno_num != [94m0[39;49;00m:[90m[39;49;00m
                    err_msg = os.strerror(errno_num)[90m[39;49;00m
                [94mif[39;49;00m err_filename [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
>                   [94mraise[39;49;00m child_exception_type(errno_num, err_msg, err_filename)[90m[39;49;00m
[1m[31mE                   FileNotFoundError: [Errno 2] No such file or directory: 'py'[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:1955: FileNotFoundError
[31m[1m____________________ test_py_command_sets_custom_pythonpath ____________________[0m

    [94mdef[39;49;00m [92mtest_py_command_sets_custom_pythonpath[39;49;00m():[90m[39;49;00m
>       run_py_command([ [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpass[39;49;00m[33m"[39;49;00m ], [33m"[39;49;00m[33mOuter_dir[39;49;00m[33m"[39;49;00m)[90m[39;49;00m

[1m[31mtest_py_command.py[0m:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtest_py_command.py[0m:9: in run_py_command
    result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m] + args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=[94mTrue[39;49;00m, check=[94mTrue[39;49;00m)[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:548: in run
    [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:1026: in __init__
    [96mself[39;49;00m._execute_child(args, executable, preexec_fn, close_fds,[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Popen: returncode: 255 args: ['py', '-c', 'pass']>
args = ['py', '-c', 'pass'], executable = b'py', preexec_fn = None
close_fds = True, pass_fds = (), cwd = None, env = None, startupinfo = None
creationflags = 0, shell = False, p2cread = -1, p2cwrite = -1, c2pread = 11
c2pwrite = 12, errread = 13, errwrite = 14, restore_signals = True, gid = None
gids = None, uid = None, umask = -1, start_new_session = False
process_group = -1

    [94mdef[39;49;00m [92m_execute_child[39;49;00m([96mself[39;49;00m, args, executable, preexec_fn, close_fds,[90m[39;49;00m
                       pass_fds, cwd, env,[90m[39;49;00m
                       startupinfo, creationflags, shell,[90m[39;49;00m
                       p2cread, p2cwrite,[90m[39;49;00m
                       c2pread, c2pwrite,[90m[39;49;00m
                       errread, errwrite,[90m[39;49;00m
                       restore_signals,[90m[39;49;00m
                       gid, gids, uid, umask,[90m[39;49;00m
                       start_new_session, process_group):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Execute program (POSIX version)"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(args, ([96mstr[39;49;00m, [96mbytes[39;49;00m)):[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melif[39;49;00m [96misinstance[39;49;00m(args, os.PathLike):[90m[39;49;00m
            [94mif[39;49;00m shell:[90m[39;49;00m
                [94mraise[39;49;00m [96mTypeError[39;49;00m([33m'[39;49;00m[33mpath-like args is not allowed when [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                [33m'[39;49;00m[33mshell is true[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            args = [96mlist[39;49;00m(args)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m shell:[90m[39;49;00m
            [90m# On Android the default shell is at '/system/bin/sh'.[39;49;00m[90m[39;49;00m
            unix_shell = ([33m'[39;49;00m[33m/system/bin/sh[39;49;00m[33m'[39;49;00m [94mif[39;49;00m[90m[39;49;00m
                      [96mhasattr[39;49;00m(sys, [33m'[39;49;00m[33mgetandroidapilevel[39;49;00m[33m'[39;49;00m) [94melse[39;49;00m [33m'[39;49;00m[33m/bin/sh[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [unix_shell, [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m] + args[90m[39;49;00m
            [94mif[39;49;00m executable:[90m[39;49;00m
                args[[94m0[39;49;00m] = executable[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m executable [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            executable = args[[94m0[39;49;00m][90m[39;49;00m
    [90m[39;49;00m
        sys.audit([33m"[39;49;00m[33msubprocess.Popen[39;49;00m[33m"[39;49;00m, executable, args, cwd, env)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m (_USE_POSIX_SPAWN[90m[39;49;00m
                [95mand[39;49;00m os.path.dirname(executable)[90m[39;49;00m
                [95mand[39;49;00m preexec_fn [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m close_fds[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m pass_fds[90m[39;49;00m
                [95mand[39;49;00m cwd [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m (p2cread == -[94m1[39;49;00m [95mor[39;49;00m p2cread > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (c2pwrite == -[94m1[39;49;00m [95mor[39;49;00m c2pwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (errwrite == -[94m1[39;49;00m [95mor[39;49;00m errwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m start_new_session[90m[39;49;00m
                [95mand[39;49;00m process_group == -[94m1[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gids [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m uid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m umask < [94m0[39;49;00m):[90m[39;49;00m
            [96mself[39;49;00m._posix_spawn(args, executable, env, restore_signals,[90m[39;49;00m
                              p2cread, p2cwrite,[90m[39;49;00m
                              c2pread, c2pwrite,[90m[39;49;00m
                              errread, errwrite)[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        orig_executable = executable[90m[39;49;00m
    [90m[39;49;00m
        [90m# For transferring possible exec failure from child to parent.[39;49;00m[90m[39;49;00m
        [90m# Data format: "exception name:hex errno:description"[39;49;00m[90m[39;49;00m
        [90m# Pickle is not used; it is complex and involves memory allocation.[39;49;00m[90m[39;49;00m
        errpipe_read, errpipe_write = os.pipe()[90m[39;49;00m
        [90m# errpipe_write must not be in the standard io 0, 1, or 2 fd range.[39;49;00m[90m[39;49;00m
        low_fds_to_close = [][90m[39;49;00m
        [94mwhile[39;49;00m errpipe_write < [94m3[39;49;00m:[90m[39;49;00m
            low_fds_to_close.append(errpipe_write)[90m[39;49;00m
            errpipe_write = os.dup(errpipe_write)[90m[39;49;00m
        [94mfor[39;49;00m low_fd [95min[39;49;00m low_fds_to_close:[90m[39;49;00m
            os.close(low_fd)[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [90m# We must avoid complex work that could involve[39;49;00m[90m[39;49;00m
                [90m# malloc or free in the child process to avoid[39;49;00m[90m[39;49;00m
                [90m# potential deadlocks, thus we do all this here.[39;49;00m[90m[39;49;00m
                [90m# and pass it to fork_exec()[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
                [94mif[39;49;00m env [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    env_list = [][90m[39;49;00m
                    [94mfor[39;49;00m k, v [95min[39;49;00m env.items():[90m[39;49;00m
                        k = os.fsencode(k)[90m[39;49;00m
                        [94mif[39;49;00m [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m [95min[39;49;00m k:[90m[39;49;00m
                            [94mraise[39;49;00m [96mValueError[39;49;00m([33m"[39;49;00m[33millegal environment variable name[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                        env_list.append(k + [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m + os.fsencode(v))[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    env_list = [94mNone[39;49;00m  [90m# Use execv instead of execve.[39;49;00m[90m[39;49;00m
                executable = os.fsencode(executable)[90m[39;49;00m
                [94mif[39;49;00m os.path.dirname(executable):[90m[39;49;00m
                    executable_list = (executable,)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# This matches the behavior of os._execvpe().[39;49;00m[90m[39;49;00m
                    executable_list = [96mtuple[39;49;00m([90m[39;49;00m
                        os.path.join(os.fsencode([96mdir[39;49;00m), executable)[90m[39;49;00m
                        [94mfor[39;49;00m [96mdir[39;49;00m [95min[39;49;00m os.get_exec_path(env))[90m[39;49;00m
                fds_to_keep = [96mset[39;49;00m(pass_fds)[90m[39;49;00m
                fds_to_keep.add(errpipe_write)[90m[39;49;00m
                [96mself[39;49;00m.pid = _fork_exec([90m[39;49;00m
                        args, executable_list,[90m[39;49;00m
                        close_fds, [96mtuple[39;49;00m([96msorted[39;49;00m([96mmap[39;49;00m([96mint[39;49;00m, fds_to_keep))),[90m[39;49;00m
                        cwd, env_list,[90m[39;49;00m
                        p2cread, p2cwrite, c2pread, c2pwrite,[90m[39;49;00m
                        errread, errwrite,[90m[39;49;00m
                        errpipe_read, errpipe_write,[90m[39;49;00m
                        restore_signals, start_new_session,[90m[39;49;00m
                        process_group, gid, gids, uid, umask,[90m[39;49;00m
                        preexec_fn, _USE_VFORK)[90m[39;49;00m
                [96mself[39;49;00m._child_created = [94mTrue[39;49;00m[90m[39;49;00m
            [94mfinally[39;49;00m:[90m[39;49;00m
                [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
                os.close(errpipe_write)[90m[39;49;00m
    [90m[39;49;00m
            [96mself[39;49;00m._close_pipe_fds(p2cread, p2cwrite,[90m[39;49;00m
                                 c2pread, c2pwrite,[90m[39;49;00m
                                 errread, errwrite)[90m[39;49;00m
    [90m[39;49;00m
            [90m# Wait for exec to fail or succeed; possibly raising an[39;49;00m[90m[39;49;00m
            [90m# exception (limited in size)[39;49;00m[90m[39;49;00m
            errpipe_data = [96mbytearray[39;49;00m()[90m[39;49;00m
            [94mwhile[39;49;00m [94mTrue[39;49;00m:[90m[39;49;00m
                part = os.read(errpipe_read, [94m50000[39;49;00m)[90m[39;49;00m
                errpipe_data += part[90m[39;49;00m
                [94mif[39;49;00m [95mnot[39;49;00m part [95mor[39;49;00m [96mlen[39;49;00m(errpipe_data) > [94m50000[39;49;00m:[90m[39;49;00m
                    [94mbreak[39;49;00m[90m[39;49;00m
        [94mfinally[39;49;00m:[90m[39;49;00m
            [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
            os.close(errpipe_read)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m errpipe_data:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                pid, sts = os.waitpid([96mself[39;49;00m.pid, [94m0[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m pid == [96mself[39;49;00m.pid:[90m[39;49;00m
                    [96mself[39;49;00m._handle_exitstatus(sts)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.returncode = sys.maxsize[90m[39;49;00m
            [94mexcept[39;49;00m [96mChildProcessError[39;49;00m:[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                exception_name, hex_errno, err_msg = ([90m[39;49;00m
                        errpipe_data.split([33mb[39;49;00m[33m'[39;49;00m[33m:[39;49;00m[33m'[39;49;00m, [94m2[39;49;00m))[90m[39;49;00m
                [90m# The encoding here should match the encoding[39;49;00m[90m[39;49;00m
                [90m# written in by the subprocess implementations[39;49;00m[90m[39;49;00m
                [90m# like _posixsubprocess[39;49;00m[90m[39;49;00m
                err_msg = err_msg.decode()[90m[39;49;00m
            [94mexcept[39;49;00m [96mValueError[39;49;00m:[90m[39;49;00m
                exception_name = [33mb[39;49;00m[33m'[39;49;00m[33mSubprocessError[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                hex_errno = [33mb[39;49;00m[33m'[39;49;00m[33m0[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                err_msg = [33m'[39;49;00m[33mBad exception data from child: [39;49;00m[33m{!r}[39;49;00m[33m'[39;49;00m.format([90m[39;49;00m
                              [96mbytes[39;49;00m(errpipe_data))[90m[39;49;00m
            child_exception_type = [96mgetattr[39;49;00m([90m[39;49;00m
                    builtins, exception_name.decode([33m'[39;49;00m[33mascii[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                    SubprocessError)[90m[39;49;00m
            [94mif[39;49;00m [96missubclass[39;49;00m(child_exception_type, [96mOSError[39;49;00m) [95mand[39;49;00m hex_errno:[90m[39;49;00m
                errno_num = [96mint[39;49;00m(hex_errno, [94m16[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec:chdir[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    [90m# The error must be from chdir(cwd).[39;49;00m[90m[39;49;00m
                    err_filename = cwd[90m[39;49;00m
                [94melif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    err_filename = [94mNone[39;49;00m[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    err_filename = orig_executable[90m[39;49;00m
                [94mif[39;49;00m errno_num != [94m0[39;49;00m:[90m[39;49;00m
                    err_msg = os.strerror(errno_num)[90m[39;49;00m
                [94mif[39;49;00m err_filename [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
>                   [94mraise[39;49;00m child_exception_type(errno_num, err_msg, err_filename)[90m[39;49;00m
[1m[31mE                   FileNotFoundError: [Errno 2] No such file or directory: 'py'[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:1955: FileNotFoundError
[31m[1m_________________________ test_py_command_runs_script __________________________[0m

    [94mdef[39;49;00m [92mtest_py_command_runs_script[39;49;00m():[90m[39;49;00m
        script_content = [33m"[39;49;00m[33mprint([39;49;00m[33m'[39;49;00m[33mHello, world![39;49;00m[33m'[39;49;00m[33m)[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m [96mopen[39;49;00m([33m"[39;49;00m[33mtest_script.py[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mw[39;49;00m[33m"[39;49;00m) [94mas[39;49;00m f:[90m[39;49;00m
            f.write(script_content)[90m[39;49;00m
>       output = run_py_command([[33m"[39;49;00m[33mtest_script.py[39;49;00m[33m"[39;49;00m], [33m"[39;49;00m[33menvy[39;49;00m[33m"[39;49;00m)[90m[39;49;00m

[1m[31mtest_py_command.py[0m:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtest_py_command.py[0m:9: in run_py_command
    result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m] + args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=[94mTrue[39;49;00m, check=[94mTrue[39;49;00m)[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:548: in run
    [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:1026: in __init__
    [96mself[39;49;00m._execute_child(args, executable, preexec_fn, close_fds,[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Popen: returncode: 255 args: ['py', 'test_script.py']>
args = ['py', 'test_script.py'], executable = b'py', preexec_fn = None
close_fds = True, pass_fds = (), cwd = None, env = None, startupinfo = None
creationflags = 0, shell = False, p2cread = -1, p2cwrite = -1, c2pread = 11
c2pwrite = 12, errread = 13, errwrite = 14, restore_signals = True, gid = None
gids = None, uid = None, umask = -1, start_new_session = False
process_group = -1

    [94mdef[39;49;00m [92m_execute_child[39;49;00m([96mself[39;49;00m, args, executable, preexec_fn, close_fds,[90m[39;49;00m
                       pass_fds, cwd, env,[90m[39;49;00m
                       startupinfo, creationflags, shell,[90m[39;49;00m
                       p2cread, p2cwrite,[90m[39;49;00m
                       c2pread, c2pwrite,[90m[39;49;00m
                       errread, errwrite,[90m[39;49;00m
                       restore_signals,[90m[39;49;00m
                       gid, gids, uid, umask,[90m[39;49;00m
                       start_new_session, process_group):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Execute program (POSIX version)"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(args, ([96mstr[39;49;00m, [96mbytes[39;49;00m)):[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melif[39;49;00m [96misinstance[39;49;00m(args, os.PathLike):[90m[39;49;00m
            [94mif[39;49;00m shell:[90m[39;49;00m
                [94mraise[39;49;00m [96mTypeError[39;49;00m([33m'[39;49;00m[33mpath-like args is not allowed when [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                [33m'[39;49;00m[33mshell is true[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            args = [96mlist[39;49;00m(args)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m shell:[90m[39;49;00m
            [90m# On Android the default shell is at '/system/bin/sh'.[39;49;00m[90m[39;49;00m
            unix_shell = ([33m'[39;49;00m[33m/system/bin/sh[39;49;00m[33m'[39;49;00m [94mif[39;49;00m[90m[39;49;00m
                      [96mhasattr[39;49;00m(sys, [33m'[39;49;00m[33mgetandroidapilevel[39;49;00m[33m'[39;49;00m) [94melse[39;49;00m [33m'[39;49;00m[33m/bin/sh[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [unix_shell, [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m] + args[90m[39;49;00m
            [94mif[39;49;00m executable:[90m[39;49;00m
                args[[94m0[39;49;00m] = executable[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m executable [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            executable = args[[94m0[39;49;00m][90m[39;49;00m
    [90m[39;49;00m
        sys.audit([33m"[39;49;00m[33msubprocess.Popen[39;49;00m[33m"[39;49;00m, executable, args, cwd, env)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m (_USE_POSIX_SPAWN[90m[39;49;00m
                [95mand[39;49;00m os.path.dirname(executable)[90m[39;49;00m
                [95mand[39;49;00m preexec_fn [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m close_fds[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m pass_fds[90m[39;49;00m
                [95mand[39;49;00m cwd [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m (p2cread == -[94m1[39;49;00m [95mor[39;49;00m p2cread > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (c2pwrite == -[94m1[39;49;00m [95mor[39;49;00m c2pwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (errwrite == -[94m1[39;49;00m [95mor[39;49;00m errwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m start_new_session[90m[39;49;00m
                [95mand[39;49;00m process_group == -[94m1[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gids [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m uid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m umask < [94m0[39;49;00m):[90m[39;49;00m
            [96mself[39;49;00m._posix_spawn(args, executable, env, restore_signals,[90m[39;49;00m
                              p2cread, p2cwrite,[90m[39;49;00m
                              c2pread, c2pwrite,[90m[39;49;00m
                              errread, errwrite)[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        orig_executable = executable[90m[39;49;00m
    [90m[39;49;00m
        [90m# For transferring possible exec failure from child to parent.[39;49;00m[90m[39;49;00m
        [90m# Data format: "exception name:hex errno:description"[39;49;00m[90m[39;49;00m
        [90m# Pickle is not used; it is complex and involves memory allocation.[39;49;00m[90m[39;49;00m
        errpipe_read, errpipe_write = os.pipe()[90m[39;49;00m
        [90m# errpipe_write must not be in the standard io 0, 1, or 2 fd range.[39;49;00m[90m[39;49;00m
        low_fds_to_close = [][90m[39;49;00m
        [94mwhile[39;49;00m errpipe_write < [94m3[39;49;00m:[90m[39;49;00m
            low_fds_to_close.append(errpipe_write)[90m[39;49;00m
            errpipe_write = os.dup(errpipe_write)[90m[39;49;00m
        [94mfor[39;49;00m low_fd [95min[39;49;00m low_fds_to_close:[90m[39;49;00m
            os.close(low_fd)[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [90m# We must avoid complex work that could involve[39;49;00m[90m[39;49;00m
                [90m# malloc or free in the child process to avoid[39;49;00m[90m[39;49;00m
                [90m# potential deadlocks, thus we do all this here.[39;49;00m[90m[39;49;00m
                [90m# and pass it to fork_exec()[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
                [94mif[39;49;00m env [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    env_list = [][90m[39;49;00m
                    [94mfor[39;49;00m k, v [95min[39;49;00m env.items():[90m[39;49;00m
                        k = os.fsencode(k)[90m[39;49;00m
                        [94mif[39;49;00m [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m [95min[39;49;00m k:[90m[39;49;00m
                            [94mraise[39;49;00m [96mValueError[39;49;00m([33m"[39;49;00m[33millegal environment variable name[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                        env_list.append(k + [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m + os.fsencode(v))[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    env_list = [94mNone[39;49;00m  [90m# Use execv instead of execve.[39;49;00m[90m[39;49;00m
                executable = os.fsencode(executable)[90m[39;49;00m
                [94mif[39;49;00m os.path.dirname(executable):[90m[39;49;00m
                    executable_list = (executable,)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# This matches the behavior of os._execvpe().[39;49;00m[90m[39;49;00m
                    executable_list = [96mtuple[39;49;00m([90m[39;49;00m
                        os.path.join(os.fsencode([96mdir[39;49;00m), executable)[90m[39;49;00m
                        [94mfor[39;49;00m [96mdir[39;49;00m [95min[39;49;00m os.get_exec_path(env))[90m[39;49;00m
                fds_to_keep = [96mset[39;49;00m(pass_fds)[90m[39;49;00m
                fds_to_keep.add(errpipe_write)[90m[39;49;00m
                [96mself[39;49;00m.pid = _fork_exec([90m[39;49;00m
                        args, executable_list,[90m[39;49;00m
                        close_fds, [96mtuple[39;49;00m([96msorted[39;49;00m([96mmap[39;49;00m([96mint[39;49;00m, fds_to_keep))),[90m[39;49;00m
                        cwd, env_list,[90m[39;49;00m
                        p2cread, p2cwrite, c2pread, c2pwrite,[90m[39;49;00m
                        errread, errwrite,[90m[39;49;00m
                        errpipe_read, errpipe_write,[90m[39;49;00m
                        restore_signals, start_new_session,[90m[39;49;00m
                        process_group, gid, gids, uid, umask,[90m[39;49;00m
                        preexec_fn, _USE_VFORK)[90m[39;49;00m
                [96mself[39;49;00m._child_created = [94mTrue[39;49;00m[90m[39;49;00m
            [94mfinally[39;49;00m:[90m[39;49;00m
                [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
                os.close(errpipe_write)[90m[39;49;00m
    [90m[39;49;00m
            [96mself[39;49;00m._close_pipe_fds(p2cread, p2cwrite,[90m[39;49;00m
                                 c2pread, c2pwrite,[90m[39;49;00m
                                 errread, errwrite)[90m[39;49;00m
    [90m[39;49;00m
            [90m# Wait for exec to fail or succeed; possibly raising an[39;49;00m[90m[39;49;00m
            [90m# exception (limited in size)[39;49;00m[90m[39;49;00m
            errpipe_data = [96mbytearray[39;49;00m()[90m[39;49;00m
            [94mwhile[39;49;00m [94mTrue[39;49;00m:[90m[39;49;00m
                part = os.read(errpipe_read, [94m50000[39;49;00m)[90m[39;49;00m
                errpipe_data += part[90m[39;49;00m
                [94mif[39;49;00m [95mnot[39;49;00m part [95mor[39;49;00m [96mlen[39;49;00m(errpipe_data) > [94m50000[39;49;00m:[90m[39;49;00m
                    [94mbreak[39;49;00m[90m[39;49;00m
        [94mfinally[39;49;00m:[90m[39;49;00m
            [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
            os.close(errpipe_read)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m errpipe_data:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                pid, sts = os.waitpid([96mself[39;49;00m.pid, [94m0[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m pid == [96mself[39;49;00m.pid:[90m[39;49;00m
                    [96mself[39;49;00m._handle_exitstatus(sts)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.returncode = sys.maxsize[90m[39;49;00m
            [94mexcept[39;49;00m [96mChildProcessError[39;49;00m:[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                exception_name, hex_errno, err_msg = ([90m[39;49;00m
                        errpipe_data.split([33mb[39;49;00m[33m'[39;49;00m[33m:[39;49;00m[33m'[39;49;00m, [94m2[39;49;00m))[90m[39;49;00m
                [90m# The encoding here should match the encoding[39;49;00m[90m[39;49;00m
                [90m# written in by the subprocess implementations[39;49;00m[90m[39;49;00m
                [90m# like _posixsubprocess[39;49;00m[90m[39;49;00m
                err_msg = err_msg.decode()[90m[39;49;00m
            [94mexcept[39;49;00m [96mValueError[39;49;00m:[90m[39;49;00m
                exception_name = [33mb[39;49;00m[33m'[39;49;00m[33mSubprocessError[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                hex_errno = [33mb[39;49;00m[33m'[39;49;00m[33m0[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                err_msg = [33m'[39;49;00m[33mBad exception data from child: [39;49;00m[33m{!r}[39;49;00m[33m'[39;49;00m.format([90m[39;49;00m
                              [96mbytes[39;49;00m(errpipe_data))[90m[39;49;00m
            child_exception_type = [96mgetattr[39;49;00m([90m[39;49;00m
                    builtins, exception_name.decode([33m'[39;49;00m[33mascii[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                    SubprocessError)[90m[39;49;00m
            [94mif[39;49;00m [96missubclass[39;49;00m(child_exception_type, [96mOSError[39;49;00m) [95mand[39;49;00m hex_errno:[90m[39;49;00m
                errno_num = [96mint[39;49;00m(hex_errno, [94m16[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec:chdir[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    [90m# The error must be from chdir(cwd).[39;49;00m[90m[39;49;00m
                    err_filename = cwd[90m[39;49;00m
                [94melif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    err_filename = [94mNone[39;49;00m[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    err_filename = orig_executable[90m[39;49;00m
                [94mif[39;49;00m errno_num != [94m0[39;49;00m:[90m[39;49;00m
                    err_msg = os.strerror(errno_num)[90m[39;49;00m
                [94mif[39;49;00m err_filename [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
>                   [94mraise[39;49;00m child_exception_type(errno_num, err_msg, err_filename)[90m[39;49;00m
[1m[31mE                   FileNotFoundError: [Errno 2] No such file or directory: 'py'[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:1955: FileNotFoundError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m test_py_command.py::[1mtest_py_command_sets_pythonpath[0m - FileNotFoundError: [Errno 2] No such file or directory: 'py'
[31mFAILED[0m test_py_command.py::[1mtest_py_command_sets_custom_pythonpath[0m - FileNotFoundError: [Errno 2] No such file or directory: 'py'
[31mFAILED[0m test_py_command.py::[1mtest_py_command_runs_script[0m - FileNotFoundError: [Errno 2] No such file or directory: 'py'
[31m========================= [31m[1m3 failed[0m, [32m6 passed[0m[31m in 3.32s[0m[31m ==========================[0m

2024-10-02 12:01:03,785 - ERROR - Command error: 
2024-10-02 12:01:42,732 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:01:56,535 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:03:12,742 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:04:06,032 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:04:10,502 - ERROR - Error running command: Command '['pytest', '--color=yes', '.']' returned non-zero exit status 1.
2024-10-02 12:04:10,503 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 9 items

test_py_command.py [31mF[0m[31mF[0m[31mF[0m[31m                                                   [ 33%][0m
test_version_control_manager.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                   [100%][0m

=================================== FAILURES ===================================
[31m[1m_______________________ test_py_command_sets_pythonpath ________________________[0m

    [94mdef[39;49;00m [92mtest_py_command_sets_pythonpath[39;49;00m():[90m[39;49;00m
>       run_py_command([ [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpass[39;49;00m[33m"[39;49;00m ], [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m)[90m[39;49;00m

[1m[31mtest_py_command.py[0m:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtest_py_command.py[0m:9: in run_py_command
    result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m] + args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=[94mTrue[39;49;00m, check=[94mTrue[39;49;00m)[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:548: in run
    [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:1026: in __init__
    [96mself[39;49;00m._execute_child(args, executable, preexec_fn, close_fds,[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Popen: returncode: 255 args: ['py', '-c', 'pass']>
args = ['py', '-c', 'pass'], executable = b'py', preexec_fn = None
close_fds = True, pass_fds = (), cwd = None, env = None, startupinfo = None
creationflags = 0, shell = False, p2cread = -1, p2cwrite = -1, c2pread = 11
c2pwrite = 12, errread = 13, errwrite = 14, restore_signals = True, gid = None
gids = None, uid = None, umask = -1, start_new_session = False
process_group = -1

    [94mdef[39;49;00m [92m_execute_child[39;49;00m([96mself[39;49;00m, args, executable, preexec_fn, close_fds,[90m[39;49;00m
                       pass_fds, cwd, env,[90m[39;49;00m
                       startupinfo, creationflags, shell,[90m[39;49;00m
                       p2cread, p2cwrite,[90m[39;49;00m
                       c2pread, c2pwrite,[90m[39;49;00m
                       errread, errwrite,[90m[39;49;00m
                       restore_signals,[90m[39;49;00m
                       gid, gids, uid, umask,[90m[39;49;00m
                       start_new_session, process_group):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Execute program (POSIX version)"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(args, ([96mstr[39;49;00m, [96mbytes[39;49;00m)):[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melif[39;49;00m [96misinstance[39;49;00m(args, os.PathLike):[90m[39;49;00m
            [94mif[39;49;00m shell:[90m[39;49;00m
                [94mraise[39;49;00m [96mTypeError[39;49;00m([33m'[39;49;00m[33mpath-like args is not allowed when [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                [33m'[39;49;00m[33mshell is true[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            args = [96mlist[39;49;00m(args)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m shell:[90m[39;49;00m
            [90m# On Android the default shell is at '/system/bin/sh'.[39;49;00m[90m[39;49;00m
            unix_shell = ([33m'[39;49;00m[33m/system/bin/sh[39;49;00m[33m'[39;49;00m [94mif[39;49;00m[90m[39;49;00m
                      [96mhasattr[39;49;00m(sys, [33m'[39;49;00m[33mgetandroidapilevel[39;49;00m[33m'[39;49;00m) [94melse[39;49;00m [33m'[39;49;00m[33m/bin/sh[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [unix_shell, [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m] + args[90m[39;49;00m
            [94mif[39;49;00m executable:[90m[39;49;00m
                args[[94m0[39;49;00m] = executable[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m executable [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            executable = args[[94m0[39;49;00m][90m[39;49;00m
    [90m[39;49;00m
        sys.audit([33m"[39;49;00m[33msubprocess.Popen[39;49;00m[33m"[39;49;00m, executable, args, cwd, env)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m (_USE_POSIX_SPAWN[90m[39;49;00m
                [95mand[39;49;00m os.path.dirname(executable)[90m[39;49;00m
                [95mand[39;49;00m preexec_fn [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m close_fds[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m pass_fds[90m[39;49;00m
                [95mand[39;49;00m cwd [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m (p2cread == -[94m1[39;49;00m [95mor[39;49;00m p2cread > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (c2pwrite == -[94m1[39;49;00m [95mor[39;49;00m c2pwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (errwrite == -[94m1[39;49;00m [95mor[39;49;00m errwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m start_new_session[90m[39;49;00m
                [95mand[39;49;00m process_group == -[94m1[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gids [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m uid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m umask < [94m0[39;49;00m):[90m[39;49;00m
            [96mself[39;49;00m._posix_spawn(args, executable, env, restore_signals,[90m[39;49;00m
                              p2cread, p2cwrite,[90m[39;49;00m
                              c2pread, c2pwrite,[90m[39;49;00m
                              errread, errwrite)[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        orig_executable = executable[90m[39;49;00m
    [90m[39;49;00m
        [90m# For transferring possible exec failure from child to parent.[39;49;00m[90m[39;49;00m
        [90m# Data format: "exception name:hex errno:description"[39;49;00m[90m[39;49;00m
        [90m# Pickle is not used; it is complex and involves memory allocation.[39;49;00m[90m[39;49;00m
        errpipe_read, errpipe_write = os.pipe()[90m[39;49;00m
        [90m# errpipe_write must not be in the standard io 0, 1, or 2 fd range.[39;49;00m[90m[39;49;00m
        low_fds_to_close = [][90m[39;49;00m
        [94mwhile[39;49;00m errpipe_write < [94m3[39;49;00m:[90m[39;49;00m
            low_fds_to_close.append(errpipe_write)[90m[39;49;00m
            errpipe_write = os.dup(errpipe_write)[90m[39;49;00m
        [94mfor[39;49;00m low_fd [95min[39;49;00m low_fds_to_close:[90m[39;49;00m
            os.close(low_fd)[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [90m# We must avoid complex work that could involve[39;49;00m[90m[39;49;00m
                [90m# malloc or free in the child process to avoid[39;49;00m[90m[39;49;00m
                [90m# potential deadlocks, thus we do all this here.[39;49;00m[90m[39;49;00m
                [90m# and pass it to fork_exec()[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
                [94mif[39;49;00m env [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    env_list = [][90m[39;49;00m
                    [94mfor[39;49;00m k, v [95min[39;49;00m env.items():[90m[39;49;00m
                        k = os.fsencode(k)[90m[39;49;00m
                        [94mif[39;49;00m [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m [95min[39;49;00m k:[90m[39;49;00m
                            [94mraise[39;49;00m [96mValueError[39;49;00m([33m"[39;49;00m[33millegal environment variable name[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                        env_list.append(k + [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m + os.fsencode(v))[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    env_list = [94mNone[39;49;00m  [90m# Use execv instead of execve.[39;49;00m[90m[39;49;00m
                executable = os.fsencode(executable)[90m[39;49;00m
                [94mif[39;49;00m os.path.dirname(executable):[90m[39;49;00m
                    executable_list = (executable,)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# This matches the behavior of os._execvpe().[39;49;00m[90m[39;49;00m
                    executable_list = [96mtuple[39;49;00m([90m[39;49;00m
                        os.path.join(os.fsencode([96mdir[39;49;00m), executable)[90m[39;49;00m
                        [94mfor[39;49;00m [96mdir[39;49;00m [95min[39;49;00m os.get_exec_path(env))[90m[39;49;00m
                fds_to_keep = [96mset[39;49;00m(pass_fds)[90m[39;49;00m
                fds_to_keep.add(errpipe_write)[90m[39;49;00m
                [96mself[39;49;00m.pid = _fork_exec([90m[39;49;00m
                        args, executable_list,[90m[39;49;00m
                        close_fds, [96mtuple[39;49;00m([96msorted[39;49;00m([96mmap[39;49;00m([96mint[39;49;00m, fds_to_keep))),[90m[39;49;00m
                        cwd, env_list,[90m[39;49;00m
                        p2cread, p2cwrite, c2pread, c2pwrite,[90m[39;49;00m
                        errread, errwrite,[90m[39;49;00m
                        errpipe_read, errpipe_write,[90m[39;49;00m
                        restore_signals, start_new_session,[90m[39;49;00m
                        process_group, gid, gids, uid, umask,[90m[39;49;00m
                        preexec_fn, _USE_VFORK)[90m[39;49;00m
                [96mself[39;49;00m._child_created = [94mTrue[39;49;00m[90m[39;49;00m
            [94mfinally[39;49;00m:[90m[39;49;00m
                [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
                os.close(errpipe_write)[90m[39;49;00m
    [90m[39;49;00m
            [96mself[39;49;00m._close_pipe_fds(p2cread, p2cwrite,[90m[39;49;00m
                                 c2pread, c2pwrite,[90m[39;49;00m
                                 errread, errwrite)[90m[39;49;00m
    [90m[39;49;00m
            [90m# Wait for exec to fail or succeed; possibly raising an[39;49;00m[90m[39;49;00m
            [90m# exception (limited in size)[39;49;00m[90m[39;49;00m
            errpipe_data = [96mbytearray[39;49;00m()[90m[39;49;00m
            [94mwhile[39;49;00m [94mTrue[39;49;00m:[90m[39;49;00m
                part = os.read(errpipe_read, [94m50000[39;49;00m)[90m[39;49;00m
                errpipe_data += part[90m[39;49;00m
                [94mif[39;49;00m [95mnot[39;49;00m part [95mor[39;49;00m [96mlen[39;49;00m(errpipe_data) > [94m50000[39;49;00m:[90m[39;49;00m
                    [94mbreak[39;49;00m[90m[39;49;00m
        [94mfinally[39;49;00m:[90m[39;49;00m
            [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
            os.close(errpipe_read)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m errpipe_data:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                pid, sts = os.waitpid([96mself[39;49;00m.pid, [94m0[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m pid == [96mself[39;49;00m.pid:[90m[39;49;00m
                    [96mself[39;49;00m._handle_exitstatus(sts)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.returncode = sys.maxsize[90m[39;49;00m
            [94mexcept[39;49;00m [96mChildProcessError[39;49;00m:[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                exception_name, hex_errno, err_msg = ([90m[39;49;00m
                        errpipe_data.split([33mb[39;49;00m[33m'[39;49;00m[33m:[39;49;00m[33m'[39;49;00m, [94m2[39;49;00m))[90m[39;49;00m
                [90m# The encoding here should match the encoding[39;49;00m[90m[39;49;00m
                [90m# written in by the subprocess implementations[39;49;00m[90m[39;49;00m
                [90m# like _posixsubprocess[39;49;00m[90m[39;49;00m
                err_msg = err_msg.decode()[90m[39;49;00m
            [94mexcept[39;49;00m [96mValueError[39;49;00m:[90m[39;49;00m
                exception_name = [33mb[39;49;00m[33m'[39;49;00m[33mSubprocessError[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                hex_errno = [33mb[39;49;00m[33m'[39;49;00m[33m0[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                err_msg = [33m'[39;49;00m[33mBad exception data from child: [39;49;00m[33m{!r}[39;49;00m[33m'[39;49;00m.format([90m[39;49;00m
                              [96mbytes[39;49;00m(errpipe_data))[90m[39;49;00m
            child_exception_type = [96mgetattr[39;49;00m([90m[39;49;00m
                    builtins, exception_name.decode([33m'[39;49;00m[33mascii[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                    SubprocessError)[90m[39;49;00m
            [94mif[39;49;00m [96missubclass[39;49;00m(child_exception_type, [96mOSError[39;49;00m) [95mand[39;49;00m hex_errno:[90m[39;49;00m
                errno_num = [96mint[39;49;00m(hex_errno, [94m16[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec:chdir[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    [90m# The error must be from chdir(cwd).[39;49;00m[90m[39;49;00m
                    err_filename = cwd[90m[39;49;00m
                [94melif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    err_filename = [94mNone[39;49;00m[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    err_filename = orig_executable[90m[39;49;00m
                [94mif[39;49;00m errno_num != [94m0[39;49;00m:[90m[39;49;00m
                    err_msg = os.strerror(errno_num)[90m[39;49;00m
                [94mif[39;49;00m err_filename [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
>                   [94mraise[39;49;00m child_exception_type(errno_num, err_msg, err_filename)[90m[39;49;00m
[1m[31mE                   FileNotFoundError: [Errno 2] No such file or directory: 'py'[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:1955: FileNotFoundError
[31m[1m____________________ test_py_command_sets_custom_pythonpath ____________________[0m

    [94mdef[39;49;00m [92mtest_py_command_sets_custom_pythonpath[39;49;00m():[90m[39;49;00m
>       run_py_command([ [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpass[39;49;00m[33m"[39;49;00m ], [33m"[39;49;00m[33mOuter_dir[39;49;00m[33m"[39;49;00m)[90m[39;49;00m

[1m[31mtest_py_command.py[0m:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtest_py_command.py[0m:9: in run_py_command
    result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m] + args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=[94mTrue[39;49;00m, check=[94mTrue[39;49;00m)[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:548: in run
    [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:1026: in __init__
    [96mself[39;49;00m._execute_child(args, executable, preexec_fn, close_fds,[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Popen: returncode: 255 args: ['py', '-c', 'pass']>
args = ['py', '-c', 'pass'], executable = b'py', preexec_fn = None
close_fds = True, pass_fds = (), cwd = None, env = None, startupinfo = None
creationflags = 0, shell = False, p2cread = -1, p2cwrite = -1, c2pread = 11
c2pwrite = 12, errread = 13, errwrite = 14, restore_signals = True, gid = None
gids = None, uid = None, umask = -1, start_new_session = False
process_group = -1

    [94mdef[39;49;00m [92m_execute_child[39;49;00m([96mself[39;49;00m, args, executable, preexec_fn, close_fds,[90m[39;49;00m
                       pass_fds, cwd, env,[90m[39;49;00m
                       startupinfo, creationflags, shell,[90m[39;49;00m
                       p2cread, p2cwrite,[90m[39;49;00m
                       c2pread, c2pwrite,[90m[39;49;00m
                       errread, errwrite,[90m[39;49;00m
                       restore_signals,[90m[39;49;00m
                       gid, gids, uid, umask,[90m[39;49;00m
                       start_new_session, process_group):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Execute program (POSIX version)"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(args, ([96mstr[39;49;00m, [96mbytes[39;49;00m)):[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melif[39;49;00m [96misinstance[39;49;00m(args, os.PathLike):[90m[39;49;00m
            [94mif[39;49;00m shell:[90m[39;49;00m
                [94mraise[39;49;00m [96mTypeError[39;49;00m([33m'[39;49;00m[33mpath-like args is not allowed when [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                [33m'[39;49;00m[33mshell is true[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            args = [96mlist[39;49;00m(args)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m shell:[90m[39;49;00m
            [90m# On Android the default shell is at '/system/bin/sh'.[39;49;00m[90m[39;49;00m
            unix_shell = ([33m'[39;49;00m[33m/system/bin/sh[39;49;00m[33m'[39;49;00m [94mif[39;49;00m[90m[39;49;00m
                      [96mhasattr[39;49;00m(sys, [33m'[39;49;00m[33mgetandroidapilevel[39;49;00m[33m'[39;49;00m) [94melse[39;49;00m [33m'[39;49;00m[33m/bin/sh[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [unix_shell, [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m] + args[90m[39;49;00m
            [94mif[39;49;00m executable:[90m[39;49;00m
                args[[94m0[39;49;00m] = executable[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m executable [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            executable = args[[94m0[39;49;00m][90m[39;49;00m
    [90m[39;49;00m
        sys.audit([33m"[39;49;00m[33msubprocess.Popen[39;49;00m[33m"[39;49;00m, executable, args, cwd, env)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m (_USE_POSIX_SPAWN[90m[39;49;00m
                [95mand[39;49;00m os.path.dirname(executable)[90m[39;49;00m
                [95mand[39;49;00m preexec_fn [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m close_fds[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m pass_fds[90m[39;49;00m
                [95mand[39;49;00m cwd [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m (p2cread == -[94m1[39;49;00m [95mor[39;49;00m p2cread > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (c2pwrite == -[94m1[39;49;00m [95mor[39;49;00m c2pwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (errwrite == -[94m1[39;49;00m [95mor[39;49;00m errwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m start_new_session[90m[39;49;00m
                [95mand[39;49;00m process_group == -[94m1[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gids [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m uid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m umask < [94m0[39;49;00m):[90m[39;49;00m
            [96mself[39;49;00m._posix_spawn(args, executable, env, restore_signals,[90m[39;49;00m
                              p2cread, p2cwrite,[90m[39;49;00m
                              c2pread, c2pwrite,[90m[39;49;00m
                              errread, errwrite)[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        orig_executable = executable[90m[39;49;00m
    [90m[39;49;00m
        [90m# For transferring possible exec failure from child to parent.[39;49;00m[90m[39;49;00m
        [90m# Data format: "exception name:hex errno:description"[39;49;00m[90m[39;49;00m
        [90m# Pickle is not used; it is complex and involves memory allocation.[39;49;00m[90m[39;49;00m
        errpipe_read, errpipe_write = os.pipe()[90m[39;49;00m
        [90m# errpipe_write must not be in the standard io 0, 1, or 2 fd range.[39;49;00m[90m[39;49;00m
        low_fds_to_close = [][90m[39;49;00m
        [94mwhile[39;49;00m errpipe_write < [94m3[39;49;00m:[90m[39;49;00m
            low_fds_to_close.append(errpipe_write)[90m[39;49;00m
            errpipe_write = os.dup(errpipe_write)[90m[39;49;00m
        [94mfor[39;49;00m low_fd [95min[39;49;00m low_fds_to_close:[90m[39;49;00m
            os.close(low_fd)[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [90m# We must avoid complex work that could involve[39;49;00m[90m[39;49;00m
                [90m# malloc or free in the child process to avoid[39;49;00m[90m[39;49;00m
                [90m# potential deadlocks, thus we do all this here.[39;49;00m[90m[39;49;00m
                [90m# and pass it to fork_exec()[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
                [94mif[39;49;00m env [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    env_list = [][90m[39;49;00m
                    [94mfor[39;49;00m k, v [95min[39;49;00m env.items():[90m[39;49;00m
                        k = os.fsencode(k)[90m[39;49;00m
                        [94mif[39;49;00m [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m [95min[39;49;00m k:[90m[39;49;00m
                            [94mraise[39;49;00m [96mValueError[39;49;00m([33m"[39;49;00m[33millegal environment variable name[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                        env_list.append(k + [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m + os.fsencode(v))[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    env_list = [94mNone[39;49;00m  [90m# Use execv instead of execve.[39;49;00m[90m[39;49;00m
                executable = os.fsencode(executable)[90m[39;49;00m
                [94mif[39;49;00m os.path.dirname(executable):[90m[39;49;00m
                    executable_list = (executable,)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# This matches the behavior of os._execvpe().[39;49;00m[90m[39;49;00m
                    executable_list = [96mtuple[39;49;00m([90m[39;49;00m
                        os.path.join(os.fsencode([96mdir[39;49;00m), executable)[90m[39;49;00m
                        [94mfor[39;49;00m [96mdir[39;49;00m [95min[39;49;00m os.get_exec_path(env))[90m[39;49;00m
                fds_to_keep = [96mset[39;49;00m(pass_fds)[90m[39;49;00m
                fds_to_keep.add(errpipe_write)[90m[39;49;00m
                [96mself[39;49;00m.pid = _fork_exec([90m[39;49;00m
                        args, executable_list,[90m[39;49;00m
                        close_fds, [96mtuple[39;49;00m([96msorted[39;49;00m([96mmap[39;49;00m([96mint[39;49;00m, fds_to_keep))),[90m[39;49;00m
                        cwd, env_list,[90m[39;49;00m
                        p2cread, p2cwrite, c2pread, c2pwrite,[90m[39;49;00m
                        errread, errwrite,[90m[39;49;00m
                        errpipe_read, errpipe_write,[90m[39;49;00m
                        restore_signals, start_new_session,[90m[39;49;00m
                        process_group, gid, gids, uid, umask,[90m[39;49;00m
                        preexec_fn, _USE_VFORK)[90m[39;49;00m
                [96mself[39;49;00m._child_created = [94mTrue[39;49;00m[90m[39;49;00m
            [94mfinally[39;49;00m:[90m[39;49;00m
                [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
                os.close(errpipe_write)[90m[39;49;00m
    [90m[39;49;00m
            [96mself[39;49;00m._close_pipe_fds(p2cread, p2cwrite,[90m[39;49;00m
                                 c2pread, c2pwrite,[90m[39;49;00m
                                 errread, errwrite)[90m[39;49;00m
    [90m[39;49;00m
            [90m# Wait for exec to fail or succeed; possibly raising an[39;49;00m[90m[39;49;00m
            [90m# exception (limited in size)[39;49;00m[90m[39;49;00m
            errpipe_data = [96mbytearray[39;49;00m()[90m[39;49;00m
            [94mwhile[39;49;00m [94mTrue[39;49;00m:[90m[39;49;00m
                part = os.read(errpipe_read, [94m50000[39;49;00m)[90m[39;49;00m
                errpipe_data += part[90m[39;49;00m
                [94mif[39;49;00m [95mnot[39;49;00m part [95mor[39;49;00m [96mlen[39;49;00m(errpipe_data) > [94m50000[39;49;00m:[90m[39;49;00m
                    [94mbreak[39;49;00m[90m[39;49;00m
        [94mfinally[39;49;00m:[90m[39;49;00m
            [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
            os.close(errpipe_read)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m errpipe_data:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                pid, sts = os.waitpid([96mself[39;49;00m.pid, [94m0[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m pid == [96mself[39;49;00m.pid:[90m[39;49;00m
                    [96mself[39;49;00m._handle_exitstatus(sts)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.returncode = sys.maxsize[90m[39;49;00m
            [94mexcept[39;49;00m [96mChildProcessError[39;49;00m:[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                exception_name, hex_errno, err_msg = ([90m[39;49;00m
                        errpipe_data.split([33mb[39;49;00m[33m'[39;49;00m[33m:[39;49;00m[33m'[39;49;00m, [94m2[39;49;00m))[90m[39;49;00m
                [90m# The encoding here should match the encoding[39;49;00m[90m[39;49;00m
                [90m# written in by the subprocess implementations[39;49;00m[90m[39;49;00m
                [90m# like _posixsubprocess[39;49;00m[90m[39;49;00m
                err_msg = err_msg.decode()[90m[39;49;00m
            [94mexcept[39;49;00m [96mValueError[39;49;00m:[90m[39;49;00m
                exception_name = [33mb[39;49;00m[33m'[39;49;00m[33mSubprocessError[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                hex_errno = [33mb[39;49;00m[33m'[39;49;00m[33m0[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                err_msg = [33m'[39;49;00m[33mBad exception data from child: [39;49;00m[33m{!r}[39;49;00m[33m'[39;49;00m.format([90m[39;49;00m
                              [96mbytes[39;49;00m(errpipe_data))[90m[39;49;00m
            child_exception_type = [96mgetattr[39;49;00m([90m[39;49;00m
                    builtins, exception_name.decode([33m'[39;49;00m[33mascii[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                    SubprocessError)[90m[39;49;00m
            [94mif[39;49;00m [96missubclass[39;49;00m(child_exception_type, [96mOSError[39;49;00m) [95mand[39;49;00m hex_errno:[90m[39;49;00m
                errno_num = [96mint[39;49;00m(hex_errno, [94m16[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec:chdir[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    [90m# The error must be from chdir(cwd).[39;49;00m[90m[39;49;00m
                    err_filename = cwd[90m[39;49;00m
                [94melif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    err_filename = [94mNone[39;49;00m[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    err_filename = orig_executable[90m[39;49;00m
                [94mif[39;49;00m errno_num != [94m0[39;49;00m:[90m[39;49;00m
                    err_msg = os.strerror(errno_num)[90m[39;49;00m
                [94mif[39;49;00m err_filename [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
>                   [94mraise[39;49;00m child_exception_type(errno_num, err_msg, err_filename)[90m[39;49;00m
[1m[31mE                   FileNotFoundError: [Errno 2] No such file or directory: 'py'[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:1955: FileNotFoundError
[31m[1m_________________________ test_py_command_runs_script __________________________[0m

    [94mdef[39;49;00m [92mtest_py_command_runs_script[39;49;00m():[90m[39;49;00m
        script_content = [33m"[39;49;00m[33mprint([39;49;00m[33m'[39;49;00m[33mHello, world![39;49;00m[33m'[39;49;00m[33m)[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m [96mopen[39;49;00m([33m"[39;49;00m[33mtest_script.py[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mw[39;49;00m[33m"[39;49;00m) [94mas[39;49;00m f:[90m[39;49;00m
            f.write(script_content)[90m[39;49;00m
>       output = run_py_command([[33m"[39;49;00m[33mtest_script.py[39;49;00m[33m"[39;49;00m], [33m"[39;49;00m[33menvy[39;49;00m[33m"[39;49;00m)[90m[39;49;00m

[1m[31mtest_py_command.py[0m:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtest_py_command.py[0m:9: in run_py_command
    result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m] + args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=[94mTrue[39;49;00m, check=[94mTrue[39;49;00m)[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:548: in run
    [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:1026: in __init__
    [96mself[39;49;00m._execute_child(args, executable, preexec_fn, close_fds,[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Popen: returncode: 255 args: ['py', 'test_script.py']>
args = ['py', 'test_script.py'], executable = b'py', preexec_fn = None
close_fds = True, pass_fds = (), cwd = None, env = None, startupinfo = None
creationflags = 0, shell = False, p2cread = -1, p2cwrite = -1, c2pread = 11
c2pwrite = 12, errread = 13, errwrite = 14, restore_signals = True, gid = None
gids = None, uid = None, umask = -1, start_new_session = False
process_group = -1

    [94mdef[39;49;00m [92m_execute_child[39;49;00m([96mself[39;49;00m, args, executable, preexec_fn, close_fds,[90m[39;49;00m
                       pass_fds, cwd, env,[90m[39;49;00m
                       startupinfo, creationflags, shell,[90m[39;49;00m
                       p2cread, p2cwrite,[90m[39;49;00m
                       c2pread, c2pwrite,[90m[39;49;00m
                       errread, errwrite,[90m[39;49;00m
                       restore_signals,[90m[39;49;00m
                       gid, gids, uid, umask,[90m[39;49;00m
                       start_new_session, process_group):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Execute program (POSIX version)"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(args, ([96mstr[39;49;00m, [96mbytes[39;49;00m)):[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melif[39;49;00m [96misinstance[39;49;00m(args, os.PathLike):[90m[39;49;00m
            [94mif[39;49;00m shell:[90m[39;49;00m
                [94mraise[39;49;00m [96mTypeError[39;49;00m([33m'[39;49;00m[33mpath-like args is not allowed when [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                [33m'[39;49;00m[33mshell is true[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            args = [96mlist[39;49;00m(args)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m shell:[90m[39;49;00m
            [90m# On Android the default shell is at '/system/bin/sh'.[39;49;00m[90m[39;49;00m
            unix_shell = ([33m'[39;49;00m[33m/system/bin/sh[39;49;00m[33m'[39;49;00m [94mif[39;49;00m[90m[39;49;00m
                      [96mhasattr[39;49;00m(sys, [33m'[39;49;00m[33mgetandroidapilevel[39;49;00m[33m'[39;49;00m) [94melse[39;49;00m [33m'[39;49;00m[33m/bin/sh[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [unix_shell, [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m] + args[90m[39;49;00m
            [94mif[39;49;00m executable:[90m[39;49;00m
                args[[94m0[39;49;00m] = executable[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m executable [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            executable = args[[94m0[39;49;00m][90m[39;49;00m
    [90m[39;49;00m
        sys.audit([33m"[39;49;00m[33msubprocess.Popen[39;49;00m[33m"[39;49;00m, executable, args, cwd, env)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m (_USE_POSIX_SPAWN[90m[39;49;00m
                [95mand[39;49;00m os.path.dirname(executable)[90m[39;49;00m
                [95mand[39;49;00m preexec_fn [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m close_fds[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m pass_fds[90m[39;49;00m
                [95mand[39;49;00m cwd [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m (p2cread == -[94m1[39;49;00m [95mor[39;49;00m p2cread > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (c2pwrite == -[94m1[39;49;00m [95mor[39;49;00m c2pwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (errwrite == -[94m1[39;49;00m [95mor[39;49;00m errwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m start_new_session[90m[39;49;00m
                [95mand[39;49;00m process_group == -[94m1[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gids [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m uid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m umask < [94m0[39;49;00m):[90m[39;49;00m
            [96mself[39;49;00m._posix_spawn(args, executable, env, restore_signals,[90m[39;49;00m
                              p2cread, p2cwrite,[90m[39;49;00m
                              c2pread, c2pwrite,[90m[39;49;00m
                              errread, errwrite)[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        orig_executable = executable[90m[39;49;00m
    [90m[39;49;00m
        [90m# For transferring possible exec failure from child to parent.[39;49;00m[90m[39;49;00m
        [90m# Data format: "exception name:hex errno:description"[39;49;00m[90m[39;49;00m
        [90m# Pickle is not used; it is complex and involves memory allocation.[39;49;00m[90m[39;49;00m
        errpipe_read, errpipe_write = os.pipe()[90m[39;49;00m
        [90m# errpipe_write must not be in the standard io 0, 1, or 2 fd range.[39;49;00m[90m[39;49;00m
        low_fds_to_close = [][90m[39;49;00m
        [94mwhile[39;49;00m errpipe_write < [94m3[39;49;00m:[90m[39;49;00m
            low_fds_to_close.append(errpipe_write)[90m[39;49;00m
            errpipe_write = os.dup(errpipe_write)[90m[39;49;00m
        [94mfor[39;49;00m low_fd [95min[39;49;00m low_fds_to_close:[90m[39;49;00m
            os.close(low_fd)[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [90m# We must avoid complex work that could involve[39;49;00m[90m[39;49;00m
                [90m# malloc or free in the child process to avoid[39;49;00m[90m[39;49;00m
                [90m# potential deadlocks, thus we do all this here.[39;49;00m[90m[39;49;00m
                [90m# and pass it to fork_exec()[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
                [94mif[39;49;00m env [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    env_list = [][90m[39;49;00m
                    [94mfor[39;49;00m k, v [95min[39;49;00m env.items():[90m[39;49;00m
                        k = os.fsencode(k)[90m[39;49;00m
                        [94mif[39;49;00m [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m [95min[39;49;00m k:[90m[39;49;00m
                            [94mraise[39;49;00m [96mValueError[39;49;00m([33m"[39;49;00m[33millegal environment variable name[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                        env_list.append(k + [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m + os.fsencode(v))[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    env_list = [94mNone[39;49;00m  [90m# Use execv instead of execve.[39;49;00m[90m[39;49;00m
                executable = os.fsencode(executable)[90m[39;49;00m
                [94mif[39;49;00m os.path.dirname(executable):[90m[39;49;00m
                    executable_list = (executable,)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# This matches the behavior of os._execvpe().[39;49;00m[90m[39;49;00m
                    executable_list = [96mtuple[39;49;00m([90m[39;49;00m
                        os.path.join(os.fsencode([96mdir[39;49;00m), executable)[90m[39;49;00m
                        [94mfor[39;49;00m [96mdir[39;49;00m [95min[39;49;00m os.get_exec_path(env))[90m[39;49;00m
                fds_to_keep = [96mset[39;49;00m(pass_fds)[90m[39;49;00m
                fds_to_keep.add(errpipe_write)[90m[39;49;00m
                [96mself[39;49;00m.pid = _fork_exec([90m[39;49;00m
                        args, executable_list,[90m[39;49;00m
                        close_fds, [96mtuple[39;49;00m([96msorted[39;49;00m([96mmap[39;49;00m([96mint[39;49;00m, fds_to_keep))),[90m[39;49;00m
                        cwd, env_list,[90m[39;49;00m
                        p2cread, p2cwrite, c2pread, c2pwrite,[90m[39;49;00m
                        errread, errwrite,[90m[39;49;00m
                        errpipe_read, errpipe_write,[90m[39;49;00m
                        restore_signals, start_new_session,[90m[39;49;00m
                        process_group, gid, gids, uid, umask,[90m[39;49;00m
                        preexec_fn, _USE_VFORK)[90m[39;49;00m
                [96mself[39;49;00m._child_created = [94mTrue[39;49;00m[90m[39;49;00m
            [94mfinally[39;49;00m:[90m[39;49;00m
                [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
                os.close(errpipe_write)[90m[39;49;00m
    [90m[39;49;00m
            [96mself[39;49;00m._close_pipe_fds(p2cread, p2cwrite,[90m[39;49;00m
                                 c2pread, c2pwrite,[90m[39;49;00m
                                 errread, errwrite)[90m[39;49;00m
    [90m[39;49;00m
            [90m# Wait for exec to fail or succeed; possibly raising an[39;49;00m[90m[39;49;00m
            [90m# exception (limited in size)[39;49;00m[90m[39;49;00m
            errpipe_data = [96mbytearray[39;49;00m()[90m[39;49;00m
            [94mwhile[39;49;00m [94mTrue[39;49;00m:[90m[39;49;00m
                part = os.read(errpipe_read, [94m50000[39;49;00m)[90m[39;49;00m
                errpipe_data += part[90m[39;49;00m
                [94mif[39;49;00m [95mnot[39;49;00m part [95mor[39;49;00m [96mlen[39;49;00m(errpipe_data) > [94m50000[39;49;00m:[90m[39;49;00m
                    [94mbreak[39;49;00m[90m[39;49;00m
        [94mfinally[39;49;00m:[90m[39;49;00m
            [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
            os.close(errpipe_read)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m errpipe_data:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                pid, sts = os.waitpid([96mself[39;49;00m.pid, [94m0[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m pid == [96mself[39;49;00m.pid:[90m[39;49;00m
                    [96mself[39;49;00m._handle_exitstatus(sts)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.returncode = sys.maxsize[90m[39;49;00m
            [94mexcept[39;49;00m [96mChildProcessError[39;49;00m:[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                exception_name, hex_errno, err_msg = ([90m[39;49;00m
                        errpipe_data.split([33mb[39;49;00m[33m'[39;49;00m[33m:[39;49;00m[33m'[39;49;00m, [94m2[39;49;00m))[90m[39;49;00m
                [90m# The encoding here should match the encoding[39;49;00m[90m[39;49;00m
                [90m# written in by the subprocess implementations[39;49;00m[90m[39;49;00m
                [90m# like _posixsubprocess[39;49;00m[90m[39;49;00m
                err_msg = err_msg.decode()[90m[39;49;00m
            [94mexcept[39;49;00m [96mValueError[39;49;00m:[90m[39;49;00m
                exception_name = [33mb[39;49;00m[33m'[39;49;00m[33mSubprocessError[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                hex_errno = [33mb[39;49;00m[33m'[39;49;00m[33m0[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                err_msg = [33m'[39;49;00m[33mBad exception data from child: [39;49;00m[33m{!r}[39;49;00m[33m'[39;49;00m.format([90m[39;49;00m
                              [96mbytes[39;49;00m(errpipe_data))[90m[39;49;00m
            child_exception_type = [96mgetattr[39;49;00m([90m[39;49;00m
                    builtins, exception_name.decode([33m'[39;49;00m[33mascii[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                    SubprocessError)[90m[39;49;00m
            [94mif[39;49;00m [96missubclass[39;49;00m(child_exception_type, [96mOSError[39;49;00m) [95mand[39;49;00m hex_errno:[90m[39;49;00m
                errno_num = [96mint[39;49;00m(hex_errno, [94m16[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec:chdir[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    [90m# The error must be from chdir(cwd).[39;49;00m[90m[39;49;00m
                    err_filename = cwd[90m[39;49;00m
                [94melif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    err_filename = [94mNone[39;49;00m[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    err_filename = orig_executable[90m[39;49;00m
                [94mif[39;49;00m errno_num != [94m0[39;49;00m:[90m[39;49;00m
                    err_msg = os.strerror(errno_num)[90m[39;49;00m
                [94mif[39;49;00m err_filename [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
>                   [94mraise[39;49;00m child_exception_type(errno_num, err_msg, err_filename)[90m[39;49;00m
[1m[31mE                   FileNotFoundError: [Errno 2] No such file or directory: 'py'[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:1955: FileNotFoundError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m test_py_command.py::[1mtest_py_command_sets_pythonpath[0m - FileNotFoundError: [Errno 2] No such file or directory: 'py'
[31mFAILED[0m test_py_command.py::[1mtest_py_command_sets_custom_pythonpath[0m - FileNotFoundError: [Errno 2] No such file or directory: 'py'
[31mFAILED[0m test_py_command.py::[1mtest_py_command_runs_script[0m - FileNotFoundError: [Errno 2] No such file or directory: 'py'
[31m========================= [31m[1m3 failed[0m, [32m6 passed[0m[31m in 3.01s[0m[31m ==========================[0m

2024-10-02 12:04:10,505 - ERROR - Command error: 
2024-10-02 12:04:21,822 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:04:25,873 - ERROR - Error running command: Command '['pytest', '--color=yes', '.']' returned non-zero exit status 1.
2024-10-02 12:04:25,873 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 9 items

test_py_command.py [31mF[0m[31mF[0m[31mF[0m[31m                                                   [ 33%][0m
test_version_control_manager.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                   [100%][0m

=================================== FAILURES ===================================
[31m[1m_______________________ test_py_command_sets_pythonpath ________________________[0m

    [94mdef[39;49;00m [92mtest_py_command_sets_pythonpath[39;49;00m():[90m[39;49;00m
>       run_py_command([ [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpass[39;49;00m[33m"[39;49;00m ], [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m)[90m[39;49;00m

[1m[31mtest_py_command.py[0m:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtest_py_command.py[0m:9: in run_py_command
    result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m] + args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=[94mTrue[39;49;00m, check=[94mTrue[39;49;00m)[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:548: in run
    [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:1026: in __init__
    [96mself[39;49;00m._execute_child(args, executable, preexec_fn, close_fds,[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Popen: returncode: 255 args: ['py', '-c', 'pass']>
args = ['py', '-c', 'pass'], executable = b'py', preexec_fn = None
close_fds = True, pass_fds = (), cwd = None, env = None, startupinfo = None
creationflags = 0, shell = False, p2cread = -1, p2cwrite = -1, c2pread = 11
c2pwrite = 12, errread = 13, errwrite = 14, restore_signals = True, gid = None
gids = None, uid = None, umask = -1, start_new_session = False
process_group = -1

    [94mdef[39;49;00m [92m_execute_child[39;49;00m([96mself[39;49;00m, args, executable, preexec_fn, close_fds,[90m[39;49;00m
                       pass_fds, cwd, env,[90m[39;49;00m
                       startupinfo, creationflags, shell,[90m[39;49;00m
                       p2cread, p2cwrite,[90m[39;49;00m
                       c2pread, c2pwrite,[90m[39;49;00m
                       errread, errwrite,[90m[39;49;00m
                       restore_signals,[90m[39;49;00m
                       gid, gids, uid, umask,[90m[39;49;00m
                       start_new_session, process_group):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Execute program (POSIX version)"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(args, ([96mstr[39;49;00m, [96mbytes[39;49;00m)):[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melif[39;49;00m [96misinstance[39;49;00m(args, os.PathLike):[90m[39;49;00m
            [94mif[39;49;00m shell:[90m[39;49;00m
                [94mraise[39;49;00m [96mTypeError[39;49;00m([33m'[39;49;00m[33mpath-like args is not allowed when [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                [33m'[39;49;00m[33mshell is true[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            args = [96mlist[39;49;00m(args)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m shell:[90m[39;49;00m
            [90m# On Android the default shell is at '/system/bin/sh'.[39;49;00m[90m[39;49;00m
            unix_shell = ([33m'[39;49;00m[33m/system/bin/sh[39;49;00m[33m'[39;49;00m [94mif[39;49;00m[90m[39;49;00m
                      [96mhasattr[39;49;00m(sys, [33m'[39;49;00m[33mgetandroidapilevel[39;49;00m[33m'[39;49;00m) [94melse[39;49;00m [33m'[39;49;00m[33m/bin/sh[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [unix_shell, [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m] + args[90m[39;49;00m
            [94mif[39;49;00m executable:[90m[39;49;00m
                args[[94m0[39;49;00m] = executable[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m executable [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            executable = args[[94m0[39;49;00m][90m[39;49;00m
    [90m[39;49;00m
        sys.audit([33m"[39;49;00m[33msubprocess.Popen[39;49;00m[33m"[39;49;00m, executable, args, cwd, env)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m (_USE_POSIX_SPAWN[90m[39;49;00m
                [95mand[39;49;00m os.path.dirname(executable)[90m[39;49;00m
                [95mand[39;49;00m preexec_fn [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m close_fds[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m pass_fds[90m[39;49;00m
                [95mand[39;49;00m cwd [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m (p2cread == -[94m1[39;49;00m [95mor[39;49;00m p2cread > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (c2pwrite == -[94m1[39;49;00m [95mor[39;49;00m c2pwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (errwrite == -[94m1[39;49;00m [95mor[39;49;00m errwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m start_new_session[90m[39;49;00m
                [95mand[39;49;00m process_group == -[94m1[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gids [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m uid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m umask < [94m0[39;49;00m):[90m[39;49;00m
            [96mself[39;49;00m._posix_spawn(args, executable, env, restore_signals,[90m[39;49;00m
                              p2cread, p2cwrite,[90m[39;49;00m
                              c2pread, c2pwrite,[90m[39;49;00m
                              errread, errwrite)[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        orig_executable = executable[90m[39;49;00m
    [90m[39;49;00m
        [90m# For transferring possible exec failure from child to parent.[39;49;00m[90m[39;49;00m
        [90m# Data format: "exception name:hex errno:description"[39;49;00m[90m[39;49;00m
        [90m# Pickle is not used; it is complex and involves memory allocation.[39;49;00m[90m[39;49;00m
        errpipe_read, errpipe_write = os.pipe()[90m[39;49;00m
        [90m# errpipe_write must not be in the standard io 0, 1, or 2 fd range.[39;49;00m[90m[39;49;00m
        low_fds_to_close = [][90m[39;49;00m
        [94mwhile[39;49;00m errpipe_write < [94m3[39;49;00m:[90m[39;49;00m
            low_fds_to_close.append(errpipe_write)[90m[39;49;00m
            errpipe_write = os.dup(errpipe_write)[90m[39;49;00m
        [94mfor[39;49;00m low_fd [95min[39;49;00m low_fds_to_close:[90m[39;49;00m
            os.close(low_fd)[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [90m# We must avoid complex work that could involve[39;49;00m[90m[39;49;00m
                [90m# malloc or free in the child process to avoid[39;49;00m[90m[39;49;00m
                [90m# potential deadlocks, thus we do all this here.[39;49;00m[90m[39;49;00m
                [90m# and pass it to fork_exec()[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
                [94mif[39;49;00m env [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    env_list = [][90m[39;49;00m
                    [94mfor[39;49;00m k, v [95min[39;49;00m env.items():[90m[39;49;00m
                        k = os.fsencode(k)[90m[39;49;00m
                        [94mif[39;49;00m [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m [95min[39;49;00m k:[90m[39;49;00m
                            [94mraise[39;49;00m [96mValueError[39;49;00m([33m"[39;49;00m[33millegal environment variable name[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                        env_list.append(k + [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m + os.fsencode(v))[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    env_list = [94mNone[39;49;00m  [90m# Use execv instead of execve.[39;49;00m[90m[39;49;00m
                executable = os.fsencode(executable)[90m[39;49;00m
                [94mif[39;49;00m os.path.dirname(executable):[90m[39;49;00m
                    executable_list = (executable,)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# This matches the behavior of os._execvpe().[39;49;00m[90m[39;49;00m
                    executable_list = [96mtuple[39;49;00m([90m[39;49;00m
                        os.path.join(os.fsencode([96mdir[39;49;00m), executable)[90m[39;49;00m
                        [94mfor[39;49;00m [96mdir[39;49;00m [95min[39;49;00m os.get_exec_path(env))[90m[39;49;00m
                fds_to_keep = [96mset[39;49;00m(pass_fds)[90m[39;49;00m
                fds_to_keep.add(errpipe_write)[90m[39;49;00m
                [96mself[39;49;00m.pid = _fork_exec([90m[39;49;00m
                        args, executable_list,[90m[39;49;00m
                        close_fds, [96mtuple[39;49;00m([96msorted[39;49;00m([96mmap[39;49;00m([96mint[39;49;00m, fds_to_keep))),[90m[39;49;00m
                        cwd, env_list,[90m[39;49;00m
                        p2cread, p2cwrite, c2pread, c2pwrite,[90m[39;49;00m
                        errread, errwrite,[90m[39;49;00m
                        errpipe_read, errpipe_write,[90m[39;49;00m
                        restore_signals, start_new_session,[90m[39;49;00m
                        process_group, gid, gids, uid, umask,[90m[39;49;00m
                        preexec_fn, _USE_VFORK)[90m[39;49;00m
                [96mself[39;49;00m._child_created = [94mTrue[39;49;00m[90m[39;49;00m
            [94mfinally[39;49;00m:[90m[39;49;00m
                [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
                os.close(errpipe_write)[90m[39;49;00m
    [90m[39;49;00m
            [96mself[39;49;00m._close_pipe_fds(p2cread, p2cwrite,[90m[39;49;00m
                                 c2pread, c2pwrite,[90m[39;49;00m
                                 errread, errwrite)[90m[39;49;00m
    [90m[39;49;00m
            [90m# Wait for exec to fail or succeed; possibly raising an[39;49;00m[90m[39;49;00m
            [90m# exception (limited in size)[39;49;00m[90m[39;49;00m
            errpipe_data = [96mbytearray[39;49;00m()[90m[39;49;00m
            [94mwhile[39;49;00m [94mTrue[39;49;00m:[90m[39;49;00m
                part = os.read(errpipe_read, [94m50000[39;49;00m)[90m[39;49;00m
                errpipe_data += part[90m[39;49;00m
                [94mif[39;49;00m [95mnot[39;49;00m part [95mor[39;49;00m [96mlen[39;49;00m(errpipe_data) > [94m50000[39;49;00m:[90m[39;49;00m
                    [94mbreak[39;49;00m[90m[39;49;00m
        [94mfinally[39;49;00m:[90m[39;49;00m
            [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
            os.close(errpipe_read)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m errpipe_data:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                pid, sts = os.waitpid([96mself[39;49;00m.pid, [94m0[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m pid == [96mself[39;49;00m.pid:[90m[39;49;00m
                    [96mself[39;49;00m._handle_exitstatus(sts)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.returncode = sys.maxsize[90m[39;49;00m
            [94mexcept[39;49;00m [96mChildProcessError[39;49;00m:[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                exception_name, hex_errno, err_msg = ([90m[39;49;00m
                        errpipe_data.split([33mb[39;49;00m[33m'[39;49;00m[33m:[39;49;00m[33m'[39;49;00m, [94m2[39;49;00m))[90m[39;49;00m
                [90m# The encoding here should match the encoding[39;49;00m[90m[39;49;00m
                [90m# written in by the subprocess implementations[39;49;00m[90m[39;49;00m
                [90m# like _posixsubprocess[39;49;00m[90m[39;49;00m
                err_msg = err_msg.decode()[90m[39;49;00m
            [94mexcept[39;49;00m [96mValueError[39;49;00m:[90m[39;49;00m
                exception_name = [33mb[39;49;00m[33m'[39;49;00m[33mSubprocessError[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                hex_errno = [33mb[39;49;00m[33m'[39;49;00m[33m0[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                err_msg = [33m'[39;49;00m[33mBad exception data from child: [39;49;00m[33m{!r}[39;49;00m[33m'[39;49;00m.format([90m[39;49;00m
                              [96mbytes[39;49;00m(errpipe_data))[90m[39;49;00m
            child_exception_type = [96mgetattr[39;49;00m([90m[39;49;00m
                    builtins, exception_name.decode([33m'[39;49;00m[33mascii[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                    SubprocessError)[90m[39;49;00m
            [94mif[39;49;00m [96missubclass[39;49;00m(child_exception_type, [96mOSError[39;49;00m) [95mand[39;49;00m hex_errno:[90m[39;49;00m
                errno_num = [96mint[39;49;00m(hex_errno, [94m16[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec:chdir[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    [90m# The error must be from chdir(cwd).[39;49;00m[90m[39;49;00m
                    err_filename = cwd[90m[39;49;00m
                [94melif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    err_filename = [94mNone[39;49;00m[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    err_filename = orig_executable[90m[39;49;00m
                [94mif[39;49;00m errno_num != [94m0[39;49;00m:[90m[39;49;00m
                    err_msg = os.strerror(errno_num)[90m[39;49;00m
                [94mif[39;49;00m err_filename [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
>                   [94mraise[39;49;00m child_exception_type(errno_num, err_msg, err_filename)[90m[39;49;00m
[1m[31mE                   FileNotFoundError: [Errno 2] No such file or directory: 'py'[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:1955: FileNotFoundError
[31m[1m____________________ test_py_command_sets_custom_pythonpath ____________________[0m

    [94mdef[39;49;00m [92mtest_py_command_sets_custom_pythonpath[39;49;00m():[90m[39;49;00m
>       run_py_command([ [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpass[39;49;00m[33m"[39;49;00m ], [33m"[39;49;00m[33mOuter_dir[39;49;00m[33m"[39;49;00m)[90m[39;49;00m

[1m[31mtest_py_command.py[0m:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtest_py_command.py[0m:9: in run_py_command
    result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m] + args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=[94mTrue[39;49;00m, check=[94mTrue[39;49;00m)[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:548: in run
    [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:1026: in __init__
    [96mself[39;49;00m._execute_child(args, executable, preexec_fn, close_fds,[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Popen: returncode: 255 args: ['py', '-c', 'pass']>
args = ['py', '-c', 'pass'], executable = b'py', preexec_fn = None
close_fds = True, pass_fds = (), cwd = None, env = None, startupinfo = None
creationflags = 0, shell = False, p2cread = -1, p2cwrite = -1, c2pread = 11
c2pwrite = 12, errread = 13, errwrite = 14, restore_signals = True, gid = None
gids = None, uid = None, umask = -1, start_new_session = False
process_group = -1

    [94mdef[39;49;00m [92m_execute_child[39;49;00m([96mself[39;49;00m, args, executable, preexec_fn, close_fds,[90m[39;49;00m
                       pass_fds, cwd, env,[90m[39;49;00m
                       startupinfo, creationflags, shell,[90m[39;49;00m
                       p2cread, p2cwrite,[90m[39;49;00m
                       c2pread, c2pwrite,[90m[39;49;00m
                       errread, errwrite,[90m[39;49;00m
                       restore_signals,[90m[39;49;00m
                       gid, gids, uid, umask,[90m[39;49;00m
                       start_new_session, process_group):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Execute program (POSIX version)"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(args, ([96mstr[39;49;00m, [96mbytes[39;49;00m)):[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melif[39;49;00m [96misinstance[39;49;00m(args, os.PathLike):[90m[39;49;00m
            [94mif[39;49;00m shell:[90m[39;49;00m
                [94mraise[39;49;00m [96mTypeError[39;49;00m([33m'[39;49;00m[33mpath-like args is not allowed when [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                [33m'[39;49;00m[33mshell is true[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            args = [96mlist[39;49;00m(args)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m shell:[90m[39;49;00m
            [90m# On Android the default shell is at '/system/bin/sh'.[39;49;00m[90m[39;49;00m
            unix_shell = ([33m'[39;49;00m[33m/system/bin/sh[39;49;00m[33m'[39;49;00m [94mif[39;49;00m[90m[39;49;00m
                      [96mhasattr[39;49;00m(sys, [33m'[39;49;00m[33mgetandroidapilevel[39;49;00m[33m'[39;49;00m) [94melse[39;49;00m [33m'[39;49;00m[33m/bin/sh[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [unix_shell, [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m] + args[90m[39;49;00m
            [94mif[39;49;00m executable:[90m[39;49;00m
                args[[94m0[39;49;00m] = executable[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m executable [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            executable = args[[94m0[39;49;00m][90m[39;49;00m
    [90m[39;49;00m
        sys.audit([33m"[39;49;00m[33msubprocess.Popen[39;49;00m[33m"[39;49;00m, executable, args, cwd, env)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m (_USE_POSIX_SPAWN[90m[39;49;00m
                [95mand[39;49;00m os.path.dirname(executable)[90m[39;49;00m
                [95mand[39;49;00m preexec_fn [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m close_fds[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m pass_fds[90m[39;49;00m
                [95mand[39;49;00m cwd [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m (p2cread == -[94m1[39;49;00m [95mor[39;49;00m p2cread > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (c2pwrite == -[94m1[39;49;00m [95mor[39;49;00m c2pwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (errwrite == -[94m1[39;49;00m [95mor[39;49;00m errwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m start_new_session[90m[39;49;00m
                [95mand[39;49;00m process_group == -[94m1[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gids [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m uid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m umask < [94m0[39;49;00m):[90m[39;49;00m
            [96mself[39;49;00m._posix_spawn(args, executable, env, restore_signals,[90m[39;49;00m
                              p2cread, p2cwrite,[90m[39;49;00m
                              c2pread, c2pwrite,[90m[39;49;00m
                              errread, errwrite)[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        orig_executable = executable[90m[39;49;00m
    [90m[39;49;00m
        [90m# For transferring possible exec failure from child to parent.[39;49;00m[90m[39;49;00m
        [90m# Data format: "exception name:hex errno:description"[39;49;00m[90m[39;49;00m
        [90m# Pickle is not used; it is complex and involves memory allocation.[39;49;00m[90m[39;49;00m
        errpipe_read, errpipe_write = os.pipe()[90m[39;49;00m
        [90m# errpipe_write must not be in the standard io 0, 1, or 2 fd range.[39;49;00m[90m[39;49;00m
        low_fds_to_close = [][90m[39;49;00m
        [94mwhile[39;49;00m errpipe_write < [94m3[39;49;00m:[90m[39;49;00m
            low_fds_to_close.append(errpipe_write)[90m[39;49;00m
            errpipe_write = os.dup(errpipe_write)[90m[39;49;00m
        [94mfor[39;49;00m low_fd [95min[39;49;00m low_fds_to_close:[90m[39;49;00m
            os.close(low_fd)[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [90m# We must avoid complex work that could involve[39;49;00m[90m[39;49;00m
                [90m# malloc or free in the child process to avoid[39;49;00m[90m[39;49;00m
                [90m# potential deadlocks, thus we do all this here.[39;49;00m[90m[39;49;00m
                [90m# and pass it to fork_exec()[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
                [94mif[39;49;00m env [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    env_list = [][90m[39;49;00m
                    [94mfor[39;49;00m k, v [95min[39;49;00m env.items():[90m[39;49;00m
                        k = os.fsencode(k)[90m[39;49;00m
                        [94mif[39;49;00m [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m [95min[39;49;00m k:[90m[39;49;00m
                            [94mraise[39;49;00m [96mValueError[39;49;00m([33m"[39;49;00m[33millegal environment variable name[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                        env_list.append(k + [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m + os.fsencode(v))[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    env_list = [94mNone[39;49;00m  [90m# Use execv instead of execve.[39;49;00m[90m[39;49;00m
                executable = os.fsencode(executable)[90m[39;49;00m
                [94mif[39;49;00m os.path.dirname(executable):[90m[39;49;00m
                    executable_list = (executable,)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# This matches the behavior of os._execvpe().[39;49;00m[90m[39;49;00m
                    executable_list = [96mtuple[39;49;00m([90m[39;49;00m
                        os.path.join(os.fsencode([96mdir[39;49;00m), executable)[90m[39;49;00m
                        [94mfor[39;49;00m [96mdir[39;49;00m [95min[39;49;00m os.get_exec_path(env))[90m[39;49;00m
                fds_to_keep = [96mset[39;49;00m(pass_fds)[90m[39;49;00m
                fds_to_keep.add(errpipe_write)[90m[39;49;00m
                [96mself[39;49;00m.pid = _fork_exec([90m[39;49;00m
                        args, executable_list,[90m[39;49;00m
                        close_fds, [96mtuple[39;49;00m([96msorted[39;49;00m([96mmap[39;49;00m([96mint[39;49;00m, fds_to_keep))),[90m[39;49;00m
                        cwd, env_list,[90m[39;49;00m
                        p2cread, p2cwrite, c2pread, c2pwrite,[90m[39;49;00m
                        errread, errwrite,[90m[39;49;00m
                        errpipe_read, errpipe_write,[90m[39;49;00m
                        restore_signals, start_new_session,[90m[39;49;00m
                        process_group, gid, gids, uid, umask,[90m[39;49;00m
                        preexec_fn, _USE_VFORK)[90m[39;49;00m
                [96mself[39;49;00m._child_created = [94mTrue[39;49;00m[90m[39;49;00m
            [94mfinally[39;49;00m:[90m[39;49;00m
                [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
                os.close(errpipe_write)[90m[39;49;00m
    [90m[39;49;00m
            [96mself[39;49;00m._close_pipe_fds(p2cread, p2cwrite,[90m[39;49;00m
                                 c2pread, c2pwrite,[90m[39;49;00m
                                 errread, errwrite)[90m[39;49;00m
    [90m[39;49;00m
            [90m# Wait for exec to fail or succeed; possibly raising an[39;49;00m[90m[39;49;00m
            [90m# exception (limited in size)[39;49;00m[90m[39;49;00m
            errpipe_data = [96mbytearray[39;49;00m()[90m[39;49;00m
            [94mwhile[39;49;00m [94mTrue[39;49;00m:[90m[39;49;00m
                part = os.read(errpipe_read, [94m50000[39;49;00m)[90m[39;49;00m
                errpipe_data += part[90m[39;49;00m
                [94mif[39;49;00m [95mnot[39;49;00m part [95mor[39;49;00m [96mlen[39;49;00m(errpipe_data) > [94m50000[39;49;00m:[90m[39;49;00m
                    [94mbreak[39;49;00m[90m[39;49;00m
        [94mfinally[39;49;00m:[90m[39;49;00m
            [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
            os.close(errpipe_read)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m errpipe_data:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                pid, sts = os.waitpid([96mself[39;49;00m.pid, [94m0[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m pid == [96mself[39;49;00m.pid:[90m[39;49;00m
                    [96mself[39;49;00m._handle_exitstatus(sts)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.returncode = sys.maxsize[90m[39;49;00m
            [94mexcept[39;49;00m [96mChildProcessError[39;49;00m:[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                exception_name, hex_errno, err_msg = ([90m[39;49;00m
                        errpipe_data.split([33mb[39;49;00m[33m'[39;49;00m[33m:[39;49;00m[33m'[39;49;00m, [94m2[39;49;00m))[90m[39;49;00m
                [90m# The encoding here should match the encoding[39;49;00m[90m[39;49;00m
                [90m# written in by the subprocess implementations[39;49;00m[90m[39;49;00m
                [90m# like _posixsubprocess[39;49;00m[90m[39;49;00m
                err_msg = err_msg.decode()[90m[39;49;00m
            [94mexcept[39;49;00m [96mValueError[39;49;00m:[90m[39;49;00m
                exception_name = [33mb[39;49;00m[33m'[39;49;00m[33mSubprocessError[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                hex_errno = [33mb[39;49;00m[33m'[39;49;00m[33m0[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                err_msg = [33m'[39;49;00m[33mBad exception data from child: [39;49;00m[33m{!r}[39;49;00m[33m'[39;49;00m.format([90m[39;49;00m
                              [96mbytes[39;49;00m(errpipe_data))[90m[39;49;00m
            child_exception_type = [96mgetattr[39;49;00m([90m[39;49;00m
                    builtins, exception_name.decode([33m'[39;49;00m[33mascii[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                    SubprocessError)[90m[39;49;00m
            [94mif[39;49;00m [96missubclass[39;49;00m(child_exception_type, [96mOSError[39;49;00m) [95mand[39;49;00m hex_errno:[90m[39;49;00m
                errno_num = [96mint[39;49;00m(hex_errno, [94m16[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec:chdir[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    [90m# The error must be from chdir(cwd).[39;49;00m[90m[39;49;00m
                    err_filename = cwd[90m[39;49;00m
                [94melif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    err_filename = [94mNone[39;49;00m[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    err_filename = orig_executable[90m[39;49;00m
                [94mif[39;49;00m errno_num != [94m0[39;49;00m:[90m[39;49;00m
                    err_msg = os.strerror(errno_num)[90m[39;49;00m
                [94mif[39;49;00m err_filename [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
>                   [94mraise[39;49;00m child_exception_type(errno_num, err_msg, err_filename)[90m[39;49;00m
[1m[31mE                   FileNotFoundError: [Errno 2] No such file or directory: 'py'[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:1955: FileNotFoundError
[31m[1m_________________________ test_py_command_runs_script __________________________[0m

    [94mdef[39;49;00m [92mtest_py_command_runs_script[39;49;00m():[90m[39;49;00m
        script_content = [33m"[39;49;00m[33mprint([39;49;00m[33m'[39;49;00m[33mHello, world![39;49;00m[33m'[39;49;00m[33m)[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m [96mopen[39;49;00m([33m"[39;49;00m[33mtest_script.py[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mw[39;49;00m[33m"[39;49;00m) [94mas[39;49;00m f:[90m[39;49;00m
            f.write(script_content)[90m[39;49;00m
>       output = run_py_command([[33m"[39;49;00m[33mtest_script.py[39;49;00m[33m"[39;49;00m], [33m"[39;49;00m[33menvy[39;49;00m[33m"[39;49;00m)[90m[39;49;00m

[1m[31mtest_py_command.py[0m:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtest_py_command.py[0m:9: in run_py_command
    result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m] + args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=[94mTrue[39;49;00m, check=[94mTrue[39;49;00m)[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:548: in run
    [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:1026: in __init__
    [96mself[39;49;00m._execute_child(args, executable, preexec_fn, close_fds,[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Popen: returncode: 255 args: ['py', 'test_script.py']>
args = ['py', 'test_script.py'], executable = b'py', preexec_fn = None
close_fds = True, pass_fds = (), cwd = None, env = None, startupinfo = None
creationflags = 0, shell = False, p2cread = -1, p2cwrite = -1, c2pread = 11
c2pwrite = 12, errread = 13, errwrite = 14, restore_signals = True, gid = None
gids = None, uid = None, umask = -1, start_new_session = False
process_group = -1

    [94mdef[39;49;00m [92m_execute_child[39;49;00m([96mself[39;49;00m, args, executable, preexec_fn, close_fds,[90m[39;49;00m
                       pass_fds, cwd, env,[90m[39;49;00m
                       startupinfo, creationflags, shell,[90m[39;49;00m
                       p2cread, p2cwrite,[90m[39;49;00m
                       c2pread, c2pwrite,[90m[39;49;00m
                       errread, errwrite,[90m[39;49;00m
                       restore_signals,[90m[39;49;00m
                       gid, gids, uid, umask,[90m[39;49;00m
                       start_new_session, process_group):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Execute program (POSIX version)"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(args, ([96mstr[39;49;00m, [96mbytes[39;49;00m)):[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melif[39;49;00m [96misinstance[39;49;00m(args, os.PathLike):[90m[39;49;00m
            [94mif[39;49;00m shell:[90m[39;49;00m
                [94mraise[39;49;00m [96mTypeError[39;49;00m([33m'[39;49;00m[33mpath-like args is not allowed when [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                [33m'[39;49;00m[33mshell is true[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            args = [96mlist[39;49;00m(args)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m shell:[90m[39;49;00m
            [90m# On Android the default shell is at '/system/bin/sh'.[39;49;00m[90m[39;49;00m
            unix_shell = ([33m'[39;49;00m[33m/system/bin/sh[39;49;00m[33m'[39;49;00m [94mif[39;49;00m[90m[39;49;00m
                      [96mhasattr[39;49;00m(sys, [33m'[39;49;00m[33mgetandroidapilevel[39;49;00m[33m'[39;49;00m) [94melse[39;49;00m [33m'[39;49;00m[33m/bin/sh[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [unix_shell, [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m] + args[90m[39;49;00m
            [94mif[39;49;00m executable:[90m[39;49;00m
                args[[94m0[39;49;00m] = executable[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m executable [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            executable = args[[94m0[39;49;00m][90m[39;49;00m
    [90m[39;49;00m
        sys.audit([33m"[39;49;00m[33msubprocess.Popen[39;49;00m[33m"[39;49;00m, executable, args, cwd, env)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m (_USE_POSIX_SPAWN[90m[39;49;00m
                [95mand[39;49;00m os.path.dirname(executable)[90m[39;49;00m
                [95mand[39;49;00m preexec_fn [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m close_fds[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m pass_fds[90m[39;49;00m
                [95mand[39;49;00m cwd [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m (p2cread == -[94m1[39;49;00m [95mor[39;49;00m p2cread > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (c2pwrite == -[94m1[39;49;00m [95mor[39;49;00m c2pwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (errwrite == -[94m1[39;49;00m [95mor[39;49;00m errwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m start_new_session[90m[39;49;00m
                [95mand[39;49;00m process_group == -[94m1[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gids [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m uid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m umask < [94m0[39;49;00m):[90m[39;49;00m
            [96mself[39;49;00m._posix_spawn(args, executable, env, restore_signals,[90m[39;49;00m
                              p2cread, p2cwrite,[90m[39;49;00m
                              c2pread, c2pwrite,[90m[39;49;00m
                              errread, errwrite)[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        orig_executable = executable[90m[39;49;00m
    [90m[39;49;00m
        [90m# For transferring possible exec failure from child to parent.[39;49;00m[90m[39;49;00m
        [90m# Data format: "exception name:hex errno:description"[39;49;00m[90m[39;49;00m
        [90m# Pickle is not used; it is complex and involves memory allocation.[39;49;00m[90m[39;49;00m
        errpipe_read, errpipe_write = os.pipe()[90m[39;49;00m
        [90m# errpipe_write must not be in the standard io 0, 1, or 2 fd range.[39;49;00m[90m[39;49;00m
        low_fds_to_close = [][90m[39;49;00m
        [94mwhile[39;49;00m errpipe_write < [94m3[39;49;00m:[90m[39;49;00m
            low_fds_to_close.append(errpipe_write)[90m[39;49;00m
            errpipe_write = os.dup(errpipe_write)[90m[39;49;00m
        [94mfor[39;49;00m low_fd [95min[39;49;00m low_fds_to_close:[90m[39;49;00m
            os.close(low_fd)[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [90m# We must avoid complex work that could involve[39;49;00m[90m[39;49;00m
                [90m# malloc or free in the child process to avoid[39;49;00m[90m[39;49;00m
                [90m# potential deadlocks, thus we do all this here.[39;49;00m[90m[39;49;00m
                [90m# and pass it to fork_exec()[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
                [94mif[39;49;00m env [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    env_list = [][90m[39;49;00m
                    [94mfor[39;49;00m k, v [95min[39;49;00m env.items():[90m[39;49;00m
                        k = os.fsencode(k)[90m[39;49;00m
                        [94mif[39;49;00m [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m [95min[39;49;00m k:[90m[39;49;00m
                            [94mraise[39;49;00m [96mValueError[39;49;00m([33m"[39;49;00m[33millegal environment variable name[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                        env_list.append(k + [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m + os.fsencode(v))[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    env_list = [94mNone[39;49;00m  [90m# Use execv instead of execve.[39;49;00m[90m[39;49;00m
                executable = os.fsencode(executable)[90m[39;49;00m
                [94mif[39;49;00m os.path.dirname(executable):[90m[39;49;00m
                    executable_list = (executable,)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# This matches the behavior of os._execvpe().[39;49;00m[90m[39;49;00m
                    executable_list = [96mtuple[39;49;00m([90m[39;49;00m
                        os.path.join(os.fsencode([96mdir[39;49;00m), executable)[90m[39;49;00m
                        [94mfor[39;49;00m [96mdir[39;49;00m [95min[39;49;00m os.get_exec_path(env))[90m[39;49;00m
                fds_to_keep = [96mset[39;49;00m(pass_fds)[90m[39;49;00m
                fds_to_keep.add(errpipe_write)[90m[39;49;00m
                [96mself[39;49;00m.pid = _fork_exec([90m[39;49;00m
                        args, executable_list,[90m[39;49;00m
                        close_fds, [96mtuple[39;49;00m([96msorted[39;49;00m([96mmap[39;49;00m([96mint[39;49;00m, fds_to_keep))),[90m[39;49;00m
                        cwd, env_list,[90m[39;49;00m
                        p2cread, p2cwrite, c2pread, c2pwrite,[90m[39;49;00m
                        errread, errwrite,[90m[39;49;00m
                        errpipe_read, errpipe_write,[90m[39;49;00m
                        restore_signals, start_new_session,[90m[39;49;00m
                        process_group, gid, gids, uid, umask,[90m[39;49;00m
                        preexec_fn, _USE_VFORK)[90m[39;49;00m
                [96mself[39;49;00m._child_created = [94mTrue[39;49;00m[90m[39;49;00m
            [94mfinally[39;49;00m:[90m[39;49;00m
                [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
                os.close(errpipe_write)[90m[39;49;00m
    [90m[39;49;00m
            [96mself[39;49;00m._close_pipe_fds(p2cread, p2cwrite,[90m[39;49;00m
                                 c2pread, c2pwrite,[90m[39;49;00m
                                 errread, errwrite)[90m[39;49;00m
    [90m[39;49;00m
            [90m# Wait for exec to fail or succeed; possibly raising an[39;49;00m[90m[39;49;00m
            [90m# exception (limited in size)[39;49;00m[90m[39;49;00m
            errpipe_data = [96mbytearray[39;49;00m()[90m[39;49;00m
            [94mwhile[39;49;00m [94mTrue[39;49;00m:[90m[39;49;00m
                part = os.read(errpipe_read, [94m50000[39;49;00m)[90m[39;49;00m
                errpipe_data += part[90m[39;49;00m
                [94mif[39;49;00m [95mnot[39;49;00m part [95mor[39;49;00m [96mlen[39;49;00m(errpipe_data) > [94m50000[39;49;00m:[90m[39;49;00m
                    [94mbreak[39;49;00m[90m[39;49;00m
        [94mfinally[39;49;00m:[90m[39;49;00m
            [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
            os.close(errpipe_read)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m errpipe_data:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                pid, sts = os.waitpid([96mself[39;49;00m.pid, [94m0[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m pid == [96mself[39;49;00m.pid:[90m[39;49;00m
                    [96mself[39;49;00m._handle_exitstatus(sts)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.returncode = sys.maxsize[90m[39;49;00m
            [94mexcept[39;49;00m [96mChildProcessError[39;49;00m:[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                exception_name, hex_errno, err_msg = ([90m[39;49;00m
                        errpipe_data.split([33mb[39;49;00m[33m'[39;49;00m[33m:[39;49;00m[33m'[39;49;00m, [94m2[39;49;00m))[90m[39;49;00m
                [90m# The encoding here should match the encoding[39;49;00m[90m[39;49;00m
                [90m# written in by the subprocess implementations[39;49;00m[90m[39;49;00m
                [90m# like _posixsubprocess[39;49;00m[90m[39;49;00m
                err_msg = err_msg.decode()[90m[39;49;00m
            [94mexcept[39;49;00m [96mValueError[39;49;00m:[90m[39;49;00m
                exception_name = [33mb[39;49;00m[33m'[39;49;00m[33mSubprocessError[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                hex_errno = [33mb[39;49;00m[33m'[39;49;00m[33m0[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                err_msg = [33m'[39;49;00m[33mBad exception data from child: [39;49;00m[33m{!r}[39;49;00m[33m'[39;49;00m.format([90m[39;49;00m
                              [96mbytes[39;49;00m(errpipe_data))[90m[39;49;00m
            child_exception_type = [96mgetattr[39;49;00m([90m[39;49;00m
                    builtins, exception_name.decode([33m'[39;49;00m[33mascii[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                    SubprocessError)[90m[39;49;00m
            [94mif[39;49;00m [96missubclass[39;49;00m(child_exception_type, [96mOSError[39;49;00m) [95mand[39;49;00m hex_errno:[90m[39;49;00m
                errno_num = [96mint[39;49;00m(hex_errno, [94m16[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec:chdir[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    [90m# The error must be from chdir(cwd).[39;49;00m[90m[39;49;00m
                    err_filename = cwd[90m[39;49;00m
                [94melif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    err_filename = [94mNone[39;49;00m[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    err_filename = orig_executable[90m[39;49;00m
                [94mif[39;49;00m errno_num != [94m0[39;49;00m:[90m[39;49;00m
                    err_msg = os.strerror(errno_num)[90m[39;49;00m
                [94mif[39;49;00m err_filename [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
>                   [94mraise[39;49;00m child_exception_type(errno_num, err_msg, err_filename)[90m[39;49;00m
[1m[31mE                   FileNotFoundError: [Errno 2] No such file or directory: 'py'[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:1955: FileNotFoundError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m test_py_command.py::[1mtest_py_command_sets_pythonpath[0m - FileNotFoundError: [Errno 2] No such file or directory: 'py'
[31mFAILED[0m test_py_command.py::[1mtest_py_command_sets_custom_pythonpath[0m - FileNotFoundError: [Errno 2] No such file or directory: 'py'
[31mFAILED[0m test_py_command.py::[1mtest_py_command_runs_script[0m - FileNotFoundError: [Errno 2] No such file or directory: 'py'
[31m========================= [31m[1m3 failed[0m, [32m6 passed[0m[31m in 2.42s[0m[31m ==========================[0m

2024-10-02 12:04:25,876 - ERROR - Command error: 
2024-10-02 12:05:10,539 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:05:35,597 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:05:55,222 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:08:23,655 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:08:25,802 - INFO - Successfully executed command: py test_py_command.py
2024-10-02 12:14:38,942 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:14:39,007 - ERROR - Error running command: Command '['/usr/bin/python3', '-c', "print('Hello, world' > py)"]' returned non-zero exit status 1.
2024-10-02 12:14:39,007 - ERROR - Command output: 
2024-10-02 12:14:39,008 - ERROR - Command error: Traceback (most recent call last):
  File "<string>", line 1, in <module>
NameError: name 'py' is not defined

2024-10-02 12:15:06,798 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:15:11,149 - ERROR - Error running command: Command '['pytest', '--color=yes', '.']' returned non-zero exit status 1.
2024-10-02 12:15:11,149 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 9 items

test_py_command.py [31mF[0m[31mF[0m[31mF[0m[31m                                                   [ 33%][0m
test_version_control_manager.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                   [100%][0m

=================================== FAILURES ===================================
[31m[1m_______________________ test_py_command_sets_pythonpath ________________________[0m

    [94mdef[39;49;00m [92mtest_py_command_sets_pythonpath[39;49;00m():[90m[39;49;00m
>       run_py_command([ [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpass[39;49;00m[33m"[39;49;00m ], [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m)[90m[39;49;00m

[1m[31mtest_py_command.py[0m:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtest_py_command.py[0m:9: in run_py_command
    result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m] + args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=[94mTrue[39;49;00m, check=[94mTrue[39;49;00m)[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:548: in run
    [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:1026: in __init__
    [96mself[39;49;00m._execute_child(args, executable, preexec_fn, close_fds,[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Popen: returncode: 255 args: ['py', '-c', 'pass']>
args = ['py', '-c', 'pass'], executable = b'py', preexec_fn = None
close_fds = True, pass_fds = (), cwd = None, env = None, startupinfo = None
creationflags = 0, shell = False, p2cread = -1, p2cwrite = -1, c2pread = 11
c2pwrite = 12, errread = 13, errwrite = 14, restore_signals = True, gid = None
gids = None, uid = None, umask = -1, start_new_session = False
process_group = -1

    [94mdef[39;49;00m [92m_execute_child[39;49;00m([96mself[39;49;00m, args, executable, preexec_fn, close_fds,[90m[39;49;00m
                       pass_fds, cwd, env,[90m[39;49;00m
                       startupinfo, creationflags, shell,[90m[39;49;00m
                       p2cread, p2cwrite,[90m[39;49;00m
                       c2pread, c2pwrite,[90m[39;49;00m
                       errread, errwrite,[90m[39;49;00m
                       restore_signals,[90m[39;49;00m
                       gid, gids, uid, umask,[90m[39;49;00m
                       start_new_session, process_group):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Execute program (POSIX version)"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(args, ([96mstr[39;49;00m, [96mbytes[39;49;00m)):[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melif[39;49;00m [96misinstance[39;49;00m(args, os.PathLike):[90m[39;49;00m
            [94mif[39;49;00m shell:[90m[39;49;00m
                [94mraise[39;49;00m [96mTypeError[39;49;00m([33m'[39;49;00m[33mpath-like args is not allowed when [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                [33m'[39;49;00m[33mshell is true[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            args = [96mlist[39;49;00m(args)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m shell:[90m[39;49;00m
            [90m# On Android the default shell is at '/system/bin/sh'.[39;49;00m[90m[39;49;00m
            unix_shell = ([33m'[39;49;00m[33m/system/bin/sh[39;49;00m[33m'[39;49;00m [94mif[39;49;00m[90m[39;49;00m
                      [96mhasattr[39;49;00m(sys, [33m'[39;49;00m[33mgetandroidapilevel[39;49;00m[33m'[39;49;00m) [94melse[39;49;00m [33m'[39;49;00m[33m/bin/sh[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [unix_shell, [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m] + args[90m[39;49;00m
            [94mif[39;49;00m executable:[90m[39;49;00m
                args[[94m0[39;49;00m] = executable[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m executable [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            executable = args[[94m0[39;49;00m][90m[39;49;00m
    [90m[39;49;00m
        sys.audit([33m"[39;49;00m[33msubprocess.Popen[39;49;00m[33m"[39;49;00m, executable, args, cwd, env)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m (_USE_POSIX_SPAWN[90m[39;49;00m
                [95mand[39;49;00m os.path.dirname(executable)[90m[39;49;00m
                [95mand[39;49;00m preexec_fn [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m close_fds[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m pass_fds[90m[39;49;00m
                [95mand[39;49;00m cwd [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m (p2cread == -[94m1[39;49;00m [95mor[39;49;00m p2cread > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (c2pwrite == -[94m1[39;49;00m [95mor[39;49;00m c2pwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (errwrite == -[94m1[39;49;00m [95mor[39;49;00m errwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m start_new_session[90m[39;49;00m
                [95mand[39;49;00m process_group == -[94m1[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gids [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m uid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m umask < [94m0[39;49;00m):[90m[39;49;00m
            [96mself[39;49;00m._posix_spawn(args, executable, env, restore_signals,[90m[39;49;00m
                              p2cread, p2cwrite,[90m[39;49;00m
                              c2pread, c2pwrite,[90m[39;49;00m
                              errread, errwrite)[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        orig_executable = executable[90m[39;49;00m
    [90m[39;49;00m
        [90m# For transferring possible exec failure from child to parent.[39;49;00m[90m[39;49;00m
        [90m# Data format: "exception name:hex errno:description"[39;49;00m[90m[39;49;00m
        [90m# Pickle is not used; it is complex and involves memory allocation.[39;49;00m[90m[39;49;00m
        errpipe_read, errpipe_write = os.pipe()[90m[39;49;00m
        [90m# errpipe_write must not be in the standard io 0, 1, or 2 fd range.[39;49;00m[90m[39;49;00m
        low_fds_to_close = [][90m[39;49;00m
        [94mwhile[39;49;00m errpipe_write < [94m3[39;49;00m:[90m[39;49;00m
            low_fds_to_close.append(errpipe_write)[90m[39;49;00m
            errpipe_write = os.dup(errpipe_write)[90m[39;49;00m
        [94mfor[39;49;00m low_fd [95min[39;49;00m low_fds_to_close:[90m[39;49;00m
            os.close(low_fd)[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [90m# We must avoid complex work that could involve[39;49;00m[90m[39;49;00m
                [90m# malloc or free in the child process to avoid[39;49;00m[90m[39;49;00m
                [90m# potential deadlocks, thus we do all this here.[39;49;00m[90m[39;49;00m
                [90m# and pass it to fork_exec()[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
                [94mif[39;49;00m env [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    env_list = [][90m[39;49;00m
                    [94mfor[39;49;00m k, v [95min[39;49;00m env.items():[90m[39;49;00m
                        k = os.fsencode(k)[90m[39;49;00m
                        [94mif[39;49;00m [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m [95min[39;49;00m k:[90m[39;49;00m
                            [94mraise[39;49;00m [96mValueError[39;49;00m([33m"[39;49;00m[33millegal environment variable name[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                        env_list.append(k + [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m + os.fsencode(v))[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    env_list = [94mNone[39;49;00m  [90m# Use execv instead of execve.[39;49;00m[90m[39;49;00m
                executable = os.fsencode(executable)[90m[39;49;00m
                [94mif[39;49;00m os.path.dirname(executable):[90m[39;49;00m
                    executable_list = (executable,)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# This matches the behavior of os._execvpe().[39;49;00m[90m[39;49;00m
                    executable_list = [96mtuple[39;49;00m([90m[39;49;00m
                        os.path.join(os.fsencode([96mdir[39;49;00m), executable)[90m[39;49;00m
                        [94mfor[39;49;00m [96mdir[39;49;00m [95min[39;49;00m os.get_exec_path(env))[90m[39;49;00m
                fds_to_keep = [96mset[39;49;00m(pass_fds)[90m[39;49;00m
                fds_to_keep.add(errpipe_write)[90m[39;49;00m
                [96mself[39;49;00m.pid = _fork_exec([90m[39;49;00m
                        args, executable_list,[90m[39;49;00m
                        close_fds, [96mtuple[39;49;00m([96msorted[39;49;00m([96mmap[39;49;00m([96mint[39;49;00m, fds_to_keep))),[90m[39;49;00m
                        cwd, env_list,[90m[39;49;00m
                        p2cread, p2cwrite, c2pread, c2pwrite,[90m[39;49;00m
                        errread, errwrite,[90m[39;49;00m
                        errpipe_read, errpipe_write,[90m[39;49;00m
                        restore_signals, start_new_session,[90m[39;49;00m
                        process_group, gid, gids, uid, umask,[90m[39;49;00m
                        preexec_fn, _USE_VFORK)[90m[39;49;00m
                [96mself[39;49;00m._child_created = [94mTrue[39;49;00m[90m[39;49;00m
            [94mfinally[39;49;00m:[90m[39;49;00m
                [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
                os.close(errpipe_write)[90m[39;49;00m
    [90m[39;49;00m
            [96mself[39;49;00m._close_pipe_fds(p2cread, p2cwrite,[90m[39;49;00m
                                 c2pread, c2pwrite,[90m[39;49;00m
                                 errread, errwrite)[90m[39;49;00m
    [90m[39;49;00m
            [90m# Wait for exec to fail or succeed; possibly raising an[39;49;00m[90m[39;49;00m
            [90m# exception (limited in size)[39;49;00m[90m[39;49;00m
            errpipe_data = [96mbytearray[39;49;00m()[90m[39;49;00m
            [94mwhile[39;49;00m [94mTrue[39;49;00m:[90m[39;49;00m
                part = os.read(errpipe_read, [94m50000[39;49;00m)[90m[39;49;00m
                errpipe_data += part[90m[39;49;00m
                [94mif[39;49;00m [95mnot[39;49;00m part [95mor[39;49;00m [96mlen[39;49;00m(errpipe_data) > [94m50000[39;49;00m:[90m[39;49;00m
                    [94mbreak[39;49;00m[90m[39;49;00m
        [94mfinally[39;49;00m:[90m[39;49;00m
            [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
            os.close(errpipe_read)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m errpipe_data:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                pid, sts = os.waitpid([96mself[39;49;00m.pid, [94m0[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m pid == [96mself[39;49;00m.pid:[90m[39;49;00m
                    [96mself[39;49;00m._handle_exitstatus(sts)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.returncode = sys.maxsize[90m[39;49;00m
            [94mexcept[39;49;00m [96mChildProcessError[39;49;00m:[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                exception_name, hex_errno, err_msg = ([90m[39;49;00m
                        errpipe_data.split([33mb[39;49;00m[33m'[39;49;00m[33m:[39;49;00m[33m'[39;49;00m, [94m2[39;49;00m))[90m[39;49;00m
                [90m# The encoding here should match the encoding[39;49;00m[90m[39;49;00m
                [90m# written in by the subprocess implementations[39;49;00m[90m[39;49;00m
                [90m# like _posixsubprocess[39;49;00m[90m[39;49;00m
                err_msg = err_msg.decode()[90m[39;49;00m
            [94mexcept[39;49;00m [96mValueError[39;49;00m:[90m[39;49;00m
                exception_name = [33mb[39;49;00m[33m'[39;49;00m[33mSubprocessError[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                hex_errno = [33mb[39;49;00m[33m'[39;49;00m[33m0[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                err_msg = [33m'[39;49;00m[33mBad exception data from child: [39;49;00m[33m{!r}[39;49;00m[33m'[39;49;00m.format([90m[39;49;00m
                              [96mbytes[39;49;00m(errpipe_data))[90m[39;49;00m
            child_exception_type = [96mgetattr[39;49;00m([90m[39;49;00m
                    builtins, exception_name.decode([33m'[39;49;00m[33mascii[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                    SubprocessError)[90m[39;49;00m
            [94mif[39;49;00m [96missubclass[39;49;00m(child_exception_type, [96mOSError[39;49;00m) [95mand[39;49;00m hex_errno:[90m[39;49;00m
                errno_num = [96mint[39;49;00m(hex_errno, [94m16[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec:chdir[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    [90m# The error must be from chdir(cwd).[39;49;00m[90m[39;49;00m
                    err_filename = cwd[90m[39;49;00m
                [94melif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    err_filename = [94mNone[39;49;00m[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    err_filename = orig_executable[90m[39;49;00m
                [94mif[39;49;00m errno_num != [94m0[39;49;00m:[90m[39;49;00m
                    err_msg = os.strerror(errno_num)[90m[39;49;00m
                [94mif[39;49;00m err_filename [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
>                   [94mraise[39;49;00m child_exception_type(errno_num, err_msg, err_filename)[90m[39;49;00m
[1m[31mE                   FileNotFoundError: [Errno 2] No such file or directory: 'py'[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:1955: FileNotFoundError
[31m[1m____________________ test_py_command_sets_custom_pythonpath ____________________[0m

    [94mdef[39;49;00m [92mtest_py_command_sets_custom_pythonpath[39;49;00m():[90m[39;49;00m
>       run_py_command([ [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpass[39;49;00m[33m"[39;49;00m ], [33m"[39;49;00m[33mOuter_dir[39;49;00m[33m"[39;49;00m)[90m[39;49;00m

[1m[31mtest_py_command.py[0m:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtest_py_command.py[0m:9: in run_py_command
    result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m] + args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=[94mTrue[39;49;00m, check=[94mTrue[39;49;00m)[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:548: in run
    [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:1026: in __init__
    [96mself[39;49;00m._execute_child(args, executable, preexec_fn, close_fds,[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Popen: returncode: 255 args: ['py', '-c', 'pass']>
args = ['py', '-c', 'pass'], executable = b'py', preexec_fn = None
close_fds = True, pass_fds = (), cwd = None, env = None, startupinfo = None
creationflags = 0, shell = False, p2cread = -1, p2cwrite = -1, c2pread = 11
c2pwrite = 12, errread = 13, errwrite = 14, restore_signals = True, gid = None
gids = None, uid = None, umask = -1, start_new_session = False
process_group = -1

    [94mdef[39;49;00m [92m_execute_child[39;49;00m([96mself[39;49;00m, args, executable, preexec_fn, close_fds,[90m[39;49;00m
                       pass_fds, cwd, env,[90m[39;49;00m
                       startupinfo, creationflags, shell,[90m[39;49;00m
                       p2cread, p2cwrite,[90m[39;49;00m
                       c2pread, c2pwrite,[90m[39;49;00m
                       errread, errwrite,[90m[39;49;00m
                       restore_signals,[90m[39;49;00m
                       gid, gids, uid, umask,[90m[39;49;00m
                       start_new_session, process_group):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Execute program (POSIX version)"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(args, ([96mstr[39;49;00m, [96mbytes[39;49;00m)):[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melif[39;49;00m [96misinstance[39;49;00m(args, os.PathLike):[90m[39;49;00m
            [94mif[39;49;00m shell:[90m[39;49;00m
                [94mraise[39;49;00m [96mTypeError[39;49;00m([33m'[39;49;00m[33mpath-like args is not allowed when [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                [33m'[39;49;00m[33mshell is true[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            args = [96mlist[39;49;00m(args)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m shell:[90m[39;49;00m
            [90m# On Android the default shell is at '/system/bin/sh'.[39;49;00m[90m[39;49;00m
            unix_shell = ([33m'[39;49;00m[33m/system/bin/sh[39;49;00m[33m'[39;49;00m [94mif[39;49;00m[90m[39;49;00m
                      [96mhasattr[39;49;00m(sys, [33m'[39;49;00m[33mgetandroidapilevel[39;49;00m[33m'[39;49;00m) [94melse[39;49;00m [33m'[39;49;00m[33m/bin/sh[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [unix_shell, [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m] + args[90m[39;49;00m
            [94mif[39;49;00m executable:[90m[39;49;00m
                args[[94m0[39;49;00m] = executable[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m executable [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            executable = args[[94m0[39;49;00m][90m[39;49;00m
    [90m[39;49;00m
        sys.audit([33m"[39;49;00m[33msubprocess.Popen[39;49;00m[33m"[39;49;00m, executable, args, cwd, env)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m (_USE_POSIX_SPAWN[90m[39;49;00m
                [95mand[39;49;00m os.path.dirname(executable)[90m[39;49;00m
                [95mand[39;49;00m preexec_fn [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m close_fds[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m pass_fds[90m[39;49;00m
                [95mand[39;49;00m cwd [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m (p2cread == -[94m1[39;49;00m [95mor[39;49;00m p2cread > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (c2pwrite == -[94m1[39;49;00m [95mor[39;49;00m c2pwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (errwrite == -[94m1[39;49;00m [95mor[39;49;00m errwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m start_new_session[90m[39;49;00m
                [95mand[39;49;00m process_group == -[94m1[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gids [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m uid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m umask < [94m0[39;49;00m):[90m[39;49;00m
            [96mself[39;49;00m._posix_spawn(args, executable, env, restore_signals,[90m[39;49;00m
                              p2cread, p2cwrite,[90m[39;49;00m
                              c2pread, c2pwrite,[90m[39;49;00m
                              errread, errwrite)[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        orig_executable = executable[90m[39;49;00m
    [90m[39;49;00m
        [90m# For transferring possible exec failure from child to parent.[39;49;00m[90m[39;49;00m
        [90m# Data format: "exception name:hex errno:description"[39;49;00m[90m[39;49;00m
        [90m# Pickle is not used; it is complex and involves memory allocation.[39;49;00m[90m[39;49;00m
        errpipe_read, errpipe_write = os.pipe()[90m[39;49;00m
        [90m# errpipe_write must not be in the standard io 0, 1, or 2 fd range.[39;49;00m[90m[39;49;00m
        low_fds_to_close = [][90m[39;49;00m
        [94mwhile[39;49;00m errpipe_write < [94m3[39;49;00m:[90m[39;49;00m
            low_fds_to_close.append(errpipe_write)[90m[39;49;00m
            errpipe_write = os.dup(errpipe_write)[90m[39;49;00m
        [94mfor[39;49;00m low_fd [95min[39;49;00m low_fds_to_close:[90m[39;49;00m
            os.close(low_fd)[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [90m# We must avoid complex work that could involve[39;49;00m[90m[39;49;00m
                [90m# malloc or free in the child process to avoid[39;49;00m[90m[39;49;00m
                [90m# potential deadlocks, thus we do all this here.[39;49;00m[90m[39;49;00m
                [90m# and pass it to fork_exec()[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
                [94mif[39;49;00m env [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    env_list = [][90m[39;49;00m
                    [94mfor[39;49;00m k, v [95min[39;49;00m env.items():[90m[39;49;00m
                        k = os.fsencode(k)[90m[39;49;00m
                        [94mif[39;49;00m [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m [95min[39;49;00m k:[90m[39;49;00m
                            [94mraise[39;49;00m [96mValueError[39;49;00m([33m"[39;49;00m[33millegal environment variable name[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                        env_list.append(k + [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m + os.fsencode(v))[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    env_list = [94mNone[39;49;00m  [90m# Use execv instead of execve.[39;49;00m[90m[39;49;00m
                executable = os.fsencode(executable)[90m[39;49;00m
                [94mif[39;49;00m os.path.dirname(executable):[90m[39;49;00m
                    executable_list = (executable,)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# This matches the behavior of os._execvpe().[39;49;00m[90m[39;49;00m
                    executable_list = [96mtuple[39;49;00m([90m[39;49;00m
                        os.path.join(os.fsencode([96mdir[39;49;00m), executable)[90m[39;49;00m
                        [94mfor[39;49;00m [96mdir[39;49;00m [95min[39;49;00m os.get_exec_path(env))[90m[39;49;00m
                fds_to_keep = [96mset[39;49;00m(pass_fds)[90m[39;49;00m
                fds_to_keep.add(errpipe_write)[90m[39;49;00m
                [96mself[39;49;00m.pid = _fork_exec([90m[39;49;00m
                        args, executable_list,[90m[39;49;00m
                        close_fds, [96mtuple[39;49;00m([96msorted[39;49;00m([96mmap[39;49;00m([96mint[39;49;00m, fds_to_keep))),[90m[39;49;00m
                        cwd, env_list,[90m[39;49;00m
                        p2cread, p2cwrite, c2pread, c2pwrite,[90m[39;49;00m
                        errread, errwrite,[90m[39;49;00m
                        errpipe_read, errpipe_write,[90m[39;49;00m
                        restore_signals, start_new_session,[90m[39;49;00m
                        process_group, gid, gids, uid, umask,[90m[39;49;00m
                        preexec_fn, _USE_VFORK)[90m[39;49;00m
                [96mself[39;49;00m._child_created = [94mTrue[39;49;00m[90m[39;49;00m
            [94mfinally[39;49;00m:[90m[39;49;00m
                [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
                os.close(errpipe_write)[90m[39;49;00m
    [90m[39;49;00m
            [96mself[39;49;00m._close_pipe_fds(p2cread, p2cwrite,[90m[39;49;00m
                                 c2pread, c2pwrite,[90m[39;49;00m
                                 errread, errwrite)[90m[39;49;00m
    [90m[39;49;00m
            [90m# Wait for exec to fail or succeed; possibly raising an[39;49;00m[90m[39;49;00m
            [90m# exception (limited in size)[39;49;00m[90m[39;49;00m
            errpipe_data = [96mbytearray[39;49;00m()[90m[39;49;00m
            [94mwhile[39;49;00m [94mTrue[39;49;00m:[90m[39;49;00m
                part = os.read(errpipe_read, [94m50000[39;49;00m)[90m[39;49;00m
                errpipe_data += part[90m[39;49;00m
                [94mif[39;49;00m [95mnot[39;49;00m part [95mor[39;49;00m [96mlen[39;49;00m(errpipe_data) > [94m50000[39;49;00m:[90m[39;49;00m
                    [94mbreak[39;49;00m[90m[39;49;00m
        [94mfinally[39;49;00m:[90m[39;49;00m
            [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
            os.close(errpipe_read)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m errpipe_data:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                pid, sts = os.waitpid([96mself[39;49;00m.pid, [94m0[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m pid == [96mself[39;49;00m.pid:[90m[39;49;00m
                    [96mself[39;49;00m._handle_exitstatus(sts)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.returncode = sys.maxsize[90m[39;49;00m
            [94mexcept[39;49;00m [96mChildProcessError[39;49;00m:[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                exception_name, hex_errno, err_msg = ([90m[39;49;00m
                        errpipe_data.split([33mb[39;49;00m[33m'[39;49;00m[33m:[39;49;00m[33m'[39;49;00m, [94m2[39;49;00m))[90m[39;49;00m
                [90m# The encoding here should match the encoding[39;49;00m[90m[39;49;00m
                [90m# written in by the subprocess implementations[39;49;00m[90m[39;49;00m
                [90m# like _posixsubprocess[39;49;00m[90m[39;49;00m
                err_msg = err_msg.decode()[90m[39;49;00m
            [94mexcept[39;49;00m [96mValueError[39;49;00m:[90m[39;49;00m
                exception_name = [33mb[39;49;00m[33m'[39;49;00m[33mSubprocessError[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                hex_errno = [33mb[39;49;00m[33m'[39;49;00m[33m0[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                err_msg = [33m'[39;49;00m[33mBad exception data from child: [39;49;00m[33m{!r}[39;49;00m[33m'[39;49;00m.format([90m[39;49;00m
                              [96mbytes[39;49;00m(errpipe_data))[90m[39;49;00m
            child_exception_type = [96mgetattr[39;49;00m([90m[39;49;00m
                    builtins, exception_name.decode([33m'[39;49;00m[33mascii[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                    SubprocessError)[90m[39;49;00m
            [94mif[39;49;00m [96missubclass[39;49;00m(child_exception_type, [96mOSError[39;49;00m) [95mand[39;49;00m hex_errno:[90m[39;49;00m
                errno_num = [96mint[39;49;00m(hex_errno, [94m16[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec:chdir[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    [90m# The error must be from chdir(cwd).[39;49;00m[90m[39;49;00m
                    err_filename = cwd[90m[39;49;00m
                [94melif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    err_filename = [94mNone[39;49;00m[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    err_filename = orig_executable[90m[39;49;00m
                [94mif[39;49;00m errno_num != [94m0[39;49;00m:[90m[39;49;00m
                    err_msg = os.strerror(errno_num)[90m[39;49;00m
                [94mif[39;49;00m err_filename [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
>                   [94mraise[39;49;00m child_exception_type(errno_num, err_msg, err_filename)[90m[39;49;00m
[1m[31mE                   FileNotFoundError: [Errno 2] No such file or directory: 'py'[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:1955: FileNotFoundError
[31m[1m_________________________ test_py_command_runs_script __________________________[0m

    [94mdef[39;49;00m [92mtest_py_command_runs_script[39;49;00m():[90m[39;49;00m
        script_content = [33m"[39;49;00m[33mprint([39;49;00m[33m'[39;49;00m[33mHello, world![39;49;00m[33m'[39;49;00m[33m)[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m [96mopen[39;49;00m([33m"[39;49;00m[33mtest_script.py[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mw[39;49;00m[33m"[39;49;00m) [94mas[39;49;00m f:[90m[39;49;00m
            f.write(script_content)[90m[39;49;00m
>       output = run_py_command([[33m"[39;49;00m[33mtest_script.py[39;49;00m[33m"[39;49;00m], [33m"[39;49;00m[33menvy[39;49;00m[33m"[39;49;00m)[90m[39;49;00m

[1m[31mtest_py_command.py[0m:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtest_py_command.py[0m:9: in run_py_command
    result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m] + args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=[94mTrue[39;49;00m, check=[94mTrue[39;49;00m)[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:548: in run
    [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:1026: in __init__
    [96mself[39;49;00m._execute_child(args, executable, preexec_fn, close_fds,[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Popen: returncode: 255 args: ['py', 'test_script.py']>
args = ['py', 'test_script.py'], executable = b'py', preexec_fn = None
close_fds = True, pass_fds = (), cwd = None, env = None, startupinfo = None
creationflags = 0, shell = False, p2cread = -1, p2cwrite = -1, c2pread = 11
c2pwrite = 12, errread = 13, errwrite = 14, restore_signals = True, gid = None
gids = None, uid = None, umask = -1, start_new_session = False
process_group = -1

    [94mdef[39;49;00m [92m_execute_child[39;49;00m([96mself[39;49;00m, args, executable, preexec_fn, close_fds,[90m[39;49;00m
                       pass_fds, cwd, env,[90m[39;49;00m
                       startupinfo, creationflags, shell,[90m[39;49;00m
                       p2cread, p2cwrite,[90m[39;49;00m
                       c2pread, c2pwrite,[90m[39;49;00m
                       errread, errwrite,[90m[39;49;00m
                       restore_signals,[90m[39;49;00m
                       gid, gids, uid, umask,[90m[39;49;00m
                       start_new_session, process_group):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Execute program (POSIX version)"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(args, ([96mstr[39;49;00m, [96mbytes[39;49;00m)):[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melif[39;49;00m [96misinstance[39;49;00m(args, os.PathLike):[90m[39;49;00m
            [94mif[39;49;00m shell:[90m[39;49;00m
                [94mraise[39;49;00m [96mTypeError[39;49;00m([33m'[39;49;00m[33mpath-like args is not allowed when [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                [33m'[39;49;00m[33mshell is true[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            args = [96mlist[39;49;00m(args)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m shell:[90m[39;49;00m
            [90m# On Android the default shell is at '/system/bin/sh'.[39;49;00m[90m[39;49;00m
            unix_shell = ([33m'[39;49;00m[33m/system/bin/sh[39;49;00m[33m'[39;49;00m [94mif[39;49;00m[90m[39;49;00m
                      [96mhasattr[39;49;00m(sys, [33m'[39;49;00m[33mgetandroidapilevel[39;49;00m[33m'[39;49;00m) [94melse[39;49;00m [33m'[39;49;00m[33m/bin/sh[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [unix_shell, [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m] + args[90m[39;49;00m
            [94mif[39;49;00m executable:[90m[39;49;00m
                args[[94m0[39;49;00m] = executable[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m executable [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            executable = args[[94m0[39;49;00m][90m[39;49;00m
    [90m[39;49;00m
        sys.audit([33m"[39;49;00m[33msubprocess.Popen[39;49;00m[33m"[39;49;00m, executable, args, cwd, env)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m (_USE_POSIX_SPAWN[90m[39;49;00m
                [95mand[39;49;00m os.path.dirname(executable)[90m[39;49;00m
                [95mand[39;49;00m preexec_fn [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m close_fds[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m pass_fds[90m[39;49;00m
                [95mand[39;49;00m cwd [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m (p2cread == -[94m1[39;49;00m [95mor[39;49;00m p2cread > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (c2pwrite == -[94m1[39;49;00m [95mor[39;49;00m c2pwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (errwrite == -[94m1[39;49;00m [95mor[39;49;00m errwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m start_new_session[90m[39;49;00m
                [95mand[39;49;00m process_group == -[94m1[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gids [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m uid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m umask < [94m0[39;49;00m):[90m[39;49;00m
            [96mself[39;49;00m._posix_spawn(args, executable, env, restore_signals,[90m[39;49;00m
                              p2cread, p2cwrite,[90m[39;49;00m
                              c2pread, c2pwrite,[90m[39;49;00m
                              errread, errwrite)[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        orig_executable = executable[90m[39;49;00m
    [90m[39;49;00m
        [90m# For transferring possible exec failure from child to parent.[39;49;00m[90m[39;49;00m
        [90m# Data format: "exception name:hex errno:description"[39;49;00m[90m[39;49;00m
        [90m# Pickle is not used; it is complex and involves memory allocation.[39;49;00m[90m[39;49;00m
        errpipe_read, errpipe_write = os.pipe()[90m[39;49;00m
        [90m# errpipe_write must not be in the standard io 0, 1, or 2 fd range.[39;49;00m[90m[39;49;00m
        low_fds_to_close = [][90m[39;49;00m
        [94mwhile[39;49;00m errpipe_write < [94m3[39;49;00m:[90m[39;49;00m
            low_fds_to_close.append(errpipe_write)[90m[39;49;00m
            errpipe_write = os.dup(errpipe_write)[90m[39;49;00m
        [94mfor[39;49;00m low_fd [95min[39;49;00m low_fds_to_close:[90m[39;49;00m
            os.close(low_fd)[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [90m# We must avoid complex work that could involve[39;49;00m[90m[39;49;00m
                [90m# malloc or free in the child process to avoid[39;49;00m[90m[39;49;00m
                [90m# potential deadlocks, thus we do all this here.[39;49;00m[90m[39;49;00m
                [90m# and pass it to fork_exec()[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
                [94mif[39;49;00m env [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    env_list = [][90m[39;49;00m
                    [94mfor[39;49;00m k, v [95min[39;49;00m env.items():[90m[39;49;00m
                        k = os.fsencode(k)[90m[39;49;00m
                        [94mif[39;49;00m [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m [95min[39;49;00m k:[90m[39;49;00m
                            [94mraise[39;49;00m [96mValueError[39;49;00m([33m"[39;49;00m[33millegal environment variable name[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                        env_list.append(k + [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m + os.fsencode(v))[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    env_list = [94mNone[39;49;00m  [90m# Use execv instead of execve.[39;49;00m[90m[39;49;00m
                executable = os.fsencode(executable)[90m[39;49;00m
                [94mif[39;49;00m os.path.dirname(executable):[90m[39;49;00m
                    executable_list = (executable,)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# This matches the behavior of os._execvpe().[39;49;00m[90m[39;49;00m
                    executable_list = [96mtuple[39;49;00m([90m[39;49;00m
                        os.path.join(os.fsencode([96mdir[39;49;00m), executable)[90m[39;49;00m
                        [94mfor[39;49;00m [96mdir[39;49;00m [95min[39;49;00m os.get_exec_path(env))[90m[39;49;00m
                fds_to_keep = [96mset[39;49;00m(pass_fds)[90m[39;49;00m
                fds_to_keep.add(errpipe_write)[90m[39;49;00m
                [96mself[39;49;00m.pid = _fork_exec([90m[39;49;00m
                        args, executable_list,[90m[39;49;00m
                        close_fds, [96mtuple[39;49;00m([96msorted[39;49;00m([96mmap[39;49;00m([96mint[39;49;00m, fds_to_keep))),[90m[39;49;00m
                        cwd, env_list,[90m[39;49;00m
                        p2cread, p2cwrite, c2pread, c2pwrite,[90m[39;49;00m
                        errread, errwrite,[90m[39;49;00m
                        errpipe_read, errpipe_write,[90m[39;49;00m
                        restore_signals, start_new_session,[90m[39;49;00m
                        process_group, gid, gids, uid, umask,[90m[39;49;00m
                        preexec_fn, _USE_VFORK)[90m[39;49;00m
                [96mself[39;49;00m._child_created = [94mTrue[39;49;00m[90m[39;49;00m
            [94mfinally[39;49;00m:[90m[39;49;00m
                [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
                os.close(errpipe_write)[90m[39;49;00m
    [90m[39;49;00m
            [96mself[39;49;00m._close_pipe_fds(p2cread, p2cwrite,[90m[39;49;00m
                                 c2pread, c2pwrite,[90m[39;49;00m
                                 errread, errwrite)[90m[39;49;00m
    [90m[39;49;00m
            [90m# Wait for exec to fail or succeed; possibly raising an[39;49;00m[90m[39;49;00m
            [90m# exception (limited in size)[39;49;00m[90m[39;49;00m
            errpipe_data = [96mbytearray[39;49;00m()[90m[39;49;00m
            [94mwhile[39;49;00m [94mTrue[39;49;00m:[90m[39;49;00m
                part = os.read(errpipe_read, [94m50000[39;49;00m)[90m[39;49;00m
                errpipe_data += part[90m[39;49;00m
                [94mif[39;49;00m [95mnot[39;49;00m part [95mor[39;49;00m [96mlen[39;49;00m(errpipe_data) > [94m50000[39;49;00m:[90m[39;49;00m
                    [94mbreak[39;49;00m[90m[39;49;00m
        [94mfinally[39;49;00m:[90m[39;49;00m
            [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
            os.close(errpipe_read)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m errpipe_data:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                pid, sts = os.waitpid([96mself[39;49;00m.pid, [94m0[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m pid == [96mself[39;49;00m.pid:[90m[39;49;00m
                    [96mself[39;49;00m._handle_exitstatus(sts)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.returncode = sys.maxsize[90m[39;49;00m
            [94mexcept[39;49;00m [96mChildProcessError[39;49;00m:[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                exception_name, hex_errno, err_msg = ([90m[39;49;00m
                        errpipe_data.split([33mb[39;49;00m[33m'[39;49;00m[33m:[39;49;00m[33m'[39;49;00m, [94m2[39;49;00m))[90m[39;49;00m
                [90m# The encoding here should match the encoding[39;49;00m[90m[39;49;00m
                [90m# written in by the subprocess implementations[39;49;00m[90m[39;49;00m
                [90m# like _posixsubprocess[39;49;00m[90m[39;49;00m
                err_msg = err_msg.decode()[90m[39;49;00m
            [94mexcept[39;49;00m [96mValueError[39;49;00m:[90m[39;49;00m
                exception_name = [33mb[39;49;00m[33m'[39;49;00m[33mSubprocessError[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                hex_errno = [33mb[39;49;00m[33m'[39;49;00m[33m0[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                err_msg = [33m'[39;49;00m[33mBad exception data from child: [39;49;00m[33m{!r}[39;49;00m[33m'[39;49;00m.format([90m[39;49;00m
                              [96mbytes[39;49;00m(errpipe_data))[90m[39;49;00m
            child_exception_type = [96mgetattr[39;49;00m([90m[39;49;00m
                    builtins, exception_name.decode([33m'[39;49;00m[33mascii[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                    SubprocessError)[90m[39;49;00m
            [94mif[39;49;00m [96missubclass[39;49;00m(child_exception_type, [96mOSError[39;49;00m) [95mand[39;49;00m hex_errno:[90m[39;49;00m
                errno_num = [96mint[39;49;00m(hex_errno, [94m16[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec:chdir[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    [90m# The error must be from chdir(cwd).[39;49;00m[90m[39;49;00m
                    err_filename = cwd[90m[39;49;00m
                [94melif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    err_filename = [94mNone[39;49;00m[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    err_filename = orig_executable[90m[39;49;00m
                [94mif[39;49;00m errno_num != [94m0[39;49;00m:[90m[39;49;00m
                    err_msg = os.strerror(errno_num)[90m[39;49;00m
                [94mif[39;49;00m err_filename [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
>                   [94mraise[39;49;00m child_exception_type(errno_num, err_msg, err_filename)[90m[39;49;00m
[1m[31mE                   FileNotFoundError: [Errno 2] No such file or directory: 'py'[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:1955: FileNotFoundError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m test_py_command.py::[1mtest_py_command_sets_pythonpath[0m - FileNotFoundError: [Errno 2] No such file or directory: 'py'
[31mFAILED[0m test_py_command.py::[1mtest_py_command_sets_custom_pythonpath[0m - FileNotFoundError: [Errno 2] No such file or directory: 'py'
[31mFAILED[0m test_py_command.py::[1mtest_py_command_runs_script[0m - FileNotFoundError: [Errno 2] No such file or directory: 'py'
[31m========================= [31m[1m3 failed[0m, [32m6 passed[0m[31m in 2.85s[0m[31m ==========================[0m

2024-10-02 12:15:11,151 - ERROR - Command error: 
2024-10-02 12:15:34,514 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:15:46,421 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:15:46,485 - ERROR - Error running command: Command '['/usr/bin/python3', '-c', "print('Hello, world' > py)"]' returned non-zero exit status 1.
2024-10-02 12:15:46,486 - ERROR - Command output: 
2024-10-02 12:15:46,486 - ERROR - Command error: Traceback (most recent call last):
  File "<string>", line 1, in <module>
NameError: name 'py' is not defined

2024-10-02 12:16:47,106 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:16:47,161 - ERROR - Error running command: Command '['/usr/bin/python3', '-c', "print('Hello, world' > py)"]' returned non-zero exit status 1.
2024-10-02 12:16:47,161 - ERROR - Command output: 
2024-10-02 12:16:47,161 - ERROR - Command error: Traceback (most recent call last):
  File "<string>", line 1, in <module>
NameError: name 'py' is not defined

2024-10-02 12:19:37,186 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:19:40,842 - ERROR - Error running command: Command '['pytest', '--color=yes', '.']' returned non-zero exit status 1.
2024-10-02 12:19:40,842 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 9 items

test_py_command.py [31mF[0m[31mF[0m[31mF[0m[31m                                                   [ 33%][0m
test_version_control_manager.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                   [100%][0m

=================================== FAILURES ===================================
[31m[1m_______________________ test_py_command_sets_pythonpath ________________________[0m

    [94mdef[39;49;00m [92mtest_py_command_sets_pythonpath[39;49;00m():[90m[39;49;00m
>       run_py_command([ [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpass[39;49;00m[33m"[39;49;00m ], [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m)[90m[39;49;00m

[1m[31mtest_py_command.py[0m:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtest_py_command.py[0m:9: in run_py_command
    result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m] + args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=[94mTrue[39;49;00m, check=[94mTrue[39;49;00m)[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:548: in run
    [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:1026: in __init__
    [96mself[39;49;00m._execute_child(args, executable, preexec_fn, close_fds,[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Popen: returncode: 255 args: ['py', '-c', 'pass']>
args = ['py', '-c', 'pass'], executable = b'py', preexec_fn = None
close_fds = True, pass_fds = (), cwd = None, env = None, startupinfo = None
creationflags = 0, shell = False, p2cread = -1, p2cwrite = -1, c2pread = 11
c2pwrite = 12, errread = 13, errwrite = 14, restore_signals = True, gid = None
gids = None, uid = None, umask = -1, start_new_session = False
process_group = -1

    [94mdef[39;49;00m [92m_execute_child[39;49;00m([96mself[39;49;00m, args, executable, preexec_fn, close_fds,[90m[39;49;00m
                       pass_fds, cwd, env,[90m[39;49;00m
                       startupinfo, creationflags, shell,[90m[39;49;00m
                       p2cread, p2cwrite,[90m[39;49;00m
                       c2pread, c2pwrite,[90m[39;49;00m
                       errread, errwrite,[90m[39;49;00m
                       restore_signals,[90m[39;49;00m
                       gid, gids, uid, umask,[90m[39;49;00m
                       start_new_session, process_group):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Execute program (POSIX version)"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(args, ([96mstr[39;49;00m, [96mbytes[39;49;00m)):[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melif[39;49;00m [96misinstance[39;49;00m(args, os.PathLike):[90m[39;49;00m
            [94mif[39;49;00m shell:[90m[39;49;00m
                [94mraise[39;49;00m [96mTypeError[39;49;00m([33m'[39;49;00m[33mpath-like args is not allowed when [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                [33m'[39;49;00m[33mshell is true[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            args = [96mlist[39;49;00m(args)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m shell:[90m[39;49;00m
            [90m# On Android the default shell is at '/system/bin/sh'.[39;49;00m[90m[39;49;00m
            unix_shell = ([33m'[39;49;00m[33m/system/bin/sh[39;49;00m[33m'[39;49;00m [94mif[39;49;00m[90m[39;49;00m
                      [96mhasattr[39;49;00m(sys, [33m'[39;49;00m[33mgetandroidapilevel[39;49;00m[33m'[39;49;00m) [94melse[39;49;00m [33m'[39;49;00m[33m/bin/sh[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [unix_shell, [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m] + args[90m[39;49;00m
            [94mif[39;49;00m executable:[90m[39;49;00m
                args[[94m0[39;49;00m] = executable[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m executable [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            executable = args[[94m0[39;49;00m][90m[39;49;00m
    [90m[39;49;00m
        sys.audit([33m"[39;49;00m[33msubprocess.Popen[39;49;00m[33m"[39;49;00m, executable, args, cwd, env)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m (_USE_POSIX_SPAWN[90m[39;49;00m
                [95mand[39;49;00m os.path.dirname(executable)[90m[39;49;00m
                [95mand[39;49;00m preexec_fn [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m close_fds[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m pass_fds[90m[39;49;00m
                [95mand[39;49;00m cwd [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m (p2cread == -[94m1[39;49;00m [95mor[39;49;00m p2cread > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (c2pwrite == -[94m1[39;49;00m [95mor[39;49;00m c2pwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (errwrite == -[94m1[39;49;00m [95mor[39;49;00m errwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m start_new_session[90m[39;49;00m
                [95mand[39;49;00m process_group == -[94m1[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gids [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m uid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m umask < [94m0[39;49;00m):[90m[39;49;00m
            [96mself[39;49;00m._posix_spawn(args, executable, env, restore_signals,[90m[39;49;00m
                              p2cread, p2cwrite,[90m[39;49;00m
                              c2pread, c2pwrite,[90m[39;49;00m
                              errread, errwrite)[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        orig_executable = executable[90m[39;49;00m
    [90m[39;49;00m
        [90m# For transferring possible exec failure from child to parent.[39;49;00m[90m[39;49;00m
        [90m# Data format: "exception name:hex errno:description"[39;49;00m[90m[39;49;00m
        [90m# Pickle is not used; it is complex and involves memory allocation.[39;49;00m[90m[39;49;00m
        errpipe_read, errpipe_write = os.pipe()[90m[39;49;00m
        [90m# errpipe_write must not be in the standard io 0, 1, or 2 fd range.[39;49;00m[90m[39;49;00m
        low_fds_to_close = [][90m[39;49;00m
        [94mwhile[39;49;00m errpipe_write < [94m3[39;49;00m:[90m[39;49;00m
            low_fds_to_close.append(errpipe_write)[90m[39;49;00m
            errpipe_write = os.dup(errpipe_write)[90m[39;49;00m
        [94mfor[39;49;00m low_fd [95min[39;49;00m low_fds_to_close:[90m[39;49;00m
            os.close(low_fd)[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [90m# We must avoid complex work that could involve[39;49;00m[90m[39;49;00m
                [90m# malloc or free in the child process to avoid[39;49;00m[90m[39;49;00m
                [90m# potential deadlocks, thus we do all this here.[39;49;00m[90m[39;49;00m
                [90m# and pass it to fork_exec()[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
                [94mif[39;49;00m env [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    env_list = [][90m[39;49;00m
                    [94mfor[39;49;00m k, v [95min[39;49;00m env.items():[90m[39;49;00m
                        k = os.fsencode(k)[90m[39;49;00m
                        [94mif[39;49;00m [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m [95min[39;49;00m k:[90m[39;49;00m
                            [94mraise[39;49;00m [96mValueError[39;49;00m([33m"[39;49;00m[33millegal environment variable name[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                        env_list.append(k + [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m + os.fsencode(v))[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    env_list = [94mNone[39;49;00m  [90m# Use execv instead of execve.[39;49;00m[90m[39;49;00m
                executable = os.fsencode(executable)[90m[39;49;00m
                [94mif[39;49;00m os.path.dirname(executable):[90m[39;49;00m
                    executable_list = (executable,)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# This matches the behavior of os._execvpe().[39;49;00m[90m[39;49;00m
                    executable_list = [96mtuple[39;49;00m([90m[39;49;00m
                        os.path.join(os.fsencode([96mdir[39;49;00m), executable)[90m[39;49;00m
                        [94mfor[39;49;00m [96mdir[39;49;00m [95min[39;49;00m os.get_exec_path(env))[90m[39;49;00m
                fds_to_keep = [96mset[39;49;00m(pass_fds)[90m[39;49;00m
                fds_to_keep.add(errpipe_write)[90m[39;49;00m
                [96mself[39;49;00m.pid = _fork_exec([90m[39;49;00m
                        args, executable_list,[90m[39;49;00m
                        close_fds, [96mtuple[39;49;00m([96msorted[39;49;00m([96mmap[39;49;00m([96mint[39;49;00m, fds_to_keep))),[90m[39;49;00m
                        cwd, env_list,[90m[39;49;00m
                        p2cread, p2cwrite, c2pread, c2pwrite,[90m[39;49;00m
                        errread, errwrite,[90m[39;49;00m
                        errpipe_read, errpipe_write,[90m[39;49;00m
                        restore_signals, start_new_session,[90m[39;49;00m
                        process_group, gid, gids, uid, umask,[90m[39;49;00m
                        preexec_fn, _USE_VFORK)[90m[39;49;00m
                [96mself[39;49;00m._child_created = [94mTrue[39;49;00m[90m[39;49;00m
            [94mfinally[39;49;00m:[90m[39;49;00m
                [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
                os.close(errpipe_write)[90m[39;49;00m
    [90m[39;49;00m
            [96mself[39;49;00m._close_pipe_fds(p2cread, p2cwrite,[90m[39;49;00m
                                 c2pread, c2pwrite,[90m[39;49;00m
                                 errread, errwrite)[90m[39;49;00m
    [90m[39;49;00m
            [90m# Wait for exec to fail or succeed; possibly raising an[39;49;00m[90m[39;49;00m
            [90m# exception (limited in size)[39;49;00m[90m[39;49;00m
            errpipe_data = [96mbytearray[39;49;00m()[90m[39;49;00m
            [94mwhile[39;49;00m [94mTrue[39;49;00m:[90m[39;49;00m
                part = os.read(errpipe_read, [94m50000[39;49;00m)[90m[39;49;00m
                errpipe_data += part[90m[39;49;00m
                [94mif[39;49;00m [95mnot[39;49;00m part [95mor[39;49;00m [96mlen[39;49;00m(errpipe_data) > [94m50000[39;49;00m:[90m[39;49;00m
                    [94mbreak[39;49;00m[90m[39;49;00m
        [94mfinally[39;49;00m:[90m[39;49;00m
            [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
            os.close(errpipe_read)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m errpipe_data:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                pid, sts = os.waitpid([96mself[39;49;00m.pid, [94m0[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m pid == [96mself[39;49;00m.pid:[90m[39;49;00m
                    [96mself[39;49;00m._handle_exitstatus(sts)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.returncode = sys.maxsize[90m[39;49;00m
            [94mexcept[39;49;00m [96mChildProcessError[39;49;00m:[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                exception_name, hex_errno, err_msg = ([90m[39;49;00m
                        errpipe_data.split([33mb[39;49;00m[33m'[39;49;00m[33m:[39;49;00m[33m'[39;49;00m, [94m2[39;49;00m))[90m[39;49;00m
                [90m# The encoding here should match the encoding[39;49;00m[90m[39;49;00m
                [90m# written in by the subprocess implementations[39;49;00m[90m[39;49;00m
                [90m# like _posixsubprocess[39;49;00m[90m[39;49;00m
                err_msg = err_msg.decode()[90m[39;49;00m
            [94mexcept[39;49;00m [96mValueError[39;49;00m:[90m[39;49;00m
                exception_name = [33mb[39;49;00m[33m'[39;49;00m[33mSubprocessError[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                hex_errno = [33mb[39;49;00m[33m'[39;49;00m[33m0[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                err_msg = [33m'[39;49;00m[33mBad exception data from child: [39;49;00m[33m{!r}[39;49;00m[33m'[39;49;00m.format([90m[39;49;00m
                              [96mbytes[39;49;00m(errpipe_data))[90m[39;49;00m
            child_exception_type = [96mgetattr[39;49;00m([90m[39;49;00m
                    builtins, exception_name.decode([33m'[39;49;00m[33mascii[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                    SubprocessError)[90m[39;49;00m
            [94mif[39;49;00m [96missubclass[39;49;00m(child_exception_type, [96mOSError[39;49;00m) [95mand[39;49;00m hex_errno:[90m[39;49;00m
                errno_num = [96mint[39;49;00m(hex_errno, [94m16[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec:chdir[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    [90m# The error must be from chdir(cwd).[39;49;00m[90m[39;49;00m
                    err_filename = cwd[90m[39;49;00m
                [94melif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    err_filename = [94mNone[39;49;00m[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    err_filename = orig_executable[90m[39;49;00m
                [94mif[39;49;00m errno_num != [94m0[39;49;00m:[90m[39;49;00m
                    err_msg = os.strerror(errno_num)[90m[39;49;00m
                [94mif[39;49;00m err_filename [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
>                   [94mraise[39;49;00m child_exception_type(errno_num, err_msg, err_filename)[90m[39;49;00m
[1m[31mE                   FileNotFoundError: [Errno 2] No such file or directory: 'py'[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:1955: FileNotFoundError
[31m[1m____________________ test_py_command_sets_custom_pythonpath ____________________[0m

    [94mdef[39;49;00m [92mtest_py_command_sets_custom_pythonpath[39;49;00m():[90m[39;49;00m
>       run_py_command([ [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpass[39;49;00m[33m"[39;49;00m ], [33m"[39;49;00m[33mOuter_dir[39;49;00m[33m"[39;49;00m)[90m[39;49;00m

[1m[31mtest_py_command.py[0m:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtest_py_command.py[0m:9: in run_py_command
    result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m] + args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=[94mTrue[39;49;00m, check=[94mTrue[39;49;00m)[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:548: in run
    [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:1026: in __init__
    [96mself[39;49;00m._execute_child(args, executable, preexec_fn, close_fds,[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Popen: returncode: 255 args: ['py', '-c', 'pass']>
args = ['py', '-c', 'pass'], executable = b'py', preexec_fn = None
close_fds = True, pass_fds = (), cwd = None, env = None, startupinfo = None
creationflags = 0, shell = False, p2cread = -1, p2cwrite = -1, c2pread = 11
c2pwrite = 12, errread = 13, errwrite = 14, restore_signals = True, gid = None
gids = None, uid = None, umask = -1, start_new_session = False
process_group = -1

    [94mdef[39;49;00m [92m_execute_child[39;49;00m([96mself[39;49;00m, args, executable, preexec_fn, close_fds,[90m[39;49;00m
                       pass_fds, cwd, env,[90m[39;49;00m
                       startupinfo, creationflags, shell,[90m[39;49;00m
                       p2cread, p2cwrite,[90m[39;49;00m
                       c2pread, c2pwrite,[90m[39;49;00m
                       errread, errwrite,[90m[39;49;00m
                       restore_signals,[90m[39;49;00m
                       gid, gids, uid, umask,[90m[39;49;00m
                       start_new_session, process_group):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Execute program (POSIX version)"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(args, ([96mstr[39;49;00m, [96mbytes[39;49;00m)):[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melif[39;49;00m [96misinstance[39;49;00m(args, os.PathLike):[90m[39;49;00m
            [94mif[39;49;00m shell:[90m[39;49;00m
                [94mraise[39;49;00m [96mTypeError[39;49;00m([33m'[39;49;00m[33mpath-like args is not allowed when [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                [33m'[39;49;00m[33mshell is true[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            args = [96mlist[39;49;00m(args)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m shell:[90m[39;49;00m
            [90m# On Android the default shell is at '/system/bin/sh'.[39;49;00m[90m[39;49;00m
            unix_shell = ([33m'[39;49;00m[33m/system/bin/sh[39;49;00m[33m'[39;49;00m [94mif[39;49;00m[90m[39;49;00m
                      [96mhasattr[39;49;00m(sys, [33m'[39;49;00m[33mgetandroidapilevel[39;49;00m[33m'[39;49;00m) [94melse[39;49;00m [33m'[39;49;00m[33m/bin/sh[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [unix_shell, [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m] + args[90m[39;49;00m
            [94mif[39;49;00m executable:[90m[39;49;00m
                args[[94m0[39;49;00m] = executable[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m executable [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            executable = args[[94m0[39;49;00m][90m[39;49;00m
    [90m[39;49;00m
        sys.audit([33m"[39;49;00m[33msubprocess.Popen[39;49;00m[33m"[39;49;00m, executable, args, cwd, env)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m (_USE_POSIX_SPAWN[90m[39;49;00m
                [95mand[39;49;00m os.path.dirname(executable)[90m[39;49;00m
                [95mand[39;49;00m preexec_fn [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m close_fds[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m pass_fds[90m[39;49;00m
                [95mand[39;49;00m cwd [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m (p2cread == -[94m1[39;49;00m [95mor[39;49;00m p2cread > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (c2pwrite == -[94m1[39;49;00m [95mor[39;49;00m c2pwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (errwrite == -[94m1[39;49;00m [95mor[39;49;00m errwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m start_new_session[90m[39;49;00m
                [95mand[39;49;00m process_group == -[94m1[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gids [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m uid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m umask < [94m0[39;49;00m):[90m[39;49;00m
            [96mself[39;49;00m._posix_spawn(args, executable, env, restore_signals,[90m[39;49;00m
                              p2cread, p2cwrite,[90m[39;49;00m
                              c2pread, c2pwrite,[90m[39;49;00m
                              errread, errwrite)[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        orig_executable = executable[90m[39;49;00m
    [90m[39;49;00m
        [90m# For transferring possible exec failure from child to parent.[39;49;00m[90m[39;49;00m
        [90m# Data format: "exception name:hex errno:description"[39;49;00m[90m[39;49;00m
        [90m# Pickle is not used; it is complex and involves memory allocation.[39;49;00m[90m[39;49;00m
        errpipe_read, errpipe_write = os.pipe()[90m[39;49;00m
        [90m# errpipe_write must not be in the standard io 0, 1, or 2 fd range.[39;49;00m[90m[39;49;00m
        low_fds_to_close = [][90m[39;49;00m
        [94mwhile[39;49;00m errpipe_write < [94m3[39;49;00m:[90m[39;49;00m
            low_fds_to_close.append(errpipe_write)[90m[39;49;00m
            errpipe_write = os.dup(errpipe_write)[90m[39;49;00m
        [94mfor[39;49;00m low_fd [95min[39;49;00m low_fds_to_close:[90m[39;49;00m
            os.close(low_fd)[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [90m# We must avoid complex work that could involve[39;49;00m[90m[39;49;00m
                [90m# malloc or free in the child process to avoid[39;49;00m[90m[39;49;00m
                [90m# potential deadlocks, thus we do all this here.[39;49;00m[90m[39;49;00m
                [90m# and pass it to fork_exec()[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
                [94mif[39;49;00m env [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    env_list = [][90m[39;49;00m
                    [94mfor[39;49;00m k, v [95min[39;49;00m env.items():[90m[39;49;00m
                        k = os.fsencode(k)[90m[39;49;00m
                        [94mif[39;49;00m [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m [95min[39;49;00m k:[90m[39;49;00m
                            [94mraise[39;49;00m [96mValueError[39;49;00m([33m"[39;49;00m[33millegal environment variable name[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                        env_list.append(k + [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m + os.fsencode(v))[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    env_list = [94mNone[39;49;00m  [90m# Use execv instead of execve.[39;49;00m[90m[39;49;00m
                executable = os.fsencode(executable)[90m[39;49;00m
                [94mif[39;49;00m os.path.dirname(executable):[90m[39;49;00m
                    executable_list = (executable,)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# This matches the behavior of os._execvpe().[39;49;00m[90m[39;49;00m
                    executable_list = [96mtuple[39;49;00m([90m[39;49;00m
                        os.path.join(os.fsencode([96mdir[39;49;00m), executable)[90m[39;49;00m
                        [94mfor[39;49;00m [96mdir[39;49;00m [95min[39;49;00m os.get_exec_path(env))[90m[39;49;00m
                fds_to_keep = [96mset[39;49;00m(pass_fds)[90m[39;49;00m
                fds_to_keep.add(errpipe_write)[90m[39;49;00m
                [96mself[39;49;00m.pid = _fork_exec([90m[39;49;00m
                        args, executable_list,[90m[39;49;00m
                        close_fds, [96mtuple[39;49;00m([96msorted[39;49;00m([96mmap[39;49;00m([96mint[39;49;00m, fds_to_keep))),[90m[39;49;00m
                        cwd, env_list,[90m[39;49;00m
                        p2cread, p2cwrite, c2pread, c2pwrite,[90m[39;49;00m
                        errread, errwrite,[90m[39;49;00m
                        errpipe_read, errpipe_write,[90m[39;49;00m
                        restore_signals, start_new_session,[90m[39;49;00m
                        process_group, gid, gids, uid, umask,[90m[39;49;00m
                        preexec_fn, _USE_VFORK)[90m[39;49;00m
                [96mself[39;49;00m._child_created = [94mTrue[39;49;00m[90m[39;49;00m
            [94mfinally[39;49;00m:[90m[39;49;00m
                [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
                os.close(errpipe_write)[90m[39;49;00m
    [90m[39;49;00m
            [96mself[39;49;00m._close_pipe_fds(p2cread, p2cwrite,[90m[39;49;00m
                                 c2pread, c2pwrite,[90m[39;49;00m
                                 errread, errwrite)[90m[39;49;00m
    [90m[39;49;00m
            [90m# Wait for exec to fail or succeed; possibly raising an[39;49;00m[90m[39;49;00m
            [90m# exception (limited in size)[39;49;00m[90m[39;49;00m
            errpipe_data = [96mbytearray[39;49;00m()[90m[39;49;00m
            [94mwhile[39;49;00m [94mTrue[39;49;00m:[90m[39;49;00m
                part = os.read(errpipe_read, [94m50000[39;49;00m)[90m[39;49;00m
                errpipe_data += part[90m[39;49;00m
                [94mif[39;49;00m [95mnot[39;49;00m part [95mor[39;49;00m [96mlen[39;49;00m(errpipe_data) > [94m50000[39;49;00m:[90m[39;49;00m
                    [94mbreak[39;49;00m[90m[39;49;00m
        [94mfinally[39;49;00m:[90m[39;49;00m
            [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
            os.close(errpipe_read)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m errpipe_data:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                pid, sts = os.waitpid([96mself[39;49;00m.pid, [94m0[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m pid == [96mself[39;49;00m.pid:[90m[39;49;00m
                    [96mself[39;49;00m._handle_exitstatus(sts)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.returncode = sys.maxsize[90m[39;49;00m
            [94mexcept[39;49;00m [96mChildProcessError[39;49;00m:[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                exception_name, hex_errno, err_msg = ([90m[39;49;00m
                        errpipe_data.split([33mb[39;49;00m[33m'[39;49;00m[33m:[39;49;00m[33m'[39;49;00m, [94m2[39;49;00m))[90m[39;49;00m
                [90m# The encoding here should match the encoding[39;49;00m[90m[39;49;00m
                [90m# written in by the subprocess implementations[39;49;00m[90m[39;49;00m
                [90m# like _posixsubprocess[39;49;00m[90m[39;49;00m
                err_msg = err_msg.decode()[90m[39;49;00m
            [94mexcept[39;49;00m [96mValueError[39;49;00m:[90m[39;49;00m
                exception_name = [33mb[39;49;00m[33m'[39;49;00m[33mSubprocessError[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                hex_errno = [33mb[39;49;00m[33m'[39;49;00m[33m0[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                err_msg = [33m'[39;49;00m[33mBad exception data from child: [39;49;00m[33m{!r}[39;49;00m[33m'[39;49;00m.format([90m[39;49;00m
                              [96mbytes[39;49;00m(errpipe_data))[90m[39;49;00m
            child_exception_type = [96mgetattr[39;49;00m([90m[39;49;00m
                    builtins, exception_name.decode([33m'[39;49;00m[33mascii[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                    SubprocessError)[90m[39;49;00m
            [94mif[39;49;00m [96missubclass[39;49;00m(child_exception_type, [96mOSError[39;49;00m) [95mand[39;49;00m hex_errno:[90m[39;49;00m
                errno_num = [96mint[39;49;00m(hex_errno, [94m16[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec:chdir[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    [90m# The error must be from chdir(cwd).[39;49;00m[90m[39;49;00m
                    err_filename = cwd[90m[39;49;00m
                [94melif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    err_filename = [94mNone[39;49;00m[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    err_filename = orig_executable[90m[39;49;00m
                [94mif[39;49;00m errno_num != [94m0[39;49;00m:[90m[39;49;00m
                    err_msg = os.strerror(errno_num)[90m[39;49;00m
                [94mif[39;49;00m err_filename [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
>                   [94mraise[39;49;00m child_exception_type(errno_num, err_msg, err_filename)[90m[39;49;00m
[1m[31mE                   FileNotFoundError: [Errno 2] No such file or directory: 'py'[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:1955: FileNotFoundError
[31m[1m_________________________ test_py_command_runs_script __________________________[0m

    [94mdef[39;49;00m [92mtest_py_command_runs_script[39;49;00m():[90m[39;49;00m
        script_content = [33m"[39;49;00m[33mprint([39;49;00m[33m'[39;49;00m[33mHello, world![39;49;00m[33m'[39;49;00m[33m)[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m [96mopen[39;49;00m([33m"[39;49;00m[33mtest_script.py[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mw[39;49;00m[33m"[39;49;00m) [94mas[39;49;00m f:[90m[39;49;00m
            f.write(script_content)[90m[39;49;00m
>       output = run_py_command([[33m"[39;49;00m[33mtest_script.py[39;49;00m[33m"[39;49;00m], [33m"[39;49;00m[33menvy[39;49;00m[33m"[39;49;00m)[90m[39;49;00m

[1m[31mtest_py_command.py[0m:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtest_py_command.py[0m:9: in run_py_command
    result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m] + args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=[94mTrue[39;49;00m, check=[94mTrue[39;49;00m)[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:548: in run
    [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
[1m[31m/usr/lib/python3.12/subprocess.py[0m:1026: in __init__
    [96mself[39;49;00m._execute_child(args, executable, preexec_fn, close_fds,[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Popen: returncode: 255 args: ['py', 'test_script.py']>
args = ['py', 'test_script.py'], executable = b'py', preexec_fn = None
close_fds = True, pass_fds = (), cwd = None, env = None, startupinfo = None
creationflags = 0, shell = False, p2cread = -1, p2cwrite = -1, c2pread = 11
c2pwrite = 12, errread = 13, errwrite = 14, restore_signals = True, gid = None
gids = None, uid = None, umask = -1, start_new_session = False
process_group = -1

    [94mdef[39;49;00m [92m_execute_child[39;49;00m([96mself[39;49;00m, args, executable, preexec_fn, close_fds,[90m[39;49;00m
                       pass_fds, cwd, env,[90m[39;49;00m
                       startupinfo, creationflags, shell,[90m[39;49;00m
                       p2cread, p2cwrite,[90m[39;49;00m
                       c2pread, c2pwrite,[90m[39;49;00m
                       errread, errwrite,[90m[39;49;00m
                       restore_signals,[90m[39;49;00m
                       gid, gids, uid, umask,[90m[39;49;00m
                       start_new_session, process_group):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Execute program (POSIX version)"""[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(args, ([96mstr[39;49;00m, [96mbytes[39;49;00m)):[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melif[39;49;00m [96misinstance[39;49;00m(args, os.PathLike):[90m[39;49;00m
            [94mif[39;49;00m shell:[90m[39;49;00m
                [94mraise[39;49;00m [96mTypeError[39;49;00m([33m'[39;49;00m[33mpath-like args is not allowed when [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                [33m'[39;49;00m[33mshell is true[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [args][90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            args = [96mlist[39;49;00m(args)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m shell:[90m[39;49;00m
            [90m# On Android the default shell is at '/system/bin/sh'.[39;49;00m[90m[39;49;00m
            unix_shell = ([33m'[39;49;00m[33m/system/bin/sh[39;49;00m[33m'[39;49;00m [94mif[39;49;00m[90m[39;49;00m
                      [96mhasattr[39;49;00m(sys, [33m'[39;49;00m[33mgetandroidapilevel[39;49;00m[33m'[39;49;00m) [94melse[39;49;00m [33m'[39;49;00m[33m/bin/sh[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            args = [unix_shell, [33m"[39;49;00m[33m-c[39;49;00m[33m"[39;49;00m] + args[90m[39;49;00m
            [94mif[39;49;00m executable:[90m[39;49;00m
                args[[94m0[39;49;00m] = executable[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m executable [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            executable = args[[94m0[39;49;00m][90m[39;49;00m
    [90m[39;49;00m
        sys.audit([33m"[39;49;00m[33msubprocess.Popen[39;49;00m[33m"[39;49;00m, executable, args, cwd, env)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m (_USE_POSIX_SPAWN[90m[39;49;00m
                [95mand[39;49;00m os.path.dirname(executable)[90m[39;49;00m
                [95mand[39;49;00m preexec_fn [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m close_fds[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m pass_fds[90m[39;49;00m
                [95mand[39;49;00m cwd [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m (p2cread == -[94m1[39;49;00m [95mor[39;49;00m p2cread > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (c2pwrite == -[94m1[39;49;00m [95mor[39;49;00m c2pwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m (errwrite == -[94m1[39;49;00m [95mor[39;49;00m errwrite > [94m2[39;49;00m)[90m[39;49;00m
                [95mand[39;49;00m [95mnot[39;49;00m start_new_session[90m[39;49;00m
                [95mand[39;49;00m process_group == -[94m1[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m gids [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m uid [95mis[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
                [95mand[39;49;00m umask < [94m0[39;49;00m):[90m[39;49;00m
            [96mself[39;49;00m._posix_spawn(args, executable, env, restore_signals,[90m[39;49;00m
                              p2cread, p2cwrite,[90m[39;49;00m
                              c2pread, c2pwrite,[90m[39;49;00m
                              errread, errwrite)[90m[39;49;00m
            [94mreturn[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        orig_executable = executable[90m[39;49;00m
    [90m[39;49;00m
        [90m# For transferring possible exec failure from child to parent.[39;49;00m[90m[39;49;00m
        [90m# Data format: "exception name:hex errno:description"[39;49;00m[90m[39;49;00m
        [90m# Pickle is not used; it is complex and involves memory allocation.[39;49;00m[90m[39;49;00m
        errpipe_read, errpipe_write = os.pipe()[90m[39;49;00m
        [90m# errpipe_write must not be in the standard io 0, 1, or 2 fd range.[39;49;00m[90m[39;49;00m
        low_fds_to_close = [][90m[39;49;00m
        [94mwhile[39;49;00m errpipe_write < [94m3[39;49;00m:[90m[39;49;00m
            low_fds_to_close.append(errpipe_write)[90m[39;49;00m
            errpipe_write = os.dup(errpipe_write)[90m[39;49;00m
        [94mfor[39;49;00m low_fd [95min[39;49;00m low_fds_to_close:[90m[39;49;00m
            os.close(low_fd)[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [90m# We must avoid complex work that could involve[39;49;00m[90m[39;49;00m
                [90m# malloc or free in the child process to avoid[39;49;00m[90m[39;49;00m
                [90m# potential deadlocks, thus we do all this here.[39;49;00m[90m[39;49;00m
                [90m# and pass it to fork_exec()[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
                [94mif[39;49;00m env [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    env_list = [][90m[39;49;00m
                    [94mfor[39;49;00m k, v [95min[39;49;00m env.items():[90m[39;49;00m
                        k = os.fsencode(k)[90m[39;49;00m
                        [94mif[39;49;00m [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m [95min[39;49;00m k:[90m[39;49;00m
                            [94mraise[39;49;00m [96mValueError[39;49;00m([33m"[39;49;00m[33millegal environment variable name[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                        env_list.append(k + [33mb[39;49;00m[33m'[39;49;00m[33m=[39;49;00m[33m'[39;49;00m + os.fsencode(v))[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    env_list = [94mNone[39;49;00m  [90m# Use execv instead of execve.[39;49;00m[90m[39;49;00m
                executable = os.fsencode(executable)[90m[39;49;00m
                [94mif[39;49;00m os.path.dirname(executable):[90m[39;49;00m
                    executable_list = (executable,)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# This matches the behavior of os._execvpe().[39;49;00m[90m[39;49;00m
                    executable_list = [96mtuple[39;49;00m([90m[39;49;00m
                        os.path.join(os.fsencode([96mdir[39;49;00m), executable)[90m[39;49;00m
                        [94mfor[39;49;00m [96mdir[39;49;00m [95min[39;49;00m os.get_exec_path(env))[90m[39;49;00m
                fds_to_keep = [96mset[39;49;00m(pass_fds)[90m[39;49;00m
                fds_to_keep.add(errpipe_write)[90m[39;49;00m
                [96mself[39;49;00m.pid = _fork_exec([90m[39;49;00m
                        args, executable_list,[90m[39;49;00m
                        close_fds, [96mtuple[39;49;00m([96msorted[39;49;00m([96mmap[39;49;00m([96mint[39;49;00m, fds_to_keep))),[90m[39;49;00m
                        cwd, env_list,[90m[39;49;00m
                        p2cread, p2cwrite, c2pread, c2pwrite,[90m[39;49;00m
                        errread, errwrite,[90m[39;49;00m
                        errpipe_read, errpipe_write,[90m[39;49;00m
                        restore_signals, start_new_session,[90m[39;49;00m
                        process_group, gid, gids, uid, umask,[90m[39;49;00m
                        preexec_fn, _USE_VFORK)[90m[39;49;00m
                [96mself[39;49;00m._child_created = [94mTrue[39;49;00m[90m[39;49;00m
            [94mfinally[39;49;00m:[90m[39;49;00m
                [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
                os.close(errpipe_write)[90m[39;49;00m
    [90m[39;49;00m
            [96mself[39;49;00m._close_pipe_fds(p2cread, p2cwrite,[90m[39;49;00m
                                 c2pread, c2pwrite,[90m[39;49;00m
                                 errread, errwrite)[90m[39;49;00m
    [90m[39;49;00m
            [90m# Wait for exec to fail or succeed; possibly raising an[39;49;00m[90m[39;49;00m
            [90m# exception (limited in size)[39;49;00m[90m[39;49;00m
            errpipe_data = [96mbytearray[39;49;00m()[90m[39;49;00m
            [94mwhile[39;49;00m [94mTrue[39;49;00m:[90m[39;49;00m
                part = os.read(errpipe_read, [94m50000[39;49;00m)[90m[39;49;00m
                errpipe_data += part[90m[39;49;00m
                [94mif[39;49;00m [95mnot[39;49;00m part [95mor[39;49;00m [96mlen[39;49;00m(errpipe_data) > [94m50000[39;49;00m:[90m[39;49;00m
                    [94mbreak[39;49;00m[90m[39;49;00m
        [94mfinally[39;49;00m:[90m[39;49;00m
            [90m# be sure the FD is closed no matter what[39;49;00m[90m[39;49;00m
            os.close(errpipe_read)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m errpipe_data:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                pid, sts = os.waitpid([96mself[39;49;00m.pid, [94m0[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m pid == [96mself[39;49;00m.pid:[90m[39;49;00m
                    [96mself[39;49;00m._handle_exitstatus(sts)[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.returncode = sys.maxsize[90m[39;49;00m
            [94mexcept[39;49;00m [96mChildProcessError[39;49;00m:[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                exception_name, hex_errno, err_msg = ([90m[39;49;00m
                        errpipe_data.split([33mb[39;49;00m[33m'[39;49;00m[33m:[39;49;00m[33m'[39;49;00m, [94m2[39;49;00m))[90m[39;49;00m
                [90m# The encoding here should match the encoding[39;49;00m[90m[39;49;00m
                [90m# written in by the subprocess implementations[39;49;00m[90m[39;49;00m
                [90m# like _posixsubprocess[39;49;00m[90m[39;49;00m
                err_msg = err_msg.decode()[90m[39;49;00m
            [94mexcept[39;49;00m [96mValueError[39;49;00m:[90m[39;49;00m
                exception_name = [33mb[39;49;00m[33m'[39;49;00m[33mSubprocessError[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                hex_errno = [33mb[39;49;00m[33m'[39;49;00m[33m0[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                err_msg = [33m'[39;49;00m[33mBad exception data from child: [39;49;00m[33m{!r}[39;49;00m[33m'[39;49;00m.format([90m[39;49;00m
                              [96mbytes[39;49;00m(errpipe_data))[90m[39;49;00m
            child_exception_type = [96mgetattr[39;49;00m([90m[39;49;00m
                    builtins, exception_name.decode([33m'[39;49;00m[33mascii[39;49;00m[33m'[39;49;00m),[90m[39;49;00m
                    SubprocessError)[90m[39;49;00m
            [94mif[39;49;00m [96missubclass[39;49;00m(child_exception_type, [96mOSError[39;49;00m) [95mand[39;49;00m hex_errno:[90m[39;49;00m
                errno_num = [96mint[39;49;00m(hex_errno, [94m16[39;49;00m)[90m[39;49;00m
                [94mif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec:chdir[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    [90m# The error must be from chdir(cwd).[39;49;00m[90m[39;49;00m
                    err_filename = cwd[90m[39;49;00m
                [94melif[39;49;00m err_msg == [33m"[39;49;00m[33mnoexec[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                    err_msg = [33m"[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                    err_filename = [94mNone[39;49;00m[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    err_filename = orig_executable[90m[39;49;00m
                [94mif[39;49;00m errno_num != [94m0[39;49;00m:[90m[39;49;00m
                    err_msg = os.strerror(errno_num)[90m[39;49;00m
                [94mif[39;49;00m err_filename [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
>                   [94mraise[39;49;00m child_exception_type(errno_num, err_msg, err_filename)[90m[39;49;00m
[1m[31mE                   FileNotFoundError: [Errno 2] No such file or directory: 'py'[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:1955: FileNotFoundError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m test_py_command.py::[1mtest_py_command_sets_pythonpath[0m - FileNotFoundError: [Errno 2] No such file or directory: 'py'
[31mFAILED[0m test_py_command.py::[1mtest_py_command_sets_custom_pythonpath[0m - FileNotFoundError: [Errno 2] No such file or directory: 'py'
[31mFAILED[0m test_py_command.py::[1mtest_py_command_runs_script[0m - FileNotFoundError: [Errno 2] No such file or directory: 'py'
[31m========================= [31m[1m3 failed[0m, [32m6 passed[0m[31m in 2.26s[0m[31m ==========================[0m

2024-10-02 12:19:40,844 - ERROR - Command error: 
2024-10-02 12:20:28,049 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:20:30,123 - INFO - Successfully executed command: py test_py_command.py
2024-10-02 12:20:47,241 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:20:49,718 - INFO - Successfully executed command: pytest --color=yes .
2024-10-02 12:21:11,764 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:21:13,386 - INFO - Successfully executed command: py test_py_command.py
2024-10-02 12:21:26,239 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:21:26,728 - ERROR - Error running command: Command '['py', 'test_version_control_manager.py']' returned non-zero exit status 1.
2024-10-02 12:21:26,728 - ERROR - Command output: 
2024-10-02 12:21:26,728 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/test_version_control_manager.py", line 3, in <module>
    from version_control.version_control_manager import VersionControlManager
ModuleNotFoundError: No module named 'version_control'

2024-10-02 12:23:16,653 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:23:17,074 - ERROR - Error running command: Command '['py', 'test_version_control_manager.py']' returned non-zero exit status 1.
2024-10-02 12:23:17,074 - ERROR - Command output: 
2024-10-02 12:23:17,074 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/test_version_control_manager.py", line 3, in <module>
    from version_control.version_control_manager import VersionControlManager
ModuleNotFoundError: No module named 'version_control'

2024-10-02 12:27:46,941 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:27:47,385 - ERROR - Error running command: Command '['py', 'test_version_control_manager.py']' returned non-zero exit status 1.
2024-10-02 12:27:47,385 - ERROR - Command output: 
2024-10-02 12:27:47,385 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/test_version_control_manager.py", line 3, in <module>
    from version_control.version_control_manager import VersionControlManager
ModuleNotFoundError: No module named 'version_control'

2024-10-02 12:29:12,222 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:29:12,522 - ERROR - Error running command: Command '['py', 'test_version_control_manager.py']' returned non-zero exit status 1.
2024-10-02 12:29:12,522 - ERROR - Command output: 
2024-10-02 12:29:12,522 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/test_version_control_manager.py", line 3, in <module>
    from version_control.version_control_manager import VersionControlManager
ModuleNotFoundError: No module named 'version_control'

2024-10-02 12:30:09,266 - INFO - PYTHONPATH set to default: envy
2024-10-02 12:30:09,647 - ERROR - Error running command: Command '['py', 'test_version_control_manager.py']' returned non-zero exit status 1.
2024-10-02 12:30:09,648 - ERROR - Command output: 
2024-10-02 12:30:09,648 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/test_version_control_manager.py", line 3, in <module>
    from version_control.version_control_manager import VersionControlManager
ModuleNotFoundError: No module named 'version_control'

2024-10-02 16:05:53,752 - INFO - PYTHONPATH set to default: envy
2024-10-02 16:05:55,182 - INFO - Successfully executed command: pytest --color=yes /root/envy/tests/test_version_control_manager.py
2024-10-02 16:06:04,258 - INFO - PYTHONPATH set to default: envy
2024-10-02 16:06:06,192 - INFO - Successfully executed command: pytest --color=yes /root/envy/tests
2024-10-03 02:04:50,947 - ERROR - Error running script: Command '['py', 'py']' returned non-zero exit status 2.
2024-10-03 02:04:50,947 - ERROR - Command output: 
2024-10-03 02:04:50,947 - ERROR - Command error: usage: py [-h] [-p PYTHONPATH] [-t] [-ut] [-it] target
py: error: the following arguments are required: target

2024-10-03 02:08:44,184 - ERROR - Error running script: Command '['py', 'py']' returned non-zero exit status 2.
2024-10-03 02:08:44,185 - ERROR - Command output: 
2024-10-03 02:08:44,185 - ERROR - Command error: usage: py [-h] [-p PYTHONPATH] [-t] [-ut] [-it] target
py: error: the following arguments are required: target

2024-10-03 02:08:58,678 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests', '-k', '*.py']' returned non-zero exit status 4.
2024-10-03 02:08:58,679 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 9 items / 2 errors

==================================== ERRORS ====================================
[31m[1m____________ ERROR collecting tests/integration/test_py_command.py _____________[0m
[31mimport file mismatch:
imported module 'test_py_command' has this __file__ attribute:
  /root/envy/tests/test_py_command.py
which is not the same as the test file we want to collect:
  /root/envy/tests/integration/test_py_command.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[31m[1m________________ ERROR collecting tests/unit/test_py_command.py ________________[0m
[31mimport file mismatch:
imported module 'test_py_command' has this __file__ attribute:
  /root/envy/tests/test_py_command.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py_command.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/integration/test_py_command.py
[31mERROR[0m tests/unit/test_py_command.py
[31m============================== [31m[1m2 errors[0m[31m in 0.15s[0m[31m ===============================[0m

2024-10-03 02:08:58,679 - ERROR - Command error: ERROR: Wrong expression passed to '-k': *.py: at column 1: unexpected character "*"


2024-10-03 02:09:23,848 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests', '-k', '*.py']' returned non-zero exit status 4.
2024-10-03 02:09:23,849 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 9 items / 2 errors

==================================== ERRORS ====================================
[31m[1m____________ ERROR collecting tests/integration/test_py_command.py _____________[0m
[31mimport file mismatch:
imported module 'test_py_command' has this __file__ attribute:
  /root/envy/tests/test_py_command.py
which is not the same as the test file we want to collect:
  /root/envy/tests/integration/test_py_command.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[31m[1m________________ ERROR collecting tests/unit/test_py_command.py ________________[0m
[31mimport file mismatch:
imported module 'test_py_command' has this __file__ attribute:
  /root/envy/tests/test_py_command.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py_command.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/integration/test_py_command.py
[31mERROR[0m tests/unit/test_py_command.py
[31m============================== [31m[1m2 errors[0m[31m in 0.19s[0m[31m ===============================[0m

2024-10-03 02:09:23,849 - ERROR - Command error: ERROR: Wrong expression passed to '-k': *.py: at column 1: unexpected character "*"


2024-10-03 02:27:38,535 - ERROR - Error running script: Command '['py', 'py']' returned non-zero exit status 2.
2024-10-03 02:27:38,536 - ERROR - Command output: 
2024-10-03 02:27:38,537 - ERROR - Command error: usage: py [-h] [-p PYTHONPATH] [-t] [-ut] [-it] target
py: error: the following arguments are required: target

2024-10-03 02:28:49,159 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests', '-k', '*.py']' returned non-zero exit status 4.
2024-10-03 02:28:49,159 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error

==================================== ERRORS ====================================
[31m[1m________________ ERROR collecting tests/unit/test_py_command.py ________________[0m
[31mimport file mismatch:
imported module 'test_py_command' has this __file__ attribute:
  /root/envy/tests/integration/test_py_command.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py_command.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py_command.py
[31m=============================== [31m[1m1 error[0m[31m in 0.20s[0m[31m ===============================[0m

2024-10-03 02:28:49,159 - ERROR - Command error: ERROR: Wrong expression passed to '-k': *.py: at column 1: unexpected character "*"


2024-10-03 02:29:03,236 - ERROR - Error running script: Command '['py', 'py']' returned non-zero exit status 2.
2024-10-03 02:29:03,238 - ERROR - Command output: 
2024-10-03 02:29:03,238 - ERROR - Command error: usage: py [-h] [-p PYTHONPATH] [-t] [-ut] [-it] target
py: error: the following arguments are required: target

2024-10-03 02:29:51,613 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests', '-k', '*.py']' returned non-zero exit status 4.
2024-10-03 02:29:51,614 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error

==================================== ERRORS ====================================
[31m[1m________________ ERROR collecting tests/unit/test_py_command.py ________________[0m
[31mimport file mismatch:
imported module 'test_py_command' has this __file__ attribute:
  /root/envy/tests/integration/test_py_command.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py_command.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py_command.py
[31m=============================== [31m[1m1 error[0m[31m in 0.18s[0m[31m ===============================[0m

2024-10-03 02:29:51,614 - ERROR - Command error: ERROR: Wrong expression passed to '-k': *.py: at column 1: unexpected character "*"


2024-10-03 02:35:10,045 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests', '-k', '*.py']' returned non-zero exit status 4.
2024-10-03 02:35:10,045 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error

==================================== ERRORS ====================================
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py.py
[31m=============================== [31m[1m1 error[0m[31m in 0.19s[0m[31m ===============================[0m

2024-10-03 02:35:10,046 - ERROR - Command error: ERROR: Wrong expression passed to '-k': *.py: at column 1: unexpected character "*"


2024-10-03 02:38:47,695 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests', '-k', '*.py']' returned non-zero exit status 4.
2024-10-03 02:38:47,695 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error

==================================== ERRORS ====================================
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py.py
[31m=============================== [31m[1m1 error[0m[31m in 0.27s[0m[31m ===============================[0m

2024-10-03 02:38:47,695 - ERROR - Command error: ERROR: Wrong expression passed to '-k': *.py: at column 1: unexpected character "*"


2024-10-03 02:39:37,365 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests', '-k', '*.py']' returned non-zero exit status 4.
2024-10-03 02:39:37,366 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error

==================================== ERRORS ====================================
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py.py
[31m=============================== [31m[1m1 error[0m[31m in 0.16s[0m[31m ===============================[0m

2024-10-03 02:39:37,366 - ERROR - Command error: ERROR: Wrong expression passed to '-k': *.py: at column 1: unexpected character "*"


2024-10-03 02:44:42,855 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests', '-k', '*.py']' returned non-zero exit status 4.
2024-10-03 02:44:42,857 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error

==================================== ERRORS ====================================
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py.py
[31m=============================== [31m[1m1 error[0m[31m in 0.13s[0m[31m ===============================[0m

2024-10-03 02:44:42,857 - ERROR - Command error: ERROR: Wrong expression passed to '-k': *.py: at column 1: unexpected character "*"


2024-10-03 02:49:47,421 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests']' returned non-zero exit status 2.
2024-10-03 02:49:47,422 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error

==================================== ERRORS ====================================
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py.py
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
[31m=============================== [31m[1m1 error[0m[31m in 0.88s[0m[31m ===============================[0m

2024-10-03 02:49:47,422 - ERROR - Command error: 
2024-10-03 02:54:54,209 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests', '-k', 'tests/*.py']' returned non-zero exit status 4.
2024-10-03 02:54:54,210 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error

==================================== ERRORS ====================================
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py.py
[31m=============================== [31m[1m1 error[0m[31m in 0.15s[0m[31m ===============================[0m

2024-10-03 02:54:54,210 - ERROR - Command error: ERROR: Wrong expression passed to '-k': tests/*.py: at column 7: unexpected character "*"


2024-10-03 02:58:13,336 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests']' returned non-zero exit status 2.
2024-10-03 02:58:13,337 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error

==================================== ERRORS ====================================
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py.py
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
[31m=============================== [31m[1m1 error[0m[31m in 0.62s[0m[31m ===============================[0m

2024-10-03 02:58:13,338 - ERROR - Command error: 
2024-10-03 02:59:57,647 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests']' returned non-zero exit status 2.
2024-10-03 02:59:57,647 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error

==================================== ERRORS ====================================
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py.py
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
[31m=============================== [31m[1m1 error[0m[31m in 0.73s[0m[31m ===============================[0m

2024-10-03 02:59:57,647 - ERROR - Command error: 
2024-10-03 03:06:51,647 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests']' returned non-zero exit status 2.
2024-10-03 03:06:51,648 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error

==================================== ERRORS ====================================
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py.py
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
[31m=============================== [31m[1m1 error[0m[31m in 1.50s[0m[31m ===============================[0m

2024-10-03 03:06:51,649 - ERROR - Command error: 
2024-10-03 03:11:22,400 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests']' returned non-zero exit status 2.
2024-10-03 03:11:22,402 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error

==================================== ERRORS ====================================
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py.py
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
[31m=============================== [31m[1m1 error[0m[31m in 1.10s[0m[31m ===============================[0m

2024-10-03 03:11:22,402 - ERROR - Command error: 
2024-10-03 03:15:07,072 - ERROR - Error running command: Command '['pytest', '--color=yes', '-k', 'tests']' returned non-zero exit status 2.
2024-10-03 03:15:07,073 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 3 errors

==================================== ERRORS ====================================
[31m[1m__________ ERROR collecting codebase_manager/test_codebase_manager.py __________[0m
[31mImportError while importing test module '/root/envy/codebase_manager/test_codebase_manager.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.12/importlib/__init__.py:90: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
codebase_manager/test_codebase_manager.py:3: in <module>
    from codebase_manager import CodebaseManager
codebase_manager/codebase_manager.py:3: in <module>
    from version_control_manager import VersionControlManager
E   ModuleNotFoundError: No module named 'version_control_manager'[0m
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[31m[1m___________ ERROR collecting version_control/test_auto_versioning.py ___________[0m
[31mImportError while importing test module '/root/envy/version_control/test_auto_versioning.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.12/importlib/__init__.py:90: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
version_control/test_auto_versioning.py:1: in <module>
    from .git_operations import (
E   ModuleNotFoundError: No module named 'envy.version_control.git_operations'[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m codebase_manager/test_codebase_manager.py
[31mERROR[0m tests/unit/test_py.py
[31mERROR[0m version_control/test_auto_versioning.py
!!!!!!!!!!!!!!!!!!! Interrupted: 3 errors during collection !!!!!!!!!!!!!!!!!!!!
[31m============================== [31m[1m3 errors[0m[31m in 37.45s[0m[31m ==============================[0m

2024-10-03 03:15:07,073 - ERROR - Command error: 
2024-10-03 03:22:52,972 - ERROR - Error running command: Command '['pytest', '--color=yes', '-k', 'tests']' returned non-zero exit status 2.
2024-10-03 03:22:52,973 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 3 errors

==================================== ERRORS ====================================
[31m[1m__________ ERROR collecting codebase_manager/test_codebase_manager.py __________[0m
[31mImportError while importing test module '/root/envy/codebase_manager/test_codebase_manager.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.12/importlib/__init__.py:90: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
codebase_manager/test_codebase_manager.py:3: in <module>
    from codebase_manager import CodebaseManager
codebase_manager/codebase_manager.py:3: in <module>
    from version_control_manager import VersionControlManager
E   ModuleNotFoundError: No module named 'version_control_manager'[0m
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[31m[1m___________ ERROR collecting version_control/test_auto_versioning.py ___________[0m
[31mImportError while importing test module '/root/envy/version_control/test_auto_versioning.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.12/importlib/__init__.py:90: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
version_control/test_auto_versioning.py:1: in <module>
    from .git_operations import (
E   ModuleNotFoundError: No module named 'envy.version_control.git_operations'[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m codebase_manager/test_codebase_manager.py
[31mERROR[0m tests/unit/test_py.py
[31mERROR[0m version_control/test_auto_versioning.py
!!!!!!!!!!!!!!!!!!! Interrupted: 3 errors during collection !!!!!!!!!!!!!!!!!!!!
[31m============================== [31m[1m3 errors[0m[31m in 49.30s[0m[31m ==============================[0m

2024-10-03 03:22:52,973 - ERROR - Command error: 
2024-10-03 03:29:31,382 - INFO - Successfully executed command: py test_mapping.py
2024-10-03 03:29:31,383 - INFO - PYTHONPATH set to default: envy
2024-10-03 03:31:04,675 - INFO - Successfully executed command: py test_py.py
2024-10-03 03:31:04,676 - INFO - PYTHONPATH set to default: envy
2024-10-03 03:31:37,789 - ERROR - Error running script: Command '['py', 'test_py.py']' returned non-zero exit status 1.
2024-10-03 03:31:37,789 - ERROR - Command output: 
2024-10-03 03:31:37,789 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/tests/integration/test_py.py", line 3, in <module>
    from tests.test_mapping import TEST_MAPPING
ModuleNotFoundError: No module named 'tests'

2024-10-03 03:33:49,791 - ERROR - Error running command: Command '['pytest', '--color=yes', '-k', 'tests']' returned non-zero exit status 2.
2024-10-03 03:33:49,791 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 3 errors

==================================== ERRORS ====================================
[31m[1m__________ ERROR collecting codebase_manager/test_codebase_manager.py __________[0m
[31mImportError while importing test module '/root/envy/codebase_manager/test_codebase_manager.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.12/importlib/__init__.py:90: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
codebase_manager/test_codebase_manager.py:3: in <module>
    from codebase_manager import CodebaseManager
codebase_manager/codebase_manager.py:3: in <module>
    from version_control_manager import VersionControlManager
E   ModuleNotFoundError: No module named 'version_control_manager'[0m
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[31m[1m___________ ERROR collecting version_control/test_auto_versioning.py ___________[0m
[31mImportError while importing test module '/root/envy/version_control/test_auto_versioning.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.12/importlib/__init__.py:90: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
version_control/test_auto_versioning.py:1: in <module>
    from .git_operations import (
E   ModuleNotFoundError: No module named 'envy.version_control.git_operations'[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m codebase_manager/test_codebase_manager.py
[31mERROR[0m tests/unit/test_py.py
[31mERROR[0m version_control/test_auto_versioning.py
!!!!!!!!!!!!!!!!!!! Interrupted: 3 errors during collection !!!!!!!!!!!!!!!!!!!!
[31m========================= [31m[1m3 errors[0m[31m in 64.67s (0:01:04)[0m[31m =========================[0m

2024-10-03 03:33:49,791 - ERROR - Command error: 
2024-10-03 03:47:22,817 - ERROR - Error running command: Command '['pytest', '--color=yes', '-k', 'integration']' returned non-zero exit status 2.
2024-10-03 03:47:22,820 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 3 errors / 6 deselected / 5 selected

==================================== ERRORS ====================================
[31m[1m__________ ERROR collecting codebase_manager/test_codebase_manager.py __________[0m
[31mImportError while importing test module '/root/envy/codebase_manager/test_codebase_manager.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.12/importlib/__init__.py:90: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
codebase_manager/test_codebase_manager.py:3: in <module>
    from codebase_manager import CodebaseManager
codebase_manager/codebase_manager.py:3: in <module>
    from version_control_manager import VersionControlManager
E   ModuleNotFoundError: No module named 'version_control_manager'[0m
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[31m[1m___________ ERROR collecting version_control/test_auto_versioning.py ___________[0m
[31mImportError while importing test module '/root/envy/version_control/test_auto_versioning.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.12/importlib/__init__.py:90: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
version_control/test_auto_versioning.py:1: in <module>
    from .git_operations import (
E   ModuleNotFoundError: No module named 'envy.version_control.git_operations'[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m codebase_manager/test_codebase_manager.py
[31mERROR[0m tests/unit/test_py.py
[31mERROR[0m version_control/test_auto_versioning.py
!!!!!!!!!!!!!!!!!!! Interrupted: 3 errors during collection !!!!!!!!!!!!!!!!!!!!
[31m======================= [33m6 deselected[0m, [31m[1m3 errors[0m[31m in 55.33s[0m[31m =======================[0m

2024-10-03 03:47:22,820 - ERROR - Command error: 
2024-10-03 04:08:31,677 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests', '-k', '*.py']' returned non-zero exit status 4.
2024-10-03 04:08:31,678 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error

==================================== ERRORS ====================================
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py.py
[31m=============================== [31m[1m1 error[0m[31m in 0.15s[0m[31m ===============================[0m

2024-10-03 04:08:31,678 - ERROR - Command error: ERROR: Wrong expression passed to '-k': *.py: at column 1: unexpected character "*"


2024-10-03 04:14:44,129 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests', '-k', '*.py']' returned non-zero exit status 4.
2024-10-03 04:14:44,129 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error

==================================== ERRORS ====================================
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py.py
[31m=============================== [31m[1m1 error[0m[31m in 0.29s[0m[31m ===============================[0m

2024-10-03 04:14:44,130 - ERROR - Command error: ERROR: Wrong expression passed to '-k': *.py: at column 1: unexpected character "*"


2024-10-03 04:16:03,723 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests', '-k', '*.py']' returned non-zero exit status 4.
2024-10-03 04:16:03,725 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error

==================================== ERRORS ====================================
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py.py
[31m=============================== [31m[1m1 error[0m[31m in 0.11s[0m[31m ===============================[0m

2024-10-03 04:16:03,725 - ERROR - Command error: ERROR: Wrong expression passed to '-k': *.py: at column 1: unexpected character "*"


2024-10-03 04:19:28,633 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests', '-k', '*.py']' returned non-zero exit status 4.
2024-10-03 04:19:28,634 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error

==================================== ERRORS ====================================
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py.py
[31m=============================== [31m[1m1 error[0m[31m in 0.18s[0m[31m ===============================[0m

2024-10-03 04:19:28,634 - ERROR - Command error: ERROR: Wrong expression passed to '-k': *.py: at column 1: unexpected character "*"


2024-10-03 04:24:00,317 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests', '-k', '*.py']' returned non-zero exit status 4.
2024-10-03 04:24:00,318 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error

==================================== ERRORS ====================================
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py.py
[31m=============================== [31m[1m1 error[0m[31m in 0.15s[0m[31m ===============================[0m

2024-10-03 04:24:00,318 - ERROR - Command error: ERROR: Wrong expression passed to '-k': *.py: at column 1: unexpected character "*"


2024-10-03 04:43:14,908 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests', '-k', 'test_py.py']' returned non-zero exit status 2.
2024-10-03 04:43:14,909 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error / 6 deselected / 5 selected

==================================== ERRORS ====================================
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py.py
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
[31m======================== [33m6 deselected[0m, [31m[1m1 error[0m[31m in 0.68s[0m[31m ========================[0m

2024-10-03 04:43:14,909 - ERROR - Command error: 
2024-10-03 04:51:12,439 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests', '-k', 'test_py.py']' returned non-zero exit status 2.
2024-10-03 04:51:12,440 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error / 6 deselected / 5 selected

==================================== ERRORS ====================================
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py.py
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
[31m======================== [33m6 deselected[0m, [31m[1m1 error[0m[31m in 0.81s[0m[31m ========================[0m

2024-10-03 04:51:12,440 - ERROR - Command error: 
2024-10-03 04:57:38,111 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration', '-k', 'test_py.py']' returned non-zero exit status 1.
2024-10-03 04:57:38,111 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 5 items

tests/integration/test_py.py [31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31m                                       [100%][0m

=================================== FAILURES ===================================
[31m[1m____________________________ test_run_normal_script ____________________________[0m

    [94mdef[39;49;00m [92mtest_run_normal_script[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running a normal Python script."""[39;49;00m[90m[39;49;00m
>       result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m

[1m[31mtests/integration/test_py.py[0m:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = True, timeout = None, check = True
popenargs = (['py', 'py'],), kwargs = {'stderr': -1, 'stdout': -1, 'text': True}
process = <Popen: returncode: 2 args: ['py', 'py']>, stdout = ''
stderr = 'usage: py [-h] [-p PYTHONPATH] [-t] [-ut] [-it] target\npy: error: the following arguments are required: target\n'
retcode = 2

    [94mdef[39;49;00m [92mrun[39;49;00m(*popenargs,[90m[39;49;00m
            [96minput[39;49;00m=[94mNone[39;49;00m, capture_output=[94mFalse[39;49;00m, timeout=[94mNone[39;49;00m, check=[94mFalse[39;49;00m, **kwargs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Run command with arguments and return a CompletedProcess instance.[39;49;00m
    [33m[39;49;00m
    [33m    The returned instance will have attributes args, returncode, stdout and[39;49;00m
    [33m    stderr. By default, stdout and stderr are not captured, and those attributes[39;49;00m
    [33m    will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them,[39;49;00m
    [33m    or pass capture_output=True to capture both.[39;49;00m
    [33m[39;49;00m
    [33m    If check is True and the exit code was non-zero, it raises a[39;49;00m
    [33m    CalledProcessError. The CalledProcessError object will have the return code[39;49;00m
    [33m    in the returncode attribute, and output & stderr attributes if those streams[39;49;00m
    [33m    were captured.[39;49;00m
    [33m[39;49;00m
    [33m    If timeout is given, and the process takes too long, a TimeoutExpired[39;49;00m
    [33m    exception will be raised.[39;49;00m
    [33m[39;49;00m
    [33m    There is an optional argument "input", allowing you to[39;49;00m
    [33m    pass bytes or a string to the subprocess's stdin.  If you use this argument[39;49;00m
    [33m    you may not also use the Popen constructor's "stdin" argument, as[39;49;00m
    [33m    it will be used internally.[39;49;00m
    [33m[39;49;00m
    [33m    By default, all communication is in bytes, and therefore any "input" should[39;49;00m
    [33m    be bytes, and the stdout and stderr will be bytes. If in text mode, any[39;49;00m
    [33m    "input" should be a string, and stdout and stderr will be strings decoded[39;49;00m
    [33m    according to locale encoding, or by "encoding" if set. Text mode is[39;49;00m
    [33m    triggered by setting any of text, encoding, errors or universal_newlines.[39;49;00m
    [33m[39;49;00m
    [33m    The other arguments are the same as for the Popen constructor.[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96minput[39;49;00m [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdin and input arguments may not both be used.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m capture_output:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mor[39;49;00m kwargs.get([33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdout and stderr arguments may not be used [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                 [33m'[39;49;00m[33mwith capture_output.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                stdout, stderr = process.communicate([96minput[39;49;00m, timeout=timeout)[90m[39;49;00m
            [94mexcept[39;49;00m TimeoutExpired [94mas[39;49;00m exc:[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [94mif[39;49;00m _mswindows:[90m[39;49;00m
                    [90m# Windows accumulates the output in a single blocking[39;49;00m[90m[39;49;00m
                    [90m# read() call run on child threads, with the timeout[39;49;00m[90m[39;49;00m
                    [90m# being done in a join() on those threads.  communicate()[39;49;00m[90m[39;49;00m
                    [90m# _after_ kill() is required to collect that and add it[39;49;00m[90m[39;49;00m
                    [90m# to the exception.[39;49;00m[90m[39;49;00m
                    exc.stdout, exc.stderr = process.communicate()[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# POSIX _communicate already populated the output so[39;49;00m[90m[39;49;00m
                    [90m# far into the TimeoutExpired exception.[39;49;00m[90m[39;49;00m
                    process.wait()[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            [94mexcept[39;49;00m:  [90m# Including KeyboardInterrupt, communicate handled that.[39;49;00m[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [90m# We don't call process.wait() as .__exit__ does that for us.[39;49;00m[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            retcode = process.poll()[90m[39;49;00m
            [94mif[39;49;00m check [95mand[39;49;00m retcode:[90m[39;49;00m
>               [94mraise[39;49;00m CalledProcessError(retcode, process.args,[90m[39;49;00m
                                         output=stdout, stderr=stderr)[90m[39;49;00m
[1m[31mE               subprocess.CalledProcessError: Command '['py', 'py']' returned non-zero exit status 2.[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:571: CalledProcessError
[31m[1m_____________________________ test_run_unit_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_unit_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running unit tests."""[39;49;00m[90m[39;49;00m
>       result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-ut[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m

[1m[31mtests/integration/test_py.py[0m:12: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = True, timeout = None, check = True
popenargs = (['py', '-ut', 'py'],)
kwargs = {'stderr': -1, 'stdout': -1, 'text': True}
process = <Popen: returncode: 2 args: ['py', '-ut', 'py']>, stdout = ''
stderr = 'usage: py [-h] [-p PYTHONPATH] [-t] [-ut] [-it] target\npy: error: the following arguments are required: target\n'
retcode = 2

    [94mdef[39;49;00m [92mrun[39;49;00m(*popenargs,[90m[39;49;00m
            [96minput[39;49;00m=[94mNone[39;49;00m, capture_output=[94mFalse[39;49;00m, timeout=[94mNone[39;49;00m, check=[94mFalse[39;49;00m, **kwargs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Run command with arguments and return a CompletedProcess instance.[39;49;00m
    [33m[39;49;00m
    [33m    The returned instance will have attributes args, returncode, stdout and[39;49;00m
    [33m    stderr. By default, stdout and stderr are not captured, and those attributes[39;49;00m
    [33m    will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them,[39;49;00m
    [33m    or pass capture_output=True to capture both.[39;49;00m
    [33m[39;49;00m
    [33m    If check is True and the exit code was non-zero, it raises a[39;49;00m
    [33m    CalledProcessError. The CalledProcessError object will have the return code[39;49;00m
    [33m    in the returncode attribute, and output & stderr attributes if those streams[39;49;00m
    [33m    were captured.[39;49;00m
    [33m[39;49;00m
    [33m    If timeout is given, and the process takes too long, a TimeoutExpired[39;49;00m
    [33m    exception will be raised.[39;49;00m
    [33m[39;49;00m
    [33m    There is an optional argument "input", allowing you to[39;49;00m
    [33m    pass bytes or a string to the subprocess's stdin.  If you use this argument[39;49;00m
    [33m    you may not also use the Popen constructor's "stdin" argument, as[39;49;00m
    [33m    it will be used internally.[39;49;00m
    [33m[39;49;00m
    [33m    By default, all communication is in bytes, and therefore any "input" should[39;49;00m
    [33m    be bytes, and the stdout and stderr will be bytes. If in text mode, any[39;49;00m
    [33m    "input" should be a string, and stdout and stderr will be strings decoded[39;49;00m
    [33m    according to locale encoding, or by "encoding" if set. Text mode is[39;49;00m
    [33m    triggered by setting any of text, encoding, errors or universal_newlines.[39;49;00m
    [33m[39;49;00m
    [33m    The other arguments are the same as for the Popen constructor.[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96minput[39;49;00m [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdin and input arguments may not both be used.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m capture_output:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mor[39;49;00m kwargs.get([33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdout and stderr arguments may not be used [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                 [33m'[39;49;00m[33mwith capture_output.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                stdout, stderr = process.communicate([96minput[39;49;00m, timeout=timeout)[90m[39;49;00m
            [94mexcept[39;49;00m TimeoutExpired [94mas[39;49;00m exc:[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [94mif[39;49;00m _mswindows:[90m[39;49;00m
                    [90m# Windows accumulates the output in a single blocking[39;49;00m[90m[39;49;00m
                    [90m# read() call run on child threads, with the timeout[39;49;00m[90m[39;49;00m
                    [90m# being done in a join() on those threads.  communicate()[39;49;00m[90m[39;49;00m
                    [90m# _after_ kill() is required to collect that and add it[39;49;00m[90m[39;49;00m
                    [90m# to the exception.[39;49;00m[90m[39;49;00m
                    exc.stdout, exc.stderr = process.communicate()[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# POSIX _communicate already populated the output so[39;49;00m[90m[39;49;00m
                    [90m# far into the TimeoutExpired exception.[39;49;00m[90m[39;49;00m
                    process.wait()[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            [94mexcept[39;49;00m:  [90m# Including KeyboardInterrupt, communicate handled that.[39;49;00m[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [90m# We don't call process.wait() as .__exit__ does that for us.[39;49;00m[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            retcode = process.poll()[90m[39;49;00m
            [94mif[39;49;00m check [95mand[39;49;00m retcode:[90m[39;49;00m
>               [94mraise[39;49;00m CalledProcessError(retcode, process.args,[90m[39;49;00m
                                         output=stdout, stderr=stderr)[90m[39;49;00m
[1m[31mE               subprocess.CalledProcessError: Command '['py', '-ut', 'py']' returned non-zero exit status 2.[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:571: CalledProcessError
[31m[1m__________________________ test_run_integration_tests __________________________[0m

    [94mdef[39;49;00m [92mtest_run_integration_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running integration tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-it[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py_command.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       assert 'test_py_command.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-it', 'py'], returncode=0, stdout='', stderr='usage: py [-h] [-p PYTHONPATH] [-t] [-ut] ...) % args)\n  File "/usr/lib/python3.12/argparse.py", line 2664, in exit\n    _sys.exit(status)\nSystemExit: 2\n>>> \n').stdout[0m

[1m[31mtests/integration/test_py.py[0m:18: AssertionError
[31m[1m______________________________ test_run_all_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_all_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running all tests."""[39;49;00m[90m[39;49;00m
>       result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-t[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m

[1m[31mtests/integration/test_py.py[0m:22: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = True, timeout = None, check = True
popenargs = (['py', '-t', 'py'],)
kwargs = {'stderr': -1, 'stdout': -1, 'text': True}
process = <Popen: returncode: 2 args: ['py', '-t', 'py']>, stdout = ''
stderr = 'usage: py [-h] [-p PYTHONPATH] [-t] [-ut] [-it] target\npy: error: the following arguments are required: target\n'
retcode = 2

    [94mdef[39;49;00m [92mrun[39;49;00m(*popenargs,[90m[39;49;00m
            [96minput[39;49;00m=[94mNone[39;49;00m, capture_output=[94mFalse[39;49;00m, timeout=[94mNone[39;49;00m, check=[94mFalse[39;49;00m, **kwargs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Run command with arguments and return a CompletedProcess instance.[39;49;00m
    [33m[39;49;00m
    [33m    The returned instance will have attributes args, returncode, stdout and[39;49;00m
    [33m    stderr. By default, stdout and stderr are not captured, and those attributes[39;49;00m
    [33m    will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them,[39;49;00m
    [33m    or pass capture_output=True to capture both.[39;49;00m
    [33m[39;49;00m
    [33m    If check is True and the exit code was non-zero, it raises a[39;49;00m
    [33m    CalledProcessError. The CalledProcessError object will have the return code[39;49;00m
    [33m    in the returncode attribute, and output & stderr attributes if those streams[39;49;00m
    [33m    were captured.[39;49;00m
    [33m[39;49;00m
    [33m    If timeout is given, and the process takes too long, a TimeoutExpired[39;49;00m
    [33m    exception will be raised.[39;49;00m
    [33m[39;49;00m
    [33m    There is an optional argument "input", allowing you to[39;49;00m
    [33m    pass bytes or a string to the subprocess's stdin.  If you use this argument[39;49;00m
    [33m    you may not also use the Popen constructor's "stdin" argument, as[39;49;00m
    [33m    it will be used internally.[39;49;00m
    [33m[39;49;00m
    [33m    By default, all communication is in bytes, and therefore any "input" should[39;49;00m
    [33m    be bytes, and the stdout and stderr will be bytes. If in text mode, any[39;49;00m
    [33m    "input" should be a string, and stdout and stderr will be strings decoded[39;49;00m
    [33m    according to locale encoding, or by "encoding" if set. Text mode is[39;49;00m
    [33m    triggered by setting any of text, encoding, errors or universal_newlines.[39;49;00m
    [33m[39;49;00m
    [33m    The other arguments are the same as for the Popen constructor.[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96minput[39;49;00m [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdin and input arguments may not both be used.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m capture_output:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mor[39;49;00m kwargs.get([33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdout and stderr arguments may not be used [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                 [33m'[39;49;00m[33mwith capture_output.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                stdout, stderr = process.communicate([96minput[39;49;00m, timeout=timeout)[90m[39;49;00m
            [94mexcept[39;49;00m TimeoutExpired [94mas[39;49;00m exc:[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [94mif[39;49;00m _mswindows:[90m[39;49;00m
                    [90m# Windows accumulates the output in a single blocking[39;49;00m[90m[39;49;00m
                    [90m# read() call run on child threads, with the timeout[39;49;00m[90m[39;49;00m
                    [90m# being done in a join() on those threads.  communicate()[39;49;00m[90m[39;49;00m
                    [90m# _after_ kill() is required to collect that and add it[39;49;00m[90m[39;49;00m
                    [90m# to the exception.[39;49;00m[90m[39;49;00m
                    exc.stdout, exc.stderr = process.communicate()[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# POSIX _communicate already populated the output so[39;49;00m[90m[39;49;00m
                    [90m# far into the TimeoutExpired exception.[39;49;00m[90m[39;49;00m
                    process.wait()[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            [94mexcept[39;49;00m:  [90m# Including KeyboardInterrupt, communicate handled that.[39;49;00m[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [90m# We don't call process.wait() as .__exit__ does that for us.[39;49;00m[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            retcode = process.poll()[90m[39;49;00m
            [94mif[39;49;00m check [95mand[39;49;00m retcode:[90m[39;49;00m
>               [94mraise[39;49;00m CalledProcessError(retcode, process.args,[90m[39;49;00m
                                         output=stdout, stderr=stderr)[90m[39;49;00m
[1m[31mE               subprocess.CalledProcessError: Command '['py', '-t', 'py']' returned non-zero exit status 2.[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:571: CalledProcessError
[31m[1m___________________ test_run_script_with_no_executable_code ____________________[0m

    [94mdef[39;49;00m [92mtest_run_script_with_no_executable_code[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running a script with no executable code."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m"[39;49;00m], check=[94mFalse[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mError: The specified target [39;49;00m[33m'[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m'[39;49;00m[33m does not contain any executable code.[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stderr[90m[39;49;00m
[1m[31mE       assert "Error: The specified target 'misc/system_instructions.md' does not contain any executable code." in '  File "/root/envy/misc/system_instructions.md", line 39\n    When you\'re ready to commit your changes, use the `com...ted changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n'[0m
[1m[31mE        +  where '  File "/root/envy/misc/system_instructions.md", line 39\n    When you\'re ready to commit your changes, use the `com...ted changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n' = CompletedProcess(args=['py', 'misc/system_instructions.md'], returncode=1, stdout='', stderr='  File "/root/envy/misc/...ed changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n').stderr[0m

[1m[31mtests/integration/test_py.py[0m:28: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_normal_script[0m - subprocess.CalledProcessError: Command '['py', 'py']' returned non-zero exi...
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_unit_tests[0m - subprocess.CalledProcessError: Command '['py', '-ut', 'py']' returned non-z...
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_integration_tests[0m - assert 'test_py_command.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_all_tests[0m - subprocess.CalledProcessError: Command '['py', '-t', 'py']' returned non-ze...
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_script_with_no_executable_code[0m - assert "Error: The specified target 'misc/system_instructions.md' does not ...
[31m============================== [31m[1m5 failed[0m[31m in 2.07s[0m[31m ===============================[0m

2024-10-03 04:57:38,112 - ERROR - Command error: 
2024-10-03 05:03:31,310 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration', '-k', 'test_py.py']' returned non-zero exit status 1.
2024-10-03 05:03:31,311 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 5 items

tests/integration/test_py.py [31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31m                                       [100%][0m

=================================== FAILURES ===================================
[31m[1m____________________________ test_run_normal_script ____________________________[0m

    [94mdef[39;49;00m [92mtest_run_normal_script[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running a normal Python script."""[39;49;00m[90m[39;49;00m
>       result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m

[1m[31mtests/integration/test_py.py[0m:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = True, timeout = None, check = True
popenargs = (['py', 'py'],), kwargs = {'stderr': -1, 'stdout': -1, 'text': True}
process = <Popen: returncode: 2 args: ['py', 'py']>, stdout = ''
stderr = 'usage: py [-h] [-p PYTHONPATH] [-t] [-ut] [-it] target\npy: error: the following arguments are required: target\n'
retcode = 2

    [94mdef[39;49;00m [92mrun[39;49;00m(*popenargs,[90m[39;49;00m
            [96minput[39;49;00m=[94mNone[39;49;00m, capture_output=[94mFalse[39;49;00m, timeout=[94mNone[39;49;00m, check=[94mFalse[39;49;00m, **kwargs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Run command with arguments and return a CompletedProcess instance.[39;49;00m
    [33m[39;49;00m
    [33m    The returned instance will have attributes args, returncode, stdout and[39;49;00m
    [33m    stderr. By default, stdout and stderr are not captured, and those attributes[39;49;00m
    [33m    will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them,[39;49;00m
    [33m    or pass capture_output=True to capture both.[39;49;00m
    [33m[39;49;00m
    [33m    If check is True and the exit code was non-zero, it raises a[39;49;00m
    [33m    CalledProcessError. The CalledProcessError object will have the return code[39;49;00m
    [33m    in the returncode attribute, and output & stderr attributes if those streams[39;49;00m
    [33m    were captured.[39;49;00m
    [33m[39;49;00m
    [33m    If timeout is given, and the process takes too long, a TimeoutExpired[39;49;00m
    [33m    exception will be raised.[39;49;00m
    [33m[39;49;00m
    [33m    There is an optional argument "input", allowing you to[39;49;00m
    [33m    pass bytes or a string to the subprocess's stdin.  If you use this argument[39;49;00m
    [33m    you may not also use the Popen constructor's "stdin" argument, as[39;49;00m
    [33m    it will be used internally.[39;49;00m
    [33m[39;49;00m
    [33m    By default, all communication is in bytes, and therefore any "input" should[39;49;00m
    [33m    be bytes, and the stdout and stderr will be bytes. If in text mode, any[39;49;00m
    [33m    "input" should be a string, and stdout and stderr will be strings decoded[39;49;00m
    [33m    according to locale encoding, or by "encoding" if set. Text mode is[39;49;00m
    [33m    triggered by setting any of text, encoding, errors or universal_newlines.[39;49;00m
    [33m[39;49;00m
    [33m    The other arguments are the same as for the Popen constructor.[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96minput[39;49;00m [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdin and input arguments may not both be used.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m capture_output:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mor[39;49;00m kwargs.get([33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdout and stderr arguments may not be used [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                 [33m'[39;49;00m[33mwith capture_output.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                stdout, stderr = process.communicate([96minput[39;49;00m, timeout=timeout)[90m[39;49;00m
            [94mexcept[39;49;00m TimeoutExpired [94mas[39;49;00m exc:[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [94mif[39;49;00m _mswindows:[90m[39;49;00m
                    [90m# Windows accumulates the output in a single blocking[39;49;00m[90m[39;49;00m
                    [90m# read() call run on child threads, with the timeout[39;49;00m[90m[39;49;00m
                    [90m# being done in a join() on those threads.  communicate()[39;49;00m[90m[39;49;00m
                    [90m# _after_ kill() is required to collect that and add it[39;49;00m[90m[39;49;00m
                    [90m# to the exception.[39;49;00m[90m[39;49;00m
                    exc.stdout, exc.stderr = process.communicate()[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# POSIX _communicate already populated the output so[39;49;00m[90m[39;49;00m
                    [90m# far into the TimeoutExpired exception.[39;49;00m[90m[39;49;00m
                    process.wait()[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            [94mexcept[39;49;00m:  [90m# Including KeyboardInterrupt, communicate handled that.[39;49;00m[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [90m# We don't call process.wait() as .__exit__ does that for us.[39;49;00m[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            retcode = process.poll()[90m[39;49;00m
            [94mif[39;49;00m check [95mand[39;49;00m retcode:[90m[39;49;00m
>               [94mraise[39;49;00m CalledProcessError(retcode, process.args,[90m[39;49;00m
                                         output=stdout, stderr=stderr)[90m[39;49;00m
[1m[31mE               subprocess.CalledProcessError: Command '['py', 'py']' returned non-zero exit status 2.[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:571: CalledProcessError
[31m[1m_____________________________ test_run_unit_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_unit_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running unit tests."""[39;49;00m[90m[39;49;00m
>       result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-ut[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m

[1m[31mtests/integration/test_py.py[0m:12: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = True, timeout = None, check = True
popenargs = (['py', '-ut', 'py'],)
kwargs = {'stderr': -1, 'stdout': -1, 'text': True}
process = <Popen: returncode: 2 args: ['py', '-ut', 'py']>, stdout = ''
stderr = 'usage: py [-h] [-p PYTHONPATH] [-t] [-ut] [-it] target\npy: error: the following arguments are required: target\n'
retcode = 2

    [94mdef[39;49;00m [92mrun[39;49;00m(*popenargs,[90m[39;49;00m
            [96minput[39;49;00m=[94mNone[39;49;00m, capture_output=[94mFalse[39;49;00m, timeout=[94mNone[39;49;00m, check=[94mFalse[39;49;00m, **kwargs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Run command with arguments and return a CompletedProcess instance.[39;49;00m
    [33m[39;49;00m
    [33m    The returned instance will have attributes args, returncode, stdout and[39;49;00m
    [33m    stderr. By default, stdout and stderr are not captured, and those attributes[39;49;00m
    [33m    will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them,[39;49;00m
    [33m    or pass capture_output=True to capture both.[39;49;00m
    [33m[39;49;00m
    [33m    If check is True and the exit code was non-zero, it raises a[39;49;00m
    [33m    CalledProcessError. The CalledProcessError object will have the return code[39;49;00m
    [33m    in the returncode attribute, and output & stderr attributes if those streams[39;49;00m
    [33m    were captured.[39;49;00m
    [33m[39;49;00m
    [33m    If timeout is given, and the process takes too long, a TimeoutExpired[39;49;00m
    [33m    exception will be raised.[39;49;00m
    [33m[39;49;00m
    [33m    There is an optional argument "input", allowing you to[39;49;00m
    [33m    pass bytes or a string to the subprocess's stdin.  If you use this argument[39;49;00m
    [33m    you may not also use the Popen constructor's "stdin" argument, as[39;49;00m
    [33m    it will be used internally.[39;49;00m
    [33m[39;49;00m
    [33m    By default, all communication is in bytes, and therefore any "input" should[39;49;00m
    [33m    be bytes, and the stdout and stderr will be bytes. If in text mode, any[39;49;00m
    [33m    "input" should be a string, and stdout and stderr will be strings decoded[39;49;00m
    [33m    according to locale encoding, or by "encoding" if set. Text mode is[39;49;00m
    [33m    triggered by setting any of text, encoding, errors or universal_newlines.[39;49;00m
    [33m[39;49;00m
    [33m    The other arguments are the same as for the Popen constructor.[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96minput[39;49;00m [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdin and input arguments may not both be used.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m capture_output:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mor[39;49;00m kwargs.get([33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdout and stderr arguments may not be used [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                 [33m'[39;49;00m[33mwith capture_output.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                stdout, stderr = process.communicate([96minput[39;49;00m, timeout=timeout)[90m[39;49;00m
            [94mexcept[39;49;00m TimeoutExpired [94mas[39;49;00m exc:[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [94mif[39;49;00m _mswindows:[90m[39;49;00m
                    [90m# Windows accumulates the output in a single blocking[39;49;00m[90m[39;49;00m
                    [90m# read() call run on child threads, with the timeout[39;49;00m[90m[39;49;00m
                    [90m# being done in a join() on those threads.  communicate()[39;49;00m[90m[39;49;00m
                    [90m# _after_ kill() is required to collect that and add it[39;49;00m[90m[39;49;00m
                    [90m# to the exception.[39;49;00m[90m[39;49;00m
                    exc.stdout, exc.stderr = process.communicate()[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# POSIX _communicate already populated the output so[39;49;00m[90m[39;49;00m
                    [90m# far into the TimeoutExpired exception.[39;49;00m[90m[39;49;00m
                    process.wait()[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            [94mexcept[39;49;00m:  [90m# Including KeyboardInterrupt, communicate handled that.[39;49;00m[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [90m# We don't call process.wait() as .__exit__ does that for us.[39;49;00m[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            retcode = process.poll()[90m[39;49;00m
            [94mif[39;49;00m check [95mand[39;49;00m retcode:[90m[39;49;00m
>               [94mraise[39;49;00m CalledProcessError(retcode, process.args,[90m[39;49;00m
                                         output=stdout, stderr=stderr)[90m[39;49;00m
[1m[31mE               subprocess.CalledProcessError: Command '['py', '-ut', 'py']' returned non-zero exit status 2.[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:571: CalledProcessError
[31m[1m__________________________ test_run_integration_tests __________________________[0m

    [94mdef[39;49;00m [92mtest_run_integration_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running integration tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-it[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py_command.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       assert 'test_py_command.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-it', 'py'], returncode=0, stdout='', stderr='usage: py [-h] [-p PYTHONPATH] [-t] [-ut] ...) % args)\n  File "/usr/lib/python3.12/argparse.py", line 2664, in exit\n    _sys.exit(status)\nSystemExit: 2\n>>> \n').stdout[0m

[1m[31mtests/integration/test_py.py[0m:18: AssertionError
[31m[1m______________________________ test_run_all_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_all_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running all tests."""[39;49;00m[90m[39;49;00m
>       result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-t[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m

[1m[31mtests/integration/test_py.py[0m:22: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = True, timeout = None, check = True
popenargs = (['py', '-t', 'py'],)
kwargs = {'stderr': -1, 'stdout': -1, 'text': True}
process = <Popen: returncode: 2 args: ['py', '-t', 'py']>, stdout = ''
stderr = 'usage: py [-h] [-p PYTHONPATH] [-t] [-ut] [-it] target\npy: error: the following arguments are required: target\n'
retcode = 2

    [94mdef[39;49;00m [92mrun[39;49;00m(*popenargs,[90m[39;49;00m
            [96minput[39;49;00m=[94mNone[39;49;00m, capture_output=[94mFalse[39;49;00m, timeout=[94mNone[39;49;00m, check=[94mFalse[39;49;00m, **kwargs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Run command with arguments and return a CompletedProcess instance.[39;49;00m
    [33m[39;49;00m
    [33m    The returned instance will have attributes args, returncode, stdout and[39;49;00m
    [33m    stderr. By default, stdout and stderr are not captured, and those attributes[39;49;00m
    [33m    will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them,[39;49;00m
    [33m    or pass capture_output=True to capture both.[39;49;00m
    [33m[39;49;00m
    [33m    If check is True and the exit code was non-zero, it raises a[39;49;00m
    [33m    CalledProcessError. The CalledProcessError object will have the return code[39;49;00m
    [33m    in the returncode attribute, and output & stderr attributes if those streams[39;49;00m
    [33m    were captured.[39;49;00m
    [33m[39;49;00m
    [33m    If timeout is given, and the process takes too long, a TimeoutExpired[39;49;00m
    [33m    exception will be raised.[39;49;00m
    [33m[39;49;00m
    [33m    There is an optional argument "input", allowing you to[39;49;00m
    [33m    pass bytes or a string to the subprocess's stdin.  If you use this argument[39;49;00m
    [33m    you may not also use the Popen constructor's "stdin" argument, as[39;49;00m
    [33m    it will be used internally.[39;49;00m
    [33m[39;49;00m
    [33m    By default, all communication is in bytes, and therefore any "input" should[39;49;00m
    [33m    be bytes, and the stdout and stderr will be bytes. If in text mode, any[39;49;00m
    [33m    "input" should be a string, and stdout and stderr will be strings decoded[39;49;00m
    [33m    according to locale encoding, or by "encoding" if set. Text mode is[39;49;00m
    [33m    triggered by setting any of text, encoding, errors or universal_newlines.[39;49;00m
    [33m[39;49;00m
    [33m    The other arguments are the same as for the Popen constructor.[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96minput[39;49;00m [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdin and input arguments may not both be used.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m capture_output:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mor[39;49;00m kwargs.get([33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdout and stderr arguments may not be used [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                 [33m'[39;49;00m[33mwith capture_output.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                stdout, stderr = process.communicate([96minput[39;49;00m, timeout=timeout)[90m[39;49;00m
            [94mexcept[39;49;00m TimeoutExpired [94mas[39;49;00m exc:[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [94mif[39;49;00m _mswindows:[90m[39;49;00m
                    [90m# Windows accumulates the output in a single blocking[39;49;00m[90m[39;49;00m
                    [90m# read() call run on child threads, with the timeout[39;49;00m[90m[39;49;00m
                    [90m# being done in a join() on those threads.  communicate()[39;49;00m[90m[39;49;00m
                    [90m# _after_ kill() is required to collect that and add it[39;49;00m[90m[39;49;00m
                    [90m# to the exception.[39;49;00m[90m[39;49;00m
                    exc.stdout, exc.stderr = process.communicate()[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# POSIX _communicate already populated the output so[39;49;00m[90m[39;49;00m
                    [90m# far into the TimeoutExpired exception.[39;49;00m[90m[39;49;00m
                    process.wait()[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            [94mexcept[39;49;00m:  [90m# Including KeyboardInterrupt, communicate handled that.[39;49;00m[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [90m# We don't call process.wait() as .__exit__ does that for us.[39;49;00m[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            retcode = process.poll()[90m[39;49;00m
            [94mif[39;49;00m check [95mand[39;49;00m retcode:[90m[39;49;00m
>               [94mraise[39;49;00m CalledProcessError(retcode, process.args,[90m[39;49;00m
                                         output=stdout, stderr=stderr)[90m[39;49;00m
[1m[31mE               subprocess.CalledProcessError: Command '['py', '-t', 'py']' returned non-zero exit status 2.[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:571: CalledProcessError
[31m[1m___________________ test_run_script_with_no_executable_code ____________________[0m

    [94mdef[39;49;00m [92mtest_run_script_with_no_executable_code[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running a script with no executable code."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m"[39;49;00m], check=[94mFalse[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mError: The specified target [39;49;00m[33m'[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m'[39;49;00m[33m does not contain any executable code.[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stderr[90m[39;49;00m
[1m[31mE       assert "Error: The specified target 'misc/system_instructions.md' does not contain any executable code." in '  File "/root/envy/misc/system_instructions.md", line 39\n    When you\'re ready to commit your changes, use the `com...ted changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n'[0m
[1m[31mE        +  where '  File "/root/envy/misc/system_instructions.md", line 39\n    When you\'re ready to commit your changes, use the `com...ted changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n' = CompletedProcess(args=['py', 'misc/system_instructions.md'], returncode=1, stdout='', stderr='  File "/root/envy/misc/...ed changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n').stderr[0m

[1m[31mtests/integration/test_py.py[0m:28: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_normal_script[0m - subprocess.CalledProcessError: Command '['py', 'py']' returned non-zero exi...
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_unit_tests[0m - subprocess.CalledProcessError: Command '['py', '-ut', 'py']' returned non-z...
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_integration_tests[0m - assert 'test_py_command.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_all_tests[0m - subprocess.CalledProcessError: Command '['py', '-t', 'py']' returned non-ze...
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_script_with_no_executable_code[0m - assert "Error: The specified target 'misc/system_instructions.md' does not ...
[31m============================== [31m[1m5 failed[0m[31m in 2.08s[0m[31m ===============================[0m

2024-10-03 05:03:31,312 - ERROR - Command error: 
2024-10-03 05:05:19,596 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration', '-k', 'test_py.py']' returned non-zero exit status 1.
2024-10-03 05:05:19,596 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 5 items

tests/integration/test_py.py [31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31m                                       [100%][0m

=================================== FAILURES ===================================
[31m[1m____________________________ test_run_normal_script ____________________________[0m

    [94mdef[39;49;00m [92mtest_run_normal_script[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running a normal Python script."""[39;49;00m[90m[39;49;00m
>       result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m

[1m[31mtests/integration/test_py.py[0m:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = True, timeout = None, check = True
popenargs = (['py', 'py'],), kwargs = {'stderr': -1, 'stdout': -1, 'text': True}
process = <Popen: returncode: 2 args: ['py', 'py']>, stdout = ''
stderr = 'usage: py [-h] [-p PYTHONPATH] [-t] [-ut] [-it] target\npy: error: the following arguments are required: target\n'
retcode = 2

    [94mdef[39;49;00m [92mrun[39;49;00m(*popenargs,[90m[39;49;00m
            [96minput[39;49;00m=[94mNone[39;49;00m, capture_output=[94mFalse[39;49;00m, timeout=[94mNone[39;49;00m, check=[94mFalse[39;49;00m, **kwargs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Run command with arguments and return a CompletedProcess instance.[39;49;00m
    [33m[39;49;00m
    [33m    The returned instance will have attributes args, returncode, stdout and[39;49;00m
    [33m    stderr. By default, stdout and stderr are not captured, and those attributes[39;49;00m
    [33m    will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them,[39;49;00m
    [33m    or pass capture_output=True to capture both.[39;49;00m
    [33m[39;49;00m
    [33m    If check is True and the exit code was non-zero, it raises a[39;49;00m
    [33m    CalledProcessError. The CalledProcessError object will have the return code[39;49;00m
    [33m    in the returncode attribute, and output & stderr attributes if those streams[39;49;00m
    [33m    were captured.[39;49;00m
    [33m[39;49;00m
    [33m    If timeout is given, and the process takes too long, a TimeoutExpired[39;49;00m
    [33m    exception will be raised.[39;49;00m
    [33m[39;49;00m
    [33m    There is an optional argument "input", allowing you to[39;49;00m
    [33m    pass bytes or a string to the subprocess's stdin.  If you use this argument[39;49;00m
    [33m    you may not also use the Popen constructor's "stdin" argument, as[39;49;00m
    [33m    it will be used internally.[39;49;00m
    [33m[39;49;00m
    [33m    By default, all communication is in bytes, and therefore any "input" should[39;49;00m
    [33m    be bytes, and the stdout and stderr will be bytes. If in text mode, any[39;49;00m
    [33m    "input" should be a string, and stdout and stderr will be strings decoded[39;49;00m
    [33m    according to locale encoding, or by "encoding" if set. Text mode is[39;49;00m
    [33m    triggered by setting any of text, encoding, errors or universal_newlines.[39;49;00m
    [33m[39;49;00m
    [33m    The other arguments are the same as for the Popen constructor.[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96minput[39;49;00m [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdin and input arguments may not both be used.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m capture_output:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mor[39;49;00m kwargs.get([33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdout and stderr arguments may not be used [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                 [33m'[39;49;00m[33mwith capture_output.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                stdout, stderr = process.communicate([96minput[39;49;00m, timeout=timeout)[90m[39;49;00m
            [94mexcept[39;49;00m TimeoutExpired [94mas[39;49;00m exc:[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [94mif[39;49;00m _mswindows:[90m[39;49;00m
                    [90m# Windows accumulates the output in a single blocking[39;49;00m[90m[39;49;00m
                    [90m# read() call run on child threads, with the timeout[39;49;00m[90m[39;49;00m
                    [90m# being done in a join() on those threads.  communicate()[39;49;00m[90m[39;49;00m
                    [90m# _after_ kill() is required to collect that and add it[39;49;00m[90m[39;49;00m
                    [90m# to the exception.[39;49;00m[90m[39;49;00m
                    exc.stdout, exc.stderr = process.communicate()[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# POSIX _communicate already populated the output so[39;49;00m[90m[39;49;00m
                    [90m# far into the TimeoutExpired exception.[39;49;00m[90m[39;49;00m
                    process.wait()[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            [94mexcept[39;49;00m:  [90m# Including KeyboardInterrupt, communicate handled that.[39;49;00m[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [90m# We don't call process.wait() as .__exit__ does that for us.[39;49;00m[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            retcode = process.poll()[90m[39;49;00m
            [94mif[39;49;00m check [95mand[39;49;00m retcode:[90m[39;49;00m
>               [94mraise[39;49;00m CalledProcessError(retcode, process.args,[90m[39;49;00m
                                         output=stdout, stderr=stderr)[90m[39;49;00m
[1m[31mE               subprocess.CalledProcessError: Command '['py', 'py']' returned non-zero exit status 2.[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:571: CalledProcessError
[31m[1m_____________________________ test_run_unit_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_unit_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running unit tests."""[39;49;00m[90m[39;49;00m
>       result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-ut[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m

[1m[31mtests/integration/test_py.py[0m:12: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = True, timeout = None, check = True
popenargs = (['py', '-ut', 'py'],)
kwargs = {'stderr': -1, 'stdout': -1, 'text': True}
process = <Popen: returncode: 2 args: ['py', '-ut', 'py']>, stdout = ''
stderr = 'usage: py [-h] [-p PYTHONPATH] [-t] [-ut] [-it] target\npy: error: the following arguments are required: target\n'
retcode = 2

    [94mdef[39;49;00m [92mrun[39;49;00m(*popenargs,[90m[39;49;00m
            [96minput[39;49;00m=[94mNone[39;49;00m, capture_output=[94mFalse[39;49;00m, timeout=[94mNone[39;49;00m, check=[94mFalse[39;49;00m, **kwargs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Run command with arguments and return a CompletedProcess instance.[39;49;00m
    [33m[39;49;00m
    [33m    The returned instance will have attributes args, returncode, stdout and[39;49;00m
    [33m    stderr. By default, stdout and stderr are not captured, and those attributes[39;49;00m
    [33m    will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them,[39;49;00m
    [33m    or pass capture_output=True to capture both.[39;49;00m
    [33m[39;49;00m
    [33m    If check is True and the exit code was non-zero, it raises a[39;49;00m
    [33m    CalledProcessError. The CalledProcessError object will have the return code[39;49;00m
    [33m    in the returncode attribute, and output & stderr attributes if those streams[39;49;00m
    [33m    were captured.[39;49;00m
    [33m[39;49;00m
    [33m    If timeout is given, and the process takes too long, a TimeoutExpired[39;49;00m
    [33m    exception will be raised.[39;49;00m
    [33m[39;49;00m
    [33m    There is an optional argument "input", allowing you to[39;49;00m
    [33m    pass bytes or a string to the subprocess's stdin.  If you use this argument[39;49;00m
    [33m    you may not also use the Popen constructor's "stdin" argument, as[39;49;00m
    [33m    it will be used internally.[39;49;00m
    [33m[39;49;00m
    [33m    By default, all communication is in bytes, and therefore any "input" should[39;49;00m
    [33m    be bytes, and the stdout and stderr will be bytes. If in text mode, any[39;49;00m
    [33m    "input" should be a string, and stdout and stderr will be strings decoded[39;49;00m
    [33m    according to locale encoding, or by "encoding" if set. Text mode is[39;49;00m
    [33m    triggered by setting any of text, encoding, errors or universal_newlines.[39;49;00m
    [33m[39;49;00m
    [33m    The other arguments are the same as for the Popen constructor.[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96minput[39;49;00m [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdin and input arguments may not both be used.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m capture_output:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mor[39;49;00m kwargs.get([33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdout and stderr arguments may not be used [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                 [33m'[39;49;00m[33mwith capture_output.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                stdout, stderr = process.communicate([96minput[39;49;00m, timeout=timeout)[90m[39;49;00m
            [94mexcept[39;49;00m TimeoutExpired [94mas[39;49;00m exc:[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [94mif[39;49;00m _mswindows:[90m[39;49;00m
                    [90m# Windows accumulates the output in a single blocking[39;49;00m[90m[39;49;00m
                    [90m# read() call run on child threads, with the timeout[39;49;00m[90m[39;49;00m
                    [90m# being done in a join() on those threads.  communicate()[39;49;00m[90m[39;49;00m
                    [90m# _after_ kill() is required to collect that and add it[39;49;00m[90m[39;49;00m
                    [90m# to the exception.[39;49;00m[90m[39;49;00m
                    exc.stdout, exc.stderr = process.communicate()[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# POSIX _communicate already populated the output so[39;49;00m[90m[39;49;00m
                    [90m# far into the TimeoutExpired exception.[39;49;00m[90m[39;49;00m
                    process.wait()[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            [94mexcept[39;49;00m:  [90m# Including KeyboardInterrupt, communicate handled that.[39;49;00m[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [90m# We don't call process.wait() as .__exit__ does that for us.[39;49;00m[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            retcode = process.poll()[90m[39;49;00m
            [94mif[39;49;00m check [95mand[39;49;00m retcode:[90m[39;49;00m
>               [94mraise[39;49;00m CalledProcessError(retcode, process.args,[90m[39;49;00m
                                         output=stdout, stderr=stderr)[90m[39;49;00m
[1m[31mE               subprocess.CalledProcessError: Command '['py', '-ut', 'py']' returned non-zero exit status 2.[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:571: CalledProcessError
[31m[1m__________________________ test_run_integration_tests __________________________[0m

    [94mdef[39;49;00m [92mtest_run_integration_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running integration tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-it[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py_command.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       assert 'test_py_command.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-it', 'py'], returncode=0, stdout='', stderr='usage: py [-h] [-p PYTHONPATH] [-t] [-ut] ...) % args)\n  File "/usr/lib/python3.12/argparse.py", line 2664, in exit\n    _sys.exit(status)\nSystemExit: 2\n>>> \n').stdout[0m

[1m[31mtests/integration/test_py.py[0m:18: AssertionError
[31m[1m______________________________ test_run_all_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_all_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running all tests."""[39;49;00m[90m[39;49;00m
>       result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-t[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m

[1m[31mtests/integration/test_py.py[0m:22: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = True, timeout = None, check = True
popenargs = (['py', '-t', 'py'],)
kwargs = {'stderr': -1, 'stdout': -1, 'text': True}
process = <Popen: returncode: 2 args: ['py', '-t', 'py']>, stdout = ''
stderr = 'usage: py [-h] [-p PYTHONPATH] [-t] [-ut] [-it] target\npy: error: the following arguments are required: target\n'
retcode = 2

    [94mdef[39;49;00m [92mrun[39;49;00m(*popenargs,[90m[39;49;00m
            [96minput[39;49;00m=[94mNone[39;49;00m, capture_output=[94mFalse[39;49;00m, timeout=[94mNone[39;49;00m, check=[94mFalse[39;49;00m, **kwargs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Run command with arguments and return a CompletedProcess instance.[39;49;00m
    [33m[39;49;00m
    [33m    The returned instance will have attributes args, returncode, stdout and[39;49;00m
    [33m    stderr. By default, stdout and stderr are not captured, and those attributes[39;49;00m
    [33m    will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them,[39;49;00m
    [33m    or pass capture_output=True to capture both.[39;49;00m
    [33m[39;49;00m
    [33m    If check is True and the exit code was non-zero, it raises a[39;49;00m
    [33m    CalledProcessError. The CalledProcessError object will have the return code[39;49;00m
    [33m    in the returncode attribute, and output & stderr attributes if those streams[39;49;00m
    [33m    were captured.[39;49;00m
    [33m[39;49;00m
    [33m    If timeout is given, and the process takes too long, a TimeoutExpired[39;49;00m
    [33m    exception will be raised.[39;49;00m
    [33m[39;49;00m
    [33m    There is an optional argument "input", allowing you to[39;49;00m
    [33m    pass bytes or a string to the subprocess's stdin.  If you use this argument[39;49;00m
    [33m    you may not also use the Popen constructor's "stdin" argument, as[39;49;00m
    [33m    it will be used internally.[39;49;00m
    [33m[39;49;00m
    [33m    By default, all communication is in bytes, and therefore any "input" should[39;49;00m
    [33m    be bytes, and the stdout and stderr will be bytes. If in text mode, any[39;49;00m
    [33m    "input" should be a string, and stdout and stderr will be strings decoded[39;49;00m
    [33m    according to locale encoding, or by "encoding" if set. Text mode is[39;49;00m
    [33m    triggered by setting any of text, encoding, errors or universal_newlines.[39;49;00m
    [33m[39;49;00m
    [33m    The other arguments are the same as for the Popen constructor.[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96minput[39;49;00m [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdin and input arguments may not both be used.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m capture_output:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mor[39;49;00m kwargs.get([33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdout and stderr arguments may not be used [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                 [33m'[39;49;00m[33mwith capture_output.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                stdout, stderr = process.communicate([96minput[39;49;00m, timeout=timeout)[90m[39;49;00m
            [94mexcept[39;49;00m TimeoutExpired [94mas[39;49;00m exc:[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [94mif[39;49;00m _mswindows:[90m[39;49;00m
                    [90m# Windows accumulates the output in a single blocking[39;49;00m[90m[39;49;00m
                    [90m# read() call run on child threads, with the timeout[39;49;00m[90m[39;49;00m
                    [90m# being done in a join() on those threads.  communicate()[39;49;00m[90m[39;49;00m
                    [90m# _after_ kill() is required to collect that and add it[39;49;00m[90m[39;49;00m
                    [90m# to the exception.[39;49;00m[90m[39;49;00m
                    exc.stdout, exc.stderr = process.communicate()[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# POSIX _communicate already populated the output so[39;49;00m[90m[39;49;00m
                    [90m# far into the TimeoutExpired exception.[39;49;00m[90m[39;49;00m
                    process.wait()[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            [94mexcept[39;49;00m:  [90m# Including KeyboardInterrupt, communicate handled that.[39;49;00m[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [90m# We don't call process.wait() as .__exit__ does that for us.[39;49;00m[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            retcode = process.poll()[90m[39;49;00m
            [94mif[39;49;00m check [95mand[39;49;00m retcode:[90m[39;49;00m
>               [94mraise[39;49;00m CalledProcessError(retcode, process.args,[90m[39;49;00m
                                         output=stdout, stderr=stderr)[90m[39;49;00m
[1m[31mE               subprocess.CalledProcessError: Command '['py', '-t', 'py']' returned non-zero exit status 2.[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:571: CalledProcessError
[31m[1m___________________ test_run_script_with_no_executable_code ____________________[0m

    [94mdef[39;49;00m [92mtest_run_script_with_no_executable_code[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running a script with no executable code."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m"[39;49;00m], check=[94mFalse[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mError: The specified target [39;49;00m[33m'[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m'[39;49;00m[33m does not contain any executable code.[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stderr[90m[39;49;00m
[1m[31mE       assert "Error: The specified target 'misc/system_instructions.md' does not contain any executable code." in '  File "/root/envy/misc/system_instructions.md", line 39\n    When you\'re ready to commit your changes, use the `com...ted changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n'[0m
[1m[31mE        +  where '  File "/root/envy/misc/system_instructions.md", line 39\n    When you\'re ready to commit your changes, use the `com...ted changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n' = CompletedProcess(args=['py', 'misc/system_instructions.md'], returncode=1, stdout='', stderr='  File "/root/envy/misc/...ed changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n').stderr[0m

[1m[31mtests/integration/test_py.py[0m:28: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_normal_script[0m - subprocess.CalledProcessError: Command '['py', 'py']' returned non-zero exi...
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_unit_tests[0m - subprocess.CalledProcessError: Command '['py', '-ut', 'py']' returned non-z...
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_integration_tests[0m - assert 'test_py_command.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_all_tests[0m - subprocess.CalledProcessError: Command '['py', '-t', 'py']' returned non-ze...
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_script_with_no_executable_code[0m - assert "Error: The specified target 'misc/system_instructions.md' does not ...
[31m============================== [31m[1m5 failed[0m[31m in 2.18s[0m[31m ===============================[0m

2024-10-03 05:05:19,597 - ERROR - Command error: 
2024-10-03 05:06:42,514 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration', '-k', 'test_py.py']' returned non-zero exit status 1.
2024-10-03 05:06:42,515 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 5 items

tests/integration/test_py.py [31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31m                                       [100%][0m

=================================== FAILURES ===================================
[31m[1m____________________________ test_run_normal_script ____________________________[0m

    [94mdef[39;49;00m [92mtest_run_normal_script[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running a normal Python script."""[39;49;00m[90m[39;49;00m
>       result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m

[1m[31mtests/integration/test_py.py[0m:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = True, timeout = None, check = True
popenargs = (['py', 'py'],), kwargs = {'stderr': -1, 'stdout': -1, 'text': True}
process = <Popen: returncode: 2 args: ['py', 'py']>, stdout = ''
stderr = 'usage: py [-h] [-p PYTHONPATH] [-t] [-ut] [-it] target\npy: error: the following arguments are required: target\n'
retcode = 2

    [94mdef[39;49;00m [92mrun[39;49;00m(*popenargs,[90m[39;49;00m
            [96minput[39;49;00m=[94mNone[39;49;00m, capture_output=[94mFalse[39;49;00m, timeout=[94mNone[39;49;00m, check=[94mFalse[39;49;00m, **kwargs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Run command with arguments and return a CompletedProcess instance.[39;49;00m
    [33m[39;49;00m
    [33m    The returned instance will have attributes args, returncode, stdout and[39;49;00m
    [33m    stderr. By default, stdout and stderr are not captured, and those attributes[39;49;00m
    [33m    will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them,[39;49;00m
    [33m    or pass capture_output=True to capture both.[39;49;00m
    [33m[39;49;00m
    [33m    If check is True and the exit code was non-zero, it raises a[39;49;00m
    [33m    CalledProcessError. The CalledProcessError object will have the return code[39;49;00m
    [33m    in the returncode attribute, and output & stderr attributes if those streams[39;49;00m
    [33m    were captured.[39;49;00m
    [33m[39;49;00m
    [33m    If timeout is given, and the process takes too long, a TimeoutExpired[39;49;00m
    [33m    exception will be raised.[39;49;00m
    [33m[39;49;00m
    [33m    There is an optional argument "input", allowing you to[39;49;00m
    [33m    pass bytes or a string to the subprocess's stdin.  If you use this argument[39;49;00m
    [33m    you may not also use the Popen constructor's "stdin" argument, as[39;49;00m
    [33m    it will be used internally.[39;49;00m
    [33m[39;49;00m
    [33m    By default, all communication is in bytes, and therefore any "input" should[39;49;00m
    [33m    be bytes, and the stdout and stderr will be bytes. If in text mode, any[39;49;00m
    [33m    "input" should be a string, and stdout and stderr will be strings decoded[39;49;00m
    [33m    according to locale encoding, or by "encoding" if set. Text mode is[39;49;00m
    [33m    triggered by setting any of text, encoding, errors or universal_newlines.[39;49;00m
    [33m[39;49;00m
    [33m    The other arguments are the same as for the Popen constructor.[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96minput[39;49;00m [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdin and input arguments may not both be used.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m capture_output:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mor[39;49;00m kwargs.get([33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdout and stderr arguments may not be used [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                 [33m'[39;49;00m[33mwith capture_output.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                stdout, stderr = process.communicate([96minput[39;49;00m, timeout=timeout)[90m[39;49;00m
            [94mexcept[39;49;00m TimeoutExpired [94mas[39;49;00m exc:[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [94mif[39;49;00m _mswindows:[90m[39;49;00m
                    [90m# Windows accumulates the output in a single blocking[39;49;00m[90m[39;49;00m
                    [90m# read() call run on child threads, with the timeout[39;49;00m[90m[39;49;00m
                    [90m# being done in a join() on those threads.  communicate()[39;49;00m[90m[39;49;00m
                    [90m# _after_ kill() is required to collect that and add it[39;49;00m[90m[39;49;00m
                    [90m# to the exception.[39;49;00m[90m[39;49;00m
                    exc.stdout, exc.stderr = process.communicate()[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# POSIX _communicate already populated the output so[39;49;00m[90m[39;49;00m
                    [90m# far into the TimeoutExpired exception.[39;49;00m[90m[39;49;00m
                    process.wait()[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            [94mexcept[39;49;00m:  [90m# Including KeyboardInterrupt, communicate handled that.[39;49;00m[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [90m# We don't call process.wait() as .__exit__ does that for us.[39;49;00m[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            retcode = process.poll()[90m[39;49;00m
            [94mif[39;49;00m check [95mand[39;49;00m retcode:[90m[39;49;00m
>               [94mraise[39;49;00m CalledProcessError(retcode, process.args,[90m[39;49;00m
                                         output=stdout, stderr=stderr)[90m[39;49;00m
[1m[31mE               subprocess.CalledProcessError: Command '['py', 'py']' returned non-zero exit status 2.[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:571: CalledProcessError
[31m[1m_____________________________ test_run_unit_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_unit_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running unit tests."""[39;49;00m[90m[39;49;00m
>       result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-ut[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m

[1m[31mtests/integration/test_py.py[0m:12: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = True, timeout = None, check = True
popenargs = (['py', '-ut', 'py'],)
kwargs = {'stderr': -1, 'stdout': -1, 'text': True}
process = <Popen: returncode: 2 args: ['py', '-ut', 'py']>, stdout = ''
stderr = 'usage: py [-h] [-p PYTHONPATH] [-t] [-ut] [-it] target\npy: error: the following arguments are required: target\n'
retcode = 2

    [94mdef[39;49;00m [92mrun[39;49;00m(*popenargs,[90m[39;49;00m
            [96minput[39;49;00m=[94mNone[39;49;00m, capture_output=[94mFalse[39;49;00m, timeout=[94mNone[39;49;00m, check=[94mFalse[39;49;00m, **kwargs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Run command with arguments and return a CompletedProcess instance.[39;49;00m
    [33m[39;49;00m
    [33m    The returned instance will have attributes args, returncode, stdout and[39;49;00m
    [33m    stderr. By default, stdout and stderr are not captured, and those attributes[39;49;00m
    [33m    will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them,[39;49;00m
    [33m    or pass capture_output=True to capture both.[39;49;00m
    [33m[39;49;00m
    [33m    If check is True and the exit code was non-zero, it raises a[39;49;00m
    [33m    CalledProcessError. The CalledProcessError object will have the return code[39;49;00m
    [33m    in the returncode attribute, and output & stderr attributes if those streams[39;49;00m
    [33m    were captured.[39;49;00m
    [33m[39;49;00m
    [33m    If timeout is given, and the process takes too long, a TimeoutExpired[39;49;00m
    [33m    exception will be raised.[39;49;00m
    [33m[39;49;00m
    [33m    There is an optional argument "input", allowing you to[39;49;00m
    [33m    pass bytes or a string to the subprocess's stdin.  If you use this argument[39;49;00m
    [33m    you may not also use the Popen constructor's "stdin" argument, as[39;49;00m
    [33m    it will be used internally.[39;49;00m
    [33m[39;49;00m
    [33m    By default, all communication is in bytes, and therefore any "input" should[39;49;00m
    [33m    be bytes, and the stdout and stderr will be bytes. If in text mode, any[39;49;00m
    [33m    "input" should be a string, and stdout and stderr will be strings decoded[39;49;00m
    [33m    according to locale encoding, or by "encoding" if set. Text mode is[39;49;00m
    [33m    triggered by setting any of text, encoding, errors or universal_newlines.[39;49;00m
    [33m[39;49;00m
    [33m    The other arguments are the same as for the Popen constructor.[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96minput[39;49;00m [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdin and input arguments may not both be used.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m capture_output:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mor[39;49;00m kwargs.get([33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdout and stderr arguments may not be used [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                 [33m'[39;49;00m[33mwith capture_output.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                stdout, stderr = process.communicate([96minput[39;49;00m, timeout=timeout)[90m[39;49;00m
            [94mexcept[39;49;00m TimeoutExpired [94mas[39;49;00m exc:[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [94mif[39;49;00m _mswindows:[90m[39;49;00m
                    [90m# Windows accumulates the output in a single blocking[39;49;00m[90m[39;49;00m
                    [90m# read() call run on child threads, with the timeout[39;49;00m[90m[39;49;00m
                    [90m# being done in a join() on those threads.  communicate()[39;49;00m[90m[39;49;00m
                    [90m# _after_ kill() is required to collect that and add it[39;49;00m[90m[39;49;00m
                    [90m# to the exception.[39;49;00m[90m[39;49;00m
                    exc.stdout, exc.stderr = process.communicate()[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# POSIX _communicate already populated the output so[39;49;00m[90m[39;49;00m
                    [90m# far into the TimeoutExpired exception.[39;49;00m[90m[39;49;00m
                    process.wait()[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            [94mexcept[39;49;00m:  [90m# Including KeyboardInterrupt, communicate handled that.[39;49;00m[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [90m# We don't call process.wait() as .__exit__ does that for us.[39;49;00m[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            retcode = process.poll()[90m[39;49;00m
            [94mif[39;49;00m check [95mand[39;49;00m retcode:[90m[39;49;00m
>               [94mraise[39;49;00m CalledProcessError(retcode, process.args,[90m[39;49;00m
                                         output=stdout, stderr=stderr)[90m[39;49;00m
[1m[31mE               subprocess.CalledProcessError: Command '['py', '-ut', 'py']' returned non-zero exit status 2.[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:571: CalledProcessError
[31m[1m__________________________ test_run_integration_tests __________________________[0m

    [94mdef[39;49;00m [92mtest_run_integration_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running integration tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-it[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py_command.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       assert 'test_py_command.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-it', 'py'], returncode=0, stdout='', stderr='usage: py [-h] [-p PYTHONPATH] [-t] [-ut] ...) % args)\n  File "/usr/lib/python3.12/argparse.py", line 2664, in exit\n    _sys.exit(status)\nSystemExit: 2\n>>> \n').stdout[0m

[1m[31mtests/integration/test_py.py[0m:18: AssertionError
[31m[1m______________________________ test_run_all_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_all_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running all tests."""[39;49;00m[90m[39;49;00m
>       result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-t[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m

[1m[31mtests/integration/test_py.py[0m:22: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = True, timeout = None, check = True
popenargs = (['py', '-t', 'py'],)
kwargs = {'stderr': -1, 'stdout': -1, 'text': True}
process = <Popen: returncode: 2 args: ['py', '-t', 'py']>, stdout = ''
stderr = 'usage: py [-h] [-p PYTHONPATH] [-t] [-ut] [-it] target\npy: error: the following arguments are required: target\n'
retcode = 2

    [94mdef[39;49;00m [92mrun[39;49;00m(*popenargs,[90m[39;49;00m
            [96minput[39;49;00m=[94mNone[39;49;00m, capture_output=[94mFalse[39;49;00m, timeout=[94mNone[39;49;00m, check=[94mFalse[39;49;00m, **kwargs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Run command with arguments and return a CompletedProcess instance.[39;49;00m
    [33m[39;49;00m
    [33m    The returned instance will have attributes args, returncode, stdout and[39;49;00m
    [33m    stderr. By default, stdout and stderr are not captured, and those attributes[39;49;00m
    [33m    will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them,[39;49;00m
    [33m    or pass capture_output=True to capture both.[39;49;00m
    [33m[39;49;00m
    [33m    If check is True and the exit code was non-zero, it raises a[39;49;00m
    [33m    CalledProcessError. The CalledProcessError object will have the return code[39;49;00m
    [33m    in the returncode attribute, and output & stderr attributes if those streams[39;49;00m
    [33m    were captured.[39;49;00m
    [33m[39;49;00m
    [33m    If timeout is given, and the process takes too long, a TimeoutExpired[39;49;00m
    [33m    exception will be raised.[39;49;00m
    [33m[39;49;00m
    [33m    There is an optional argument "input", allowing you to[39;49;00m
    [33m    pass bytes or a string to the subprocess's stdin.  If you use this argument[39;49;00m
    [33m    you may not also use the Popen constructor's "stdin" argument, as[39;49;00m
    [33m    it will be used internally.[39;49;00m
    [33m[39;49;00m
    [33m    By default, all communication is in bytes, and therefore any "input" should[39;49;00m
    [33m    be bytes, and the stdout and stderr will be bytes. If in text mode, any[39;49;00m
    [33m    "input" should be a string, and stdout and stderr will be strings decoded[39;49;00m
    [33m    according to locale encoding, or by "encoding" if set. Text mode is[39;49;00m
    [33m    triggered by setting any of text, encoding, errors or universal_newlines.[39;49;00m
    [33m[39;49;00m
    [33m    The other arguments are the same as for the Popen constructor.[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96minput[39;49;00m [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdin and input arguments may not both be used.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdin[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m capture_output:[90m[39;49;00m
            [94mif[39;49;00m kwargs.get([33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mor[39;49;00m kwargs.get([33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m) [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m'[39;49;00m[33mstdout and stderr arguments may not be used [39;49;00m[33m'[39;49;00m[90m[39;49;00m
                                 [33m'[39;49;00m[33mwith capture_output.[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstdout[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
            kwargs[[33m'[39;49;00m[33mstderr[39;49;00m[33m'[39;49;00m] = PIPE[90m[39;49;00m
    [90m[39;49;00m
        [94mwith[39;49;00m Popen(*popenargs, **kwargs) [94mas[39;49;00m process:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                stdout, stderr = process.communicate([96minput[39;49;00m, timeout=timeout)[90m[39;49;00m
            [94mexcept[39;49;00m TimeoutExpired [94mas[39;49;00m exc:[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [94mif[39;49;00m _mswindows:[90m[39;49;00m
                    [90m# Windows accumulates the output in a single blocking[39;49;00m[90m[39;49;00m
                    [90m# read() call run on child threads, with the timeout[39;49;00m[90m[39;49;00m
                    [90m# being done in a join() on those threads.  communicate()[39;49;00m[90m[39;49;00m
                    [90m# _after_ kill() is required to collect that and add it[39;49;00m[90m[39;49;00m
                    [90m# to the exception.[39;49;00m[90m[39;49;00m
                    exc.stdout, exc.stderr = process.communicate()[90m[39;49;00m
                [94melse[39;49;00m:[90m[39;49;00m
                    [90m# POSIX _communicate already populated the output so[39;49;00m[90m[39;49;00m
                    [90m# far into the TimeoutExpired exception.[39;49;00m[90m[39;49;00m
                    process.wait()[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            [94mexcept[39;49;00m:  [90m# Including KeyboardInterrupt, communicate handled that.[39;49;00m[90m[39;49;00m
                process.kill()[90m[39;49;00m
                [90m# We don't call process.wait() as .__exit__ does that for us.[39;49;00m[90m[39;49;00m
                [94mraise[39;49;00m[90m[39;49;00m
            retcode = process.poll()[90m[39;49;00m
            [94mif[39;49;00m check [95mand[39;49;00m retcode:[90m[39;49;00m
>               [94mraise[39;49;00m CalledProcessError(retcode, process.args,[90m[39;49;00m
                                         output=stdout, stderr=stderr)[90m[39;49;00m
[1m[31mE               subprocess.CalledProcessError: Command '['py', '-t', 'py']' returned non-zero exit status 2.[0m

[1m[31m/usr/lib/python3.12/subprocess.py[0m:571: CalledProcessError
[31m[1m___________________ test_run_script_with_no_executable_code ____________________[0m

    [94mdef[39;49;00m [92mtest_run_script_with_no_executable_code[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running a script with no executable code."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m"[39;49;00m], check=[94mFalse[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mError: The specified target [39;49;00m[33m'[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m'[39;49;00m[33m does not contain any executable code.[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stderr[90m[39;49;00m
[1m[31mE       assert "Error: The specified target 'misc/system_instructions.md' does not contain any executable code." in '  File "/root/envy/misc/system_instructions.md", line 39\n    When you\'re ready to commit your changes, use the `com...ted changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n'[0m
[1m[31mE        +  where '  File "/root/envy/misc/system_instructions.md", line 39\n    When you\'re ready to commit your changes, use the `com...ted changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n' = CompletedProcess(args=['py', 'misc/system_instructions.md'], returncode=1, stdout='', stderr='  File "/root/envy/misc/...ed changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n').stderr[0m

[1m[31mtests/integration/test_py.py[0m:28: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_normal_script[0m - subprocess.CalledProcessError: Command '['py', 'py']' returned non-zero exi...
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_unit_tests[0m - subprocess.CalledProcessError: Command '['py', '-ut', 'py']' returned non-z...
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_integration_tests[0m - assert 'test_py_command.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_all_tests[0m - subprocess.CalledProcessError: Command '['py', '-t', 'py']' returned non-ze...
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_script_with_no_executable_code[0m - assert "Error: The specified target 'misc/system_instructions.md' does not ...
[31m============================== [31m[1m5 failed[0m[31m in 2.89s[0m[31m ===============================[0m

2024-10-03 05:06:42,516 - ERROR - Command error: 
2024-10-03 05:16:11,894 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration', '-k', 'test_py.py']' returned non-zero exit status 1.
2024-10-03 05:16:11,895 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 5 items

tests/integration/test_py.py [31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31m                                       [100%][0m

=================================== FAILURES ===================================
[31m[1m____________________________ test_run_normal_script ____________________________[0m

    [94mdef[39;49;00m [92mtest_run_normal_script[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running a normal Python script."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mSuccessfully executed command[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       AssertionError: assert 'Successfully executed command' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py'], returncode=0, stdout='', stderr='').stdout[0m

[1m[31mtests/integration/test_py.py[0m:8: AssertionError
[31m[1m_____________________________ test_run_unit_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_unit_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running unit tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-ut[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py_command.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       AssertionError: assert 'test_py_command.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-ut'], returncode=0, stdout='', stderr='').stdout[0m

[1m[31mtests/integration/test_py.py[0m:13: AssertionError
[31m[1m__________________________ test_run_integration_tests __________________________[0m

    [94mdef[39;49;00m [92mtest_run_integration_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running integration tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-it[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py_command.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       assert 'test_py_command.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-it'], returncode=0, stdout='', stderr='Python 3.12.3 (main, Sep 11 2024, 14:17:37) [GCC 13.2.0] on linux\nType "help", "copyright", "credits" or "license" for more information.\n>>> \n').stdout[0m

[1m[31mtests/integration/test_py.py[0m:18: AssertionError
[31m[1m______________________________ test_run_all_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_all_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running all tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-t[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py_command.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       AssertionError: assert 'test_py_command.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-t'], returncode=0, stdout='', stderr='').stdout[0m

[1m[31mtests/integration/test_py.py[0m:23: AssertionError
[31m[1m___________________ test_run_script_with_no_executable_code ____________________[0m

    [94mdef[39;49;00m [92mtest_run_script_with_no_executable_code[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running a script with no executable code."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m"[39;49;00m], check=[94mFalse[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mError: The specified target [39;49;00m[33m'[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m'[39;49;00m[33m does not contain any executable code.[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stderr[90m[39;49;00m
[1m[31mE       assert "Error: The specified target 'misc/system_instructions.md' does not contain any executable code." in '  File "/root/envy/misc/system_instructions.md", line 39\n    When you\'re ready to commit your changes, use the `com...ted changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n'[0m
[1m[31mE        +  where '  File "/root/envy/misc/system_instructions.md", line 39\n    When you\'re ready to commit your changes, use the `com...ted changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n' = CompletedProcess(args=['py', 'misc/system_instructions.md'], returncode=1, stdout='', stderr='  File "/root/envy/misc/...ed changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n').stderr[0m

[1m[31mtests/integration/test_py.py[0m:28: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_normal_script[0m - AssertionError: assert 'Successfully executed command' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_unit_tests[0m - AssertionError: assert 'test_py_command.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_integration_tests[0m - assert 'test_py_command.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_all_tests[0m - AssertionError: assert 'test_py_command.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_script_with_no_executable_code[0m - assert "Error: The specified target 'misc/system_instructions.md' does not ...
[31m============================== [31m[1m5 failed[0m[31m in 1.99s[0m[31m ===============================[0m

2024-10-03 05:16:11,895 - ERROR - Command error: 
2024-10-03 05:19:23,634 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration', '-k', 'test_py.py']' returned non-zero exit status 1.
2024-10-03 05:19:23,634 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 5 items

tests/integration/test_py.py [31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31m                                       [100%][0m

=================================== FAILURES ===================================
[31m[1m____________________________ test_run_normal_script ____________________________[0m

    [94mdef[39;49;00m [92mtest_run_normal_script[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running a normal Python script."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mSuccessfully executed command[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       AssertionError: assert 'Successfully executed command' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py'], returncode=0, stdout='', stderr='').stdout[0m

[1m[31mtests/integration/test_py.py[0m:8: AssertionError
[31m[1m_____________________________ test_run_unit_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_unit_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running unit tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-ut[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py_command.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       AssertionError: assert 'test_py_command.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-ut'], returncode=0, stdout='', stderr='').stdout[0m

[1m[31mtests/integration/test_py.py[0m:13: AssertionError
[31m[1m__________________________ test_run_integration_tests __________________________[0m

    [94mdef[39;49;00m [92mtest_run_integration_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running integration tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-it[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py_command.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       assert 'test_py_command.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-it'], returncode=0, stdout='', stderr='Python 3.12.3 (main, Sep 11 2024, 14:17:37) [GCC 13.2.0] on linux\nType "help", "copyright", "credits" or "license" for more information.\n>>> \n').stdout[0m

[1m[31mtests/integration/test_py.py[0m:18: AssertionError
[31m[1m______________________________ test_run_all_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_all_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running all tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-t[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py_command.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       AssertionError: assert 'test_py_command.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-t'], returncode=0, stdout='', stderr='').stdout[0m

[1m[31mtests/integration/test_py.py[0m:23: AssertionError
[31m[1m___________________ test_run_script_with_no_executable_code ____________________[0m

    [94mdef[39;49;00m [92mtest_run_script_with_no_executable_code[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running a script with no executable code."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m"[39;49;00m], check=[94mFalse[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mError: The specified target [39;49;00m[33m'[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m'[39;49;00m[33m does not contain any executable code.[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stderr[90m[39;49;00m
[1m[31mE       assert "Error: The specified target 'misc/system_instructions.md' does not contain any executable code." in '  File "/root/envy/misc/system_instructions.md", line 39\n    When you\'re ready to commit your changes, use the `com...ted changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n'[0m
[1m[31mE        +  where '  File "/root/envy/misc/system_instructions.md", line 39\n    When you\'re ready to commit your changes, use the `com...ted changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n' = CompletedProcess(args=['py', 'misc/system_instructions.md'], returncode=1, stdout='', stderr='  File "/root/envy/misc/...ed changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n').stderr[0m

[1m[31mtests/integration/test_py.py[0m:28: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_normal_script[0m - AssertionError: assert 'Successfully executed command' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_unit_tests[0m - AssertionError: assert 'test_py_command.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_integration_tests[0m - assert 'test_py_command.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_all_tests[0m - AssertionError: assert 'test_py_command.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_script_with_no_executable_code[0m - assert "Error: The specified target 'misc/system_instructions.md' does not ...
[31m============================== [31m[1m5 failed[0m[31m in 1.27s[0m[31m ===============================[0m

2024-10-03 05:19:23,634 - ERROR - Command error: 
2024-10-03 05:20:09,715 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration', '-k', 'test_py.py']' returned non-zero exit status 1.
2024-10-03 05:20:09,716 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 5 items

tests/integration/test_py.py [31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31m                                       [100%][0m

=================================== FAILURES ===================================
[31m[1m____________________________ test_run_normal_script ____________________________[0m

    [94mdef[39;49;00m [92mtest_run_normal_script[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running a normal Python script."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mSuccessfully executed command[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       AssertionError: assert 'Successfully executed command' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py'], returncode=0, stdout='', stderr='').stdout[0m

[1m[31mtests/integration/test_py.py[0m:8: AssertionError
[31m[1m_____________________________ test_run_unit_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_unit_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running unit tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-ut[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py_command.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       AssertionError: assert 'test_py_command.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-ut'], returncode=0, stdout='', stderr='').stdout[0m

[1m[31mtests/integration/test_py.py[0m:13: AssertionError
[31m[1m__________________________ test_run_integration_tests __________________________[0m

    [94mdef[39;49;00m [92mtest_run_integration_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running integration tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-it[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py_command.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       assert 'test_py_command.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-it'], returncode=0, stdout='', stderr='Python 3.12.3 (main, Sep 11 2024, 14:17:37) [GCC 13.2.0] on linux\nType "help", "copyright", "credits" or "license" for more information.\n>>> \n').stdout[0m

[1m[31mtests/integration/test_py.py[0m:18: AssertionError
[31m[1m______________________________ test_run_all_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_all_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running all tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-t[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py_command.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       AssertionError: assert 'test_py_command.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-t'], returncode=0, stdout='', stderr='').stdout[0m

[1m[31mtests/integration/test_py.py[0m:23: AssertionError
[31m[1m___________________ test_run_script_with_no_executable_code ____________________[0m

    [94mdef[39;49;00m [92mtest_run_script_with_no_executable_code[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running a script with no executable code."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m"[39;49;00m], check=[94mFalse[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mError: The specified target [39;49;00m[33m'[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m'[39;49;00m[33m does not contain any executable code.[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stderr[90m[39;49;00m
[1m[31mE       assert "Error: The specified target 'misc/system_instructions.md' does not contain any executable code." in '  File "/root/envy/misc/system_instructions.md", line 39\n    When you\'re ready to commit your changes, use the `com...ted changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n'[0m
[1m[31mE        +  where '  File "/root/envy/misc/system_instructions.md", line 39\n    When you\'re ready to commit your changes, use the `com...ted changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n' = CompletedProcess(args=['py', 'misc/system_instructions.md'], returncode=1, stdout='', stderr='  File "/root/envy/misc/...ed changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n').stderr[0m

[1m[31mtests/integration/test_py.py[0m:28: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_normal_script[0m - AssertionError: assert 'Successfully executed command' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_unit_tests[0m - AssertionError: assert 'test_py_command.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_integration_tests[0m - assert 'test_py_command.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_all_tests[0m - AssertionError: assert 'test_py_command.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_script_with_no_executable_code[0m - assert "Error: The specified target 'misc/system_instructions.md' does not ...
[31m============================== [31m[1m5 failed[0m[31m in 0.92s[0m[31m ===============================[0m

2024-10-03 05:20:09,716 - ERROR - Command error: 
2024-10-03 05:23:51,480 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration', '-k', 'test_py.py']' returned non-zero exit status 1.
2024-10-03 05:23:51,483 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 5 items

tests/integration/test_py.py [31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31m                                       [100%][0m

=================================== FAILURES ===================================
[31m[1m____________________________ test_run_normal_script ____________________________[0m

    [94mdef[39;49;00m [92mtest_run_normal_script[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running a normal Python script."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mSuccessfully executed command[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       AssertionError: assert 'Successfully executed command' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py'], returncode=0, stdout='', stderr='').stdout[0m

[1m[31mtests/integration/test_py.py[0m:7: AssertionError
[31m[1m_____________________________ test_run_unit_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_unit_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running unit tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-ut[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py_command.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       AssertionError: assert 'test_py_command.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-ut'], returncode=0, stdout='', stderr='').stdout[0m

[1m[31mtests/integration/test_py.py[0m:12: AssertionError
[31m[1m__________________________ test_run_integration_tests __________________________[0m

    [94mdef[39;49;00m [92mtest_run_integration_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running integration tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-it[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py_command.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       assert 'test_py_command.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-it'], returncode=0, stdout='', stderr='Python 3.12.3 (main, Sep 11 2024, 14:17:37) [GCC 13.2.0] on linux\nType "help", "copyright", "credits" or "license" for more information.\n>>> \n').stdout[0m

[1m[31mtests/integration/test_py.py[0m:17: AssertionError
[31m[1m______________________________ test_run_all_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_all_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running all tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-t[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py_command.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       AssertionError: assert 'test_py_command.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-t'], returncode=0, stdout='', stderr='').stdout[0m

[1m[31mtests/integration/test_py.py[0m:22: AssertionError
[31m[1m___________________ test_run_script_with_no_executable_code ____________________[0m

    [94mdef[39;49;00m [92mtest_run_script_with_no_executable_code[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running a script with no executable code."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m"[39;49;00m], check=[94mFalse[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mError: The specified target [39;49;00m[33m'[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m'[39;49;00m[33m does not contain any executable code.[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stderr[90m[39;49;00m
[1m[31mE       assert "Error: The specified target 'misc/system_instructions.md' does not contain any executable code." in '  File "/root/envy/misc/system_instructions.md", line 39\n    When you\'re ready to commit your changes, use the `com...ted changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n'[0m
[1m[31mE        +  where '  File "/root/envy/misc/system_instructions.md", line 39\n    When you\'re ready to commit your changes, use the `com...ted changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n' = CompletedProcess(args=['py', 'misc/system_instructions.md'], returncode=1, stdout='', stderr='  File "/root/envy/misc/...ed changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n').stderr[0m

[1m[31mtests/integration/test_py.py[0m:27: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_normal_script[0m - AssertionError: assert 'Successfully executed command' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_unit_tests[0m - AssertionError: assert 'test_py_command.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_integration_tests[0m - assert 'test_py_command.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_all_tests[0m - AssertionError: assert 'test_py_command.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_script_with_no_executable_code[0m - assert "Error: The specified target 'misc/system_instructions.md' does not ...
[31m============================== [31m[1m5 failed[0m[31m in 2.23s[0m[31m ===============================[0m

2024-10-03 05:23:51,485 - ERROR - Command error: 
2024-10-03 05:27:30,624 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration', '-k', 'test_py.py']' returned non-zero exit status 1.
2024-10-03 05:27:30,625 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 5 items

tests/integration/test_py.py [31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31m                                       [100%][0m

=================================== FAILURES ===================================
[31m[1m____________________________ test_run_normal_script ____________________________[0m

    [94mdef[39;49;00m [92mtest_run_normal_script[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running a normal Python script."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mSuccessfully executed command[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       AssertionError: assert 'Successfully executed command' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py'], returncode=0, stdout='', stderr='').stdout[0m

[1m[31mtests/integration/test_py.py[0m:7: AssertionError
[31m[1m_____________________________ test_run_unit_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_unit_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running unit tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-ut[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       AssertionError: assert 'test_py.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-ut'], returncode=0, stdout='', stderr='').stdout[0m

[1m[31mtests/integration/test_py.py[0m:12: AssertionError
[31m[1m__________________________ test_run_integration_tests __________________________[0m

    [94mdef[39;49;00m [92mtest_run_integration_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running integration tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-it[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       assert 'test_py.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-it'], returncode=0, stdout='', stderr='Python 3.12.3 (main, Sep 11 2024, 14:17:37) [GCC 13.2.0] on linux\nType "help", "copyright", "credits" or "license" for more information.\n>>> \n').stdout[0m

[1m[31mtests/integration/test_py.py[0m:17: AssertionError
[31m[1m______________________________ test_run_all_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_all_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running all tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-t[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       AssertionError: assert 'test_py.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-t'], returncode=0, stdout='', stderr='').stdout[0m

[1m[31mtests/integration/test_py.py[0m:22: AssertionError
[31m[1m___________________ test_run_script_with_no_executable_code ____________________[0m

    [94mdef[39;49;00m [92mtest_run_script_with_no_executable_code[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running a script with no executable code."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m"[39;49;00m], check=[94mFalse[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mError: The specified target [39;49;00m[33m'[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m'[39;49;00m[33m does not contain any executable code.[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stderr[90m[39;49;00m
[1m[31mE       assert "Error: The specified target 'misc/system_instructions.md' does not contain any executable code." in '  File "/root/envy/misc/system_instructions.md", line 39\n    When you\'re ready to commit your changes, use the `com...ted changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n'[0m
[1m[31mE        +  where '  File "/root/envy/misc/system_instructions.md", line 39\n    When you\'re ready to commit your changes, use the `com...ted changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n' = CompletedProcess(args=['py', 'misc/system_instructions.md'], returncode=1, stdout='', stderr='  File "/root/envy/misc/...ed changes to the remote repository.\n            ^\nSyntaxError: unterminated string literal (detected at line 39)\n').stderr[0m

[1m[31mtests/integration/test_py.py[0m:27: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_normal_script[0m - AssertionError: assert 'Successfully executed command' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_unit_tests[0m - AssertionError: assert 'test_py.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_integration_tests[0m - assert 'test_py.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_all_tests[0m - AssertionError: assert 'test_py.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_script_with_no_executable_code[0m - assert "Error: The specified target 'misc/system_instructions.md' does not ...
[31m============================== [31m[1m5 failed[0m[31m in 1.05s[0m[31m ===============================[0m

2024-10-03 05:27:30,625 - ERROR - Command error: 
2024-10-03 05:37:03,732 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration', '-k', 'test_py.py']' returned non-zero exit status 1.
2024-10-03 05:37:03,733 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 5 items

tests/integration/test_py.py [32m.[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31m                                       [100%][0m

=================================== FAILURES ===================================
[31m[1m_____________________________ test_run_unit_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_unit_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running unit tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-ut[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       AssertionError: assert 'test_py.py' in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '-ut'], returncode=0, stdout='', stderr='').stdout[0m

[1m[31mtests/integration/test_py.py[0m:12: AssertionError
[31m[1m__________________________ test_run_integration_tests __________________________[0m

    [94mdef[39;49;00m [92mtest_run_integration_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running integration tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m/root/envy/tests/generic/generic_script.py[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-it[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       AssertionError: assert 'test_py.py' in 'Successfully executed command\n'[0m
[1m[31mE        +  where 'Successfully executed command\n' = CompletedProcess(args=['py', '/root/envy/tests/generic/generic_script.py', '-it'], returncode=0, stdout='Successfully executed command\n', stderr='').stdout[0m

[1m[31mtests/integration/test_py.py[0m:17: AssertionError
[31m[1m______________________________ test_run_all_tests ______________________________[0m

    [94mdef[39;49;00m [92mtest_run_all_tests[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running all tests."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m/root/envy/tests/generic/generic_script.py[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m-t[39;49;00m[33m"[39;49;00m], check=[94mTrue[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mtest_py.py[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stdout[90m[39;49;00m
[1m[31mE       AssertionError: assert 'test_py.py' in 'Successfully executed command\n'[0m
[1m[31mE        +  where 'Successfully executed command\n' = CompletedProcess(args=['py', '/root/envy/tests/generic/generic_script.py', '-t'], returncode=0, stdout='Successfully executed command\n', stderr='').stdout[0m

[1m[31mtests/integration/test_py.py[0m:22: AssertionError
[31m[1m___________________ test_run_script_with_no_executable_code ____________________[0m

    [94mdef[39;49;00m [92mtest_run_script_with_no_executable_code[39;49;00m():[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test running a script with no executable code."""[39;49;00m[90m[39;49;00m
        result = subprocess.run([[33m"[39;49;00m[33mpy[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m/root/envy/tests/generic/generic_script.py[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m"[39;49;00m], check=[94mFalse[39;49;00m, capture_output=[94mTrue[39;49;00m, text=[94mTrue[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mError: The specified target [39;49;00m[33m'[39;49;00m[33mmisc/system_instructions.md[39;49;00m[33m'[39;49;00m[33m does not contain any executable code.[39;49;00m[33m"[39;49;00m [95min[39;49;00m result.stderr[90m[39;49;00m
[1m[31mE       assert "Error: The specified target 'misc/system_instructions.md' does not contain any executable code." in ''[0m
[1m[31mE        +  where '' = CompletedProcess(args=['py', '/root/envy/tests/generic/generic_script.py', 'misc/system_instructions.md'], returncode=0, stdout='Successfully executed command\n', stderr='').stderr[0m

[1m[31mtests/integration/test_py.py[0m:27: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_unit_tests[0m - AssertionError: assert 'test_py.py' in ''
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_integration_tests[0m - AssertionError: assert 'test_py.py' in 'Successfully executed command\n'
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_all_tests[0m - AssertionError: assert 'test_py.py' in 'Successfully executed command\n'
[31mFAILED[0m tests/integration/test_py.py::[1mtest_run_script_with_no_executable_code[0m - assert "Error: The specified target 'misc/system_instructions.md' does not ...
[31m========================= [31m[1m4 failed[0m, [32m1 passed[0m[31m in 1.18s[0m[31m ==========================[0m

2024-10-03 05:37:03,733 - ERROR - Command error: 
2024-10-03 15:51:54,170 - INFO - Successfully executed command: py test_py.py
2024-10-03 15:51:54,171 - INFO - PYTHONPATH set to default: envy
2024-10-03 15:56:03,380 - INFO - Successfully executed command: pytest --color=yes /root/envy/tests/integration -k test_py.py
2024-10-03 15:56:03,381 - INFO - PYTHONPATH set to default: envy
2024-10-03 20:04:37,535 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests', '-k', '*.py']' returned non-zero exit status 4.
2024-10-03 20:04:37,535 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error

==================================== ERRORS ====================================
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py.py
[31m=============================== [31m[1m1 error[0m[31m in 0.18s[0m[31m ===============================[0m

2024-10-03 20:04:37,535 - ERROR - Command error: ERROR: Wrong expression passed to '-k': *.py: at column 1: unexpected character "*"


2024-10-03 20:05:44,884 - ERROR - Error running command: Command '['pytest', '--color=yes', 'tests']' returned non-zero exit status 2.
2024-10-03 20:05:44,884 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 11 items / 1 error

==================================== ERRORS ====================================
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /root/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /root/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m tests/unit/test_py.py
!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!
[31m=============================== [31m[1m1 error[0m[31m in 0.68s[0m[31m ===============================[0m

2024-10-03 20:05:44,884 - ERROR - Command error: 
2024-10-03 20:07:00,453 - INFO - Successfully executed command: pytest --color=yes /root/envy/tests/unit
2024-10-03 20:07:03,123 - ERROR - Error running integration tests: Command '['pytest', '--color=yes', '/root/envy/tests/integration']' returned non-zero exit status 1.
2024-10-03 20:07:03,123 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 5 items

tests/integration/test_py.py [32m.[0m[32m.[0m[32m.[0m[31mF[0m[32m.[0m[31m                                       [100%][0m

=================================== FAILURES ===================================
[31m[1m_______ test_integration_py_command_runs_integration_tests_for_directory _______[0m

    [94mdef[39;49;00m [92mtest_integration_py_command_runs_integration_tests_for_directory[39;49;00m():[90m[39;49;00m
        script_content = [33m"[39;49;00m[33mprint([39;49;00m[33m'[39;49;00m[33mHello from integration test![39;49;00m[33m'[39;49;00m[33m)[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m [96mopen[39;49;00m([33m"[39;49;00m[33mintegration_test_script.py[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mw[39;49;00m[33m"[39;49;00m) [94mas[39;49;00m f:[90m[39;49;00m
            f.write(script_content)[90m[39;49;00m
        output = run_integration_test([[33m"[39;49;00m[33m-it[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mtests/integration[39;49;00m[33m"[39;49;00m], [33m"[39;49;00m[33menvy[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mHello from integration test![39;49;00m[33m"[39;49;00m [95min[39;49;00m output[90m[39;49;00m
[1m[31mE       AssertionError: assert 'Hello from integration test!' in ''[0m

[1m[31mtests/integration/test_py.py[0m:35: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/integration/test_py.py::[1mtest_integration_py_command_runs_integration_tests_for_directory[0m - AssertionError: assert 'Hello from integration test!' in ''
[31m========================= [31m[1m1 failed[0m, [32m4 passed[0m[31m in 1.24s[0m[31m ==========================[0m

2024-10-03 20:07:03,123 - ERROR - Command error: 
2024-10-03 20:16:26,727 - INFO - Successfully executed command: pytest --color=yes /root/envy/tests/unit
2024-10-03 20:16:29,431 - ERROR - Error running integration tests: Command '['pytest', '--color=yes', '/root/envy/tests/integration']' returned non-zero exit status 1.
2024-10-03 20:16:29,431 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 5 items

tests/integration/test_py.py [32m.[0m[32m.[0m[32m.[0m[31mF[0m[32m.[0m[31m                                       [100%][0m

=================================== FAILURES ===================================
[31m[1m_______ test_integration_py_command_runs_integration_tests_for_directory _______[0m

    [94mdef[39;49;00m [92mtest_integration_py_command_runs_integration_tests_for_directory[39;49;00m():[90m[39;49;00m
        script_content = [33m"[39;49;00m[33mprint([39;49;00m[33m'[39;49;00m[33mHello from integration test![39;49;00m[33m'[39;49;00m[33m)[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m [96mopen[39;49;00m([33m"[39;49;00m[33mintegration_test_script.py[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mw[39;49;00m[33m"[39;49;00m) [94mas[39;49;00m f:[90m[39;49;00m
            f.write(script_content)[90m[39;49;00m
        output = run_integration_test([[33m"[39;49;00m[33m-it[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mtests/integration[39;49;00m[33m"[39;49;00m], [33m"[39;49;00m[33menvy[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mHello from integration test![39;49;00m[33m"[39;49;00m [95min[39;49;00m output[90m[39;49;00m
[1m[31mE       AssertionError: assert 'Hello from integration test!' in ''[0m

[1m[31mtests/integration/test_py.py[0m:35: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/integration/test_py.py::[1mtest_integration_py_command_runs_integration_tests_for_directory[0m - AssertionError: assert 'Hello from integration test!' in ''
[31m========================= [31m[1m1 failed[0m, [32m4 passed[0m[31m in 1.44s[0m[31m ==========================[0m

2024-10-03 20:16:29,431 - ERROR - Command error: 
2024-10-03 20:22:14,978 - INFO - Successfully executed command: pytest --color=yes /root/envy/tests/unit -k test_py.py
2024-10-03 20:22:14,980 - INFO - PYTHONPATH set to default: envy
2024-10-03 20:22:29,038 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration', '-k', 'test_py.py']' returned non-zero exit status 1.
2024-10-03 20:22:29,038 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 5 items

tests/integration/test_py.py [32m.[0m[32m.[0m[32m.[0m[31mF[0m[32m.[0m[31m                                       [100%][0m

=================================== FAILURES ===================================
[31m[1m_______ test_integration_py_command_runs_integration_tests_for_directory _______[0m

    [94mdef[39;49;00m [92mtest_integration_py_command_runs_integration_tests_for_directory[39;49;00m():[90m[39;49;00m
        script_content = [33m"[39;49;00m[33mprint([39;49;00m[33m'[39;49;00m[33mHello from integration test![39;49;00m[33m'[39;49;00m[33m)[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m [96mopen[39;49;00m([33m"[39;49;00m[33mintegration_test_script.py[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mw[39;49;00m[33m"[39;49;00m) [94mas[39;49;00m f:[90m[39;49;00m
            f.write(script_content)[90m[39;49;00m
        output = run_integration_test([[33m"[39;49;00m[33m-it[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mtests/integration[39;49;00m[33m"[39;49;00m], [33m"[39;49;00m[33menvy[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mHello from integration test![39;49;00m[33m"[39;49;00m [95min[39;49;00m output[90m[39;49;00m
[1m[31mE       AssertionError: assert 'Hello from integration test!' in ''[0m

[1m[31mtests/integration/test_py.py[0m:35: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/integration/test_py.py::[1mtest_integration_py_command_runs_integration_tests_for_directory[0m - AssertionError: assert 'Hello from integration test!' in ''
[31m========================= [31m[1m1 failed[0m, [32m4 passed[0m[31m in 1.22s[0m[31m ==========================[0m

2024-10-03 20:22:29,039 - ERROR - Command error: 
2024-10-03 20:29:46,972 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration/tests/integration', '-k', 'test_py.py']' returned non-zero exit status 4.
2024-10-03 20:29:46,972 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 0 items

[33m============================ [33mno tests ran[0m[33m in 0.01s[0m[33m =============================[0m

2024-10-03 20:29:46,973 - ERROR - Command error: ERROR: file or directory not found: /root/envy/tests/integration/tests/integration


2024-10-04 20:01:41,399 - INFO - Successfully executed command: pytest --color=yes /root/envy/tests/unit
2024-10-04 20:01:43,526 - ERROR - Error running integration tests: Command '['pytest', '--color=yes', '/root/envy/tests/integration']' returned non-zero exit status 1.
2024-10-04 20:01:43,527 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 5 items

tests/integration/test_py.py [32m.[0m[32m.[0m[32m.[0m[31mF[0m[32m.[0m[31m                                       [100%][0m

=================================== FAILURES ===================================
[31m[1m_______ test_integration_py_command_runs_integration_tests_for_directory _______[0m

    [94mdef[39;49;00m [92mtest_integration_py_command_runs_integration_tests_for_directory[39;49;00m():[90m[39;49;00m
        script_content = [33m"[39;49;00m[33mprint([39;49;00m[33m'[39;49;00m[33mHello from integration test![39;49;00m[33m'[39;49;00m[33m)[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m [96mopen[39;49;00m([33m"[39;49;00m[33mintegration_test_script.py[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mw[39;49;00m[33m"[39;49;00m) [94mas[39;49;00m f:[90m[39;49;00m
            f.write(script_content)[90m[39;49;00m
        output = run_integration_test([[33m"[39;49;00m[33m-it[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mtests/integration[39;49;00m[33m"[39;49;00m], [33m"[39;49;00m[33menvy[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mHello from integration test![39;49;00m[33m"[39;49;00m [95min[39;49;00m output[90m[39;49;00m
[1m[31mE       AssertionError: assert 'Hello from integration test!' in ''[0m

[1m[31mtests/integration/test_py.py[0m:35: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/integration/test_py.py::[1mtest_integration_py_command_runs_integration_tests_for_directory[0m - AssertionError: assert 'Hello from integration test!' in ''
[31m========================= [31m[1m1 failed[0m, [32m4 passed[0m[31m in 1.08s[0m[31m ==========================[0m

2024-10-04 20:01:43,527 - ERROR - Command error: 
2024-10-04 20:03:16,320 - INFO - Running integration tests in directory: /root/envy/tests/integration/tests/integration
2024-10-04 20:03:17,967 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration/tests/integration', '-k', 'test_py.py']' returned non-zero exit status 4.
2024-10-04 20:03:17,967 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 0 items

[33m============================ [33mno tests ran[0m[33m in 0.02s[0m[33m =============================[0m

2024-10-04 20:03:17,967 - ERROR - Command error: ERROR: file or directory not found: /root/envy/tests/integration/tests/integration


2024-10-04 20:03:45,884 - INFO - Running integration tests in directory: /root/envy/tests/integration/tests/integration
2024-10-04 20:03:46,778 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration/tests/integration', '-k', 'test_py.py']' returned non-zero exit status 4.
2024-10-04 20:03:46,779 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 0 items

[33m============================ [33mno tests ran[0m[33m in 0.01s[0m[33m =============================[0m

2024-10-04 20:03:46,779 - ERROR - Command error: ERROR: file or directory not found: /root/envy/tests/integration/tests/integration


2024-10-04 20:04:05,023 - INFO - Running integration tests in directory: /root/envy/tests/integration/tests/integration
2024-10-04 20:04:06,057 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration/tests/integration', '-k', 'test_py.py']' returned non-zero exit status 4.
2024-10-04 20:04:06,057 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 0 items

[33m============================ [33mno tests ran[0m[33m in 0.02s[0m[33m =============================[0m

2024-10-04 20:04:06,057 - ERROR - Command error: ERROR: file or directory not found: /root/envy/tests/integration/tests/integration


2024-10-04 20:05:05,792 - INFO - Successfully executed command: pytest --color=yes /root/envy/tests/unit
2024-10-04 20:05:09,106 - ERROR - Error running integration tests: Command '['pytest', '--color=yes', '/root/envy/tests/integration']' returned non-zero exit status 1.
2024-10-04 20:05:09,106 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 5 items

tests/integration/test_py.py [32m.[0m[32m.[0m[32m.[0m[31mF[0m[32m.[0m[31m                                       [100%][0m

=================================== FAILURES ===================================
[31m[1m_______ test_integration_py_command_runs_integration_tests_for_directory _______[0m

    [94mdef[39;49;00m [92mtest_integration_py_command_runs_integration_tests_for_directory[39;49;00m():[90m[39;49;00m
        script_content = [33m"[39;49;00m[33mprint([39;49;00m[33m'[39;49;00m[33mHello from integration test![39;49;00m[33m'[39;49;00m[33m)[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m [96mopen[39;49;00m([33m"[39;49;00m[33mintegration_test_script.py[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mw[39;49;00m[33m"[39;49;00m) [94mas[39;49;00m f:[90m[39;49;00m
            f.write(script_content)[90m[39;49;00m
        output = run_integration_test([[33m"[39;49;00m[33m-it[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mtests/integration[39;49;00m[33m"[39;49;00m], [33m"[39;49;00m[33menvy[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mHello from integration test![39;49;00m[33m"[39;49;00m [95min[39;49;00m output[90m[39;49;00m
[1m[31mE       AssertionError: assert 'Hello from integration test!' in ''[0m

[1m[31mtests/integration/test_py.py[0m:35: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/integration/test_py.py::[1mtest_integration_py_command_runs_integration_tests_for_directory[0m - AssertionError: assert 'Hello from integration test!' in ''
[31m========================= [31m[1m1 failed[0m, [32m4 passed[0m[31m in 1.95s[0m[31m ==========================[0m

2024-10-04 20:05:09,106 - ERROR - Command error: 
2024-10-04 20:08:12,342 - INFO - Running integration tests in directory: /root/envy/tests/integration/tests/integration
2024-10-04 20:08:13,459 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration/tests/integration', '-k', 'test_py.py']' returned non-zero exit status 4.
2024-10-04 20:08:13,460 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 0 items

[33m============================ [33mno tests ran[0m[33m in 0.01s[0m[33m =============================[0m

2024-10-04 20:08:13,460 - ERROR - Command error: ERROR: file or directory not found: /root/envy/tests/integration/tests/integration


2024-10-04 20:08:59,694 - INFO - Running integration tests in directory: /root/envy/tests/integration/tests/integration
2024-10-04 20:09:01,042 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration/tests/integration', '-k', 'test_py.py']' returned non-zero exit status 4.
2024-10-04 20:09:01,042 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 0 items

[33m============================ [33mno tests ran[0m[33m in 0.02s[0m[33m =============================[0m

2024-10-04 20:09:01,042 - ERROR - Command error: ERROR: file or directory not found: /root/envy/tests/integration/tests/integration


2024-10-04 20:09:17,159 - INFO - Running integration tests in directory: /root/envy/tests/integration/tests/integration
2024-10-04 20:09:18,258 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration/tests/integration', '-k', 'test_py.py']' returned non-zero exit status 4.
2024-10-04 20:09:18,258 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 0 items

[33m============================ [33mno tests ran[0m[33m in 0.01s[0m[33m =============================[0m

2024-10-04 20:09:18,258 - ERROR - Command error: ERROR: file or directory not found: /root/envy/tests/integration/tests/integration


2024-10-04 20:11:01,478 - INFO - Running integration tests in directory: /root/envy/tests/integration/integration
2024-10-04 20:11:04,075 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration/integration', '-k', 'test_py.py']' returned non-zero exit status 4.
2024-10-04 20:11:04,076 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 0 items

[33m============================ [33mno tests ran[0m[33m in 0.04s[0m[33m =============================[0m

2024-10-04 20:11:04,076 - ERROR - Command error: ERROR: file or directory not found: /root/envy/tests/integration/integration


2024-10-04 20:11:49,162 - INFO - Running integration tests in directory: /root/envy/tests/integration/integration
2024-10-04 20:11:50,427 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration/integration', '-k', 'test_py.py']' returned non-zero exit status 4.
2024-10-04 20:11:50,427 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 0 items

[33m============================ [33mno tests ran[0m[33m in 0.03s[0m[33m =============================[0m

2024-10-04 20:11:50,427 - ERROR - Command error: ERROR: file or directory not found: /root/envy/tests/integration/integration


2024-10-04 20:12:03,523 - INFO - Running integration tests in directory: /root/envy/tests/integration
2024-10-04 20:12:07,746 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration', '-k', 'integration']' returned non-zero exit status 1.
2024-10-04 20:12:07,746 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 5 items

tests/integration/test_py.py [32m.[0m[32m.[0m[32m.[0m[31mF[0m[32m.[0m[31m                                       [100%][0m

=================================== FAILURES ===================================
[31m[1m_______ test_integration_py_command_runs_integration_tests_for_directory _______[0m

    [94mdef[39;49;00m [92mtest_integration_py_command_runs_integration_tests_for_directory[39;49;00m():[90m[39;49;00m
        script_content = [33m"[39;49;00m[33mprint([39;49;00m[33m'[39;49;00m[33mHello from integration test![39;49;00m[33m'[39;49;00m[33m)[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m [96mopen[39;49;00m([33m"[39;49;00m[33mintegration_test_script.py[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mw[39;49;00m[33m"[39;49;00m) [94mas[39;49;00m f:[90m[39;49;00m
            f.write(script_content)[90m[39;49;00m
        output = run_integration_test([[33m"[39;49;00m[33m-it[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mtests/integration[39;49;00m[33m"[39;49;00m], [33m"[39;49;00m[33menvy[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m [33m"[39;49;00m[33mHello from integration test![39;49;00m[33m"[39;49;00m [95min[39;49;00m output[90m[39;49;00m
[1m[31mE       AssertionError: assert 'Hello from integration test!' in ''[0m

[1m[31mtests/integration/test_py.py[0m:35: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/integration/test_py.py::[1mtest_integration_py_command_runs_integration_tests_for_directory[0m - AssertionError: assert 'Hello from integration test!' in ''
[31m========================= [31m[1m1 failed[0m, [32m4 passed[0m[31m in 2.79s[0m[31m ==========================[0m

2024-10-04 20:12:07,746 - ERROR - Command error: 
2024-10-04 20:13:49,746 - INFO - Running integration tests in directory: /root/envy/tests/integration/integration
2024-10-04 20:13:50,926 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/tests/integration/integration', '-k', 'test_py.py']' returned non-zero exit status 4.
2024-10-04 20:13:50,926 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 0 items

[33m============================ [33mno tests ran[0m[33m in 0.02s[0m[33m =============================[0m

2024-10-04 20:13:50,926 - ERROR - Command error: ERROR: file or directory not found: /root/envy/tests/integration/integration


2024-10-04 23:03:28,511 - ERROR - Error running script: Command '['py', 'main.py']' returned non-zero exit status 1.
2024-10-04 23:03:28,512 - ERROR - Command output: 
2024-10-04 23:03:28,513 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/ai_components/main.py", line 1, in <module>
    from ai_components.neural_network import NeuralNetwork
ModuleNotFoundError: No module named 'ai_components'

2024-10-04 23:04:27,956 - ERROR - Error running script: Command '['py', 'main.py']' returned non-zero exit status 1.
2024-10-04 23:04:27,956 - ERROR - Command output: 
2024-10-04 23:04:27,956 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/ai_components/main.py", line 1, in <module>
    from ai_components.neural_network import NeuralNetwork
ModuleNotFoundError: No module named 'ai_components'

2024-10-04 23:07:42,940 - ERROR - Error running script: Command '['py', 'main.py']' returned non-zero exit status 1.
2024-10-04 23:07:42,940 - ERROR - Command output: 
2024-10-04 23:07:42,940 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/ai_components/main.py", line 1, in <module>
    from ai_components.neural_network import NeuralNetwork
ModuleNotFoundError: No module named 'ai_components'

2024-10-04 23:07:49,916 - INFO - Successfully executed command: py main.py
2024-10-04 23:07:49,916 - INFO - PYTHONPATH set to default: envy
2024-10-04 23:08:56,953 - INFO - Successfully executed command: py main.py
2024-10-04 23:08:56,954 - INFO - PYTHONPATH set to default: envy
2024-10-04 23:10:34,186 - ERROR - Error running script: Command '['py', 'main.py']' returned non-zero exit status 1.
2024-10-04 23:10:34,187 - ERROR - Command output: 
2024-10-04 23:10:34,187 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/ai_components/main.py", line 1, in <module>
    from ai_components.neural_network import NeuralNetwork
ModuleNotFoundError: No module named 'ai_components'

2024-10-04 23:11:40,899 - ERROR - Error running script: Command '['py', 'main.py']' returned non-zero exit status 1.
2024-10-04 23:11:40,900 - ERROR - Command output: 
2024-10-04 23:11:40,900 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/ai_components/main.py", line 1, in <module>
    from ai_components.neural_network import NeuralNetwork
ModuleNotFoundError: No module named 'ai_components'

2024-10-04 23:11:46,215 - INFO - Running unit tests in directory: /root/envy/ai_components/unit
2024-10-04 23:11:47,339 - ERROR - Error running command: Command '['pytest', '--color=yes', '/root/envy/ai_components/unit', '-k', '*.py']' returned non-zero exit status 4.
2024-10-04 23:11:47,339 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 0 items

[33m============================ [33mno tests ran[0m[33m in 0.01s[0m[33m =============================[0m

2024-10-04 23:11:47,339 - ERROR - Command error: ERROR: file or directory not found: /root/envy/ai_components/unit


2024-10-04 23:13:21,062 - ERROR - Error running script: Command '['py', 'main.py']' returned non-zero exit status 1.
2024-10-04 23:13:21,062 - ERROR - Command output: 
2024-10-04 23:13:21,062 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/ai_components/main.py", line 1, in <module>
    from ai_components.neural_network import NeuralNetwork
ModuleNotFoundError: No module named 'ai_components'

2024-10-04 23:15:45,092 - ERROR - Error running script: Command '['py', 'main.py']' returned non-zero exit status 1.
2024-10-04 23:15:45,092 - ERROR - Command output: 
2024-10-04 23:15:45,092 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/ai_components/main.py", line 1, in <module>
    from ai_components.neural_network import NeuralNetwork
ModuleNotFoundError: No module named 'ai_components'

2024-10-05 00:13:34,642 - ERROR - Error running unit tests: Command '['pytest', '--color=yes', '/root/envy/tests/unit']' returned non-zero exit status 1.
2024-10-05 00:13:34,644 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 6 items

tests/unit/test_database.py [32m.[0m[31mF[0m[31mF[0m[31m                                          [ 50%][0m
tests/unit/test_py.py [32m.[0m[32m.[0m[32m.[0m[31m                                                [100%][0m

=================================== FAILURES ===================================
[31m[1m_______ TestDatabase.test_create_and_retrieve_coordination_capabilities ________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_coordination_capabilities>

    [94mdef[39;49;00m [92mtest_create_and_retrieve_coordination_capabilities[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        capability1 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mScheduling[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task scheduling[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        capability2 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mNotifications[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task notifications[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability2)[90m[39;49;00m
        capabilities = [96mself[39;49;00m.db.get_coordination_capabilities()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(capabilities), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(capabilities[[94m0[39;49;00m], capability1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 1, 'name': 'Scheduling', 'description': 'Coordinate task scheduling'} != {'name': 'Scheduling', 'description': 'Coordinate task scheduling'}[0m
[1m[31mE       - {'description': 'Coordinate task scheduling', 'id': 1, 'name': 'Scheduling'}[0m
[1m[31mE       ?                                               ---------[0m
[1m[31mE       [0m
[1m[31mE       + {'description': 'Coordinate task scheduling', 'name': 'Scheduling'}[0m

[1m[31mtests/unit/test_database.py[0m:46: AssertionError
[31m[1m_________ TestDatabase.test_create_and_retrieve_implementation_details _________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_implementation_details>

    [94mdef[39;49;00m [92mtest_create_and_retrieve_implementation_details[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        detail1 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mUI[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement button functionality[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        detail2 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mBackend[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement API endpoint[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail2)[90m[39;49;00m
        details = [96mself[39;49;00m.db.get_implementation_details()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(details), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(details[[94m0[39;49;00m], detail1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 1, 'component': 'UI', 'description': 'Implement button functionality'} != {'component': 'UI', 'description': 'Implement button functionality'}[0m
[1m[31mE       - {'component': 'UI', 'description': 'Implement button functionality', 'id': 1}[0m
[1m[31mE       ?                                                                    ---------[0m
[1m[31mE       [0m
[1m[31mE       + {'component': 'UI', 'description': 'Implement button functionality'}[0m

[1m[31mtests/unit/test_database.py[0m:36: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_coordination_capabilities[0m - AssertionError: {'id': 1, 'name': 'Scheduling', 'description': 'Coordinate ...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_implementation_details[0m - AssertionError: {'id': 1, 'component': 'UI', 'description': 'Implement butt...
[31m========================= [31m[1m2 failed[0m, [32m4 passed[0m[31m in 1.74s[0m[31m ==========================[0m

2024-10-05 00:13:34,644 - ERROR - Command error: 
2024-10-05 00:13:54,001 - ERROR - Error running script: Command '['py', 'main.py']' returned non-zero exit status 1.
2024-10-05 00:13:54,002 - ERROR - Command output: 
2024-10-05 00:13:54,002 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/ai_components/main.py", line 1, in <module>
    from ai_components.neural_network import NeuralNetwork
ModuleNotFoundError: No module named 'ai_components'

2024-10-05 00:15:32,797 - ERROR - Error running script: Command '['py', 'main.py']' returned non-zero exit status 1.
2024-10-05 00:15:32,798 - ERROR - Command output: 
2024-10-05 00:15:32,798 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/ai_components/main.py", line 1, in <module>
    from ai_components.neural_network import NeuralNetwork
ModuleNotFoundError: No module named 'ai_components'

2024-10-05 00:16:00,456 - ERROR - Error running script: Command '['py', 'main.py']' returned non-zero exit status 1.
2024-10-05 00:16:00,456 - ERROR - Command output: 
2024-10-05 00:16:00,456 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/ai_components/main.py", line 1, in <module>
    from ai_components.neural_network import NeuralNetwork
ModuleNotFoundError: No module named 'ai_components'

2024-10-05 00:35:47,582 - ERROR - Error running script: Command '['py', 'main.py']' returned non-zero exit status 1.
2024-10-05 00:35:47,583 - ERROR - Command output: 
2024-10-05 00:35:47,583 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/ai_components/main.py", line 1, in <module>
    from ai_components.neural_network import NeuralNetwork
ModuleNotFoundError: No module named 'ai_components'

2024-10-05 01:40:08,306 - ERROR - Error running script: Command '['py', 'main.py']' returned non-zero exit status 1.
2024-10-05 01:40:08,308 - ERROR - Command output: 
2024-10-05 01:40:08,308 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/ai_components/main.py", line 1, in <module>
    from ai_components.neural_network import NeuralNetwork
ModuleNotFoundError: No module named 'ai_components'

2024-10-05 01:44:21,934 - ERROR - Error running script: Command '['/usr/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-05 01:44:21,936 - ERROR - Command output: 
2024-10-05 01:44:21,936 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/ai_components/main.py", line 1, in <module>
    from ai_components.neural_network import NeuralNetwork
ModuleNotFoundError: No module named 'ai_components'

2024-10-05 01:49:21,993 - ERROR - Error running script: Command '['/usr/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-05 01:49:21,995 - ERROR - Command output: 
2024-10-05 01:49:21,995 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/ai_components/main.py", line 1, in <module>
    from ai_components.neural_network import NeuralNetwork
ModuleNotFoundError: No module named 'ai_components'

2024-10-05 01:50:08,149 - ERROR - Error running script: Command '['python3', 'main.py']' returned non-zero exit status 1.
2024-10-05 01:50:08,151 - ERROR - Command output: 
2024-10-05 01:50:08,151 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/ai_components/main.py", line 1, in <module>
    from ai_components.neural_network import NeuralNetwork
ModuleNotFoundError: No module named 'ai_components'

2024-10-05 02:00:20,899 - ERROR - Error running script: Command '['/usr/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-05 02:00:20,900 - ERROR - Command output: 
2024-10-05 02:00:20,901 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/ai_components/main.py", line 1, in <module>
    from ai_components.neural_network import NeuralNetwork
ModuleNotFoundError: No module named 'ai_components'

2024-10-05 02:01:57,969 - ERROR - Error running script: Command '['/usr/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-05 02:01:57,970 - ERROR - Command output: 
2024-10-05 02:01:57,971 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/ai_components/main.py", line 1, in <module>
    from ai_components.neural_network import NeuralNetwork
ModuleNotFoundError: No module named 'ai_components'

2024-10-05 02:02:22,567 - ERROR - Error running script: Command '['/usr/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-05 02:02:22,568 - ERROR - Command output: 
2024-10-05 02:02:22,568 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/ai_components/main.py", line 1, in <module>
    from ai_components.neural_network import NeuralNetwork
ModuleNotFoundError: No module named 'ai_components'

2024-10-05 02:05:13,975 - INFO - Successfully executed command: /usr/bin/python3 main.py
2024-10-05 02:05:13,977 - INFO - PYTHONPATH set to default: envy
2024-10-05 02:05:41,561 - ERROR - Error running unit tests: Command '['pytest', '--color=yes', '/root/envy/tests/unit']' returned non-zero exit status 1.
2024-10-05 02:05:41,561 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
rootdir: /root/envy
configfile: pytest.ini
plugins: anyio-4.2.0
collected 6 items

tests/unit/test_database.py [31mF[0m[31mF[0m[31mF[0m[31m                                          [ 50%][0m
tests/unit/test_py.py [32m.[0m[32m.[0m[32m.[0m[31m                                                [100%][0m

=================================== FAILURES ===================================
[31m[1m________________________ TestDatabase.test_commit_task _________________________[0m

self = <test_database.TestDatabase testMethod=test_commit_task>

    [94mdef[39;49;00m [92mtest_commit_task[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        task = {[33m"[39;49;00m[33mtitle[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mTask 1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mDo something[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        task_id = [96mself[39;49;00m.db.commit_task(task, [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        tasks = [96mself[39;49;00m.db.get_tasks()[90m[39;49;00m
        records = [96mself[39;49;00m.db.get_completion_records()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(tasks), [94m1[39;49;00m)[90m[39;49;00m
        [96mself[39;49;00m.assertDictEqual(tasks[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: task_id, **task})[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(records), [94m1[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(records[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: [94m1[39;49;00m, [33m'[39;49;00m[33mtask_id[39;49;00m[33m'[39;49;00m: task_id, [33m'[39;49;00m[33mcompleted_at[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mrelated_tasks[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mimpact_notes[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m})[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 2, 'task_id': 2, 'completed_at': '2023-04[61 chars]e X'} != {'id': 1, 'task_id': 2, 'completed_at': '2023-04[61 chars]e X'}[0m
[1m[31mE         {'completed_at': '2023-04-01',[0m
[1m[31mE       -  'id': 2,[0m
[1m[31mE       ?        ^[0m
[1m[31mE       [0m
[1m[31mE       +  'id': 1,[0m
[1m[31mE       ?        ^[0m
[1m[31mE       [0m
[1m[31mE          'impact_notes': 'Impacts feature X',[0m
[1m[31mE          'related_tasks': '2,3',[0m
[1m[31mE          'task_id': 2}[0m

[1m[31mtests/unit/test_database.py[0m:27: AssertionError
[31m[1m_______ TestDatabase.test_create_and_retrieve_coordination_capabilities ________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_coordination_capabilities>

    [94mdef[39;49;00m [92mtest_create_and_retrieve_coordination_capabilities[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        capability1 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mScheduling[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task scheduling[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        capability2 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mNotifications[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task notifications[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability2)[90m[39;49;00m
        capabilities = [96mself[39;49;00m.db.get_coordination_capabilities()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(capabilities), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(capabilities[[94m0[39;49;00m], capability1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 3, 'name': 'Scheduling', 'description': 'Coordinate task scheduling'} != {'name': 'Scheduling', 'description': 'Coordinate task scheduling'}[0m
[1m[31mE       - {'description': 'Coordinate task scheduling', 'id': 3, 'name': 'Scheduling'}[0m
[1m[31mE       ?                                               ---------[0m
[1m[31mE       [0m
[1m[31mE       + {'description': 'Coordinate task scheduling', 'name': 'Scheduling'}[0m

[1m[31mtests/unit/test_database.py[0m:46: AssertionError
[31m[1m_________ TestDatabase.test_create_and_retrieve_implementation_details _________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_implementation_details>

    [94mdef[39;49;00m [92mtest_create_and_retrieve_implementation_details[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        detail1 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mUI[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement button functionality[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        detail2 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mBackend[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement API endpoint[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail2)[90m[39;49;00m
        details = [96mself[39;49;00m.db.get_implementation_details()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(details), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(details[[94m0[39;49;00m], detail1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 3, 'component': 'UI', 'description': 'Implement button functionality'} != {'component': 'UI', 'description': 'Implement button functionality'}[0m
[1m[31mE       - {'component': 'UI', 'description': 'Implement button functionality', 'id': 3}[0m
[1m[31mE       ?                                                                    ---------[0m
[1m[31mE       [0m
[1m[31mE       + {'component': 'UI', 'description': 'Implement button functionality'}[0m

[1m[31mtests/unit/test_database.py[0m:36: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_commit_task[0m - AssertionError: {'id': 2, 'task_id': 2, 'completed_at': '2023-04[61 chars]e...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_coordination_capabilities[0m - AssertionError: {'id': 3, 'name': 'Scheduling', 'description': 'Coordinate ...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_implementation_details[0m - AssertionError: {'id': 3, 'component': 'UI', 'description': 'Implement butt...
[31m========================= [31m[1m3 failed[0m, [32m3 passed[0m[31m in 1.26s[0m[31m ==========================[0m

2024-10-05 02:05:41,562 - ERROR - Command error: 
2024-10-05 02:08:44,026 - INFO - Successfully executed command: /usr/bin/python3 main.py
2024-10-05 02:08:44,026 - INFO - PYTHONPATH set to default: envy
2024-10-05 02:09:00,422 - INFO - Successfully executed command: /usr/bin/python3 main.py
2024-10-05 02:09:00,422 - INFO - PYTHONPATH set to default: envy
2024-10-05 02:10:44,349 - ERROR - Error running script: Command '['/usr/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-05 02:10:44,350 - ERROR - Command output: 
2024-10-05 02:10:44,350 - ERROR - Command error: Traceback (most recent call last):
  File "/root/envy/ai_components/main.py", line 1, in <module>
    from ai_components.neural_network import NeuralNetwork
ModuleNotFoundError: No module named 'ai_components'

2024-10-08 14:05:51,873 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:05:51,874 - ERROR - Command output: 
2024-10-08 14:05:51,874 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 14:06:20,428 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:06:20,429 - ERROR - Command output: 
2024-10-08 14:06:20,429 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 14:10:28,131 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:10:28,132 - ERROR - Command output: 
2024-10-08 14:10:28,132 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 14:10:34,751 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:10:34,753 - ERROR - Command output: 
2024-10-08 14:10:34,753 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 14:36:21,223 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:36:21,226 - ERROR - Command output: 
2024-10-08 14:36:21,227 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/main.py", line 3, in <module>
    from version_control import create_new_branch, commit_all_changes, push_changes, auto_version_control, add_git_tracked_directories
ImportError: cannot import name 'create_new_branch' from 'version_control' (/home/formidablepencil/envy/version_control/__init__.py)

2024-10-08 14:38:18,103 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:38:18,104 - ERROR - Command output: 
2024-10-08 14:38:18,104 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/main.py", line 3, in <module>
    from version_control import create_new_branch, commit_all_changes, push_changes, auto_version_control, add_git_tracked_directories
ImportError: cannot import name 'create_new_branch' from 'version_control' (/home/formidablepencil/envy/version_control/__init__.py)

2024-10-08 14:39:50,504 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:39:50,504 - ERROR - Command output: 
2024-10-08 14:39:50,505 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 14:39:57,155 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:39:57,155 - ERROR - Command output: 
2024-10-08 14:39:57,156 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 14:40:27,086 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:40:27,087 - ERROR - Command output: 
2024-10-08 14:40:27,088 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 14:41:03,856 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:41:03,856 - ERROR - Command output: 
2024-10-08 14:41:03,857 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 14:41:44,255 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:41:44,255 - ERROR - Command output: 
2024-10-08 14:41:44,255 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 14:42:12,855 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:42:12,856 - ERROR - Command output: 
2024-10-08 14:42:12,856 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 14:42:42,203 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:42:42,204 - ERROR - Command output: 
2024-10-08 14:42:42,204 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 14:43:33,564 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:43:33,565 - ERROR - Command output: 
2024-10-08 14:43:33,565 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 14:47:21,231 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:47:21,231 - ERROR - Command output: 
2024-10-08 14:47:21,231 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 14:51:21,150 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:51:21,151 - ERROR - Command output: 
2024-10-08 14:51:21,151 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 14:52:33,183 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'central_ai_manager/main.py']' returned non-zero exit status 2.
2024-10-08 14:52:33,184 - ERROR - Command output: 
2024-10-08 14:52:33,184 - ERROR - Command error: /home/formidablepencil/envy/venv/bin/python3: can't open file '/home/formidablepencil/envy/central_ai_manager/central_ai_manager/main.py': [Errno 2] No such file or directory

2024-10-08 14:52:56,392 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'central_ai_manager/main.py']' returned non-zero exit status 2.
2024-10-08 14:52:56,392 - ERROR - Command output: 
2024-10-08 14:52:56,392 - ERROR - Command error: /home/formidablepencil/envy/venv/bin/python3: can't open file '/home/formidablepencil/envy/central_ai_manager/central_ai_manager/main.py': [Errno 2] No such file or directory

2024-10-08 14:53:39,428 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:53:39,429 - ERROR - Command output: 
2024-10-08 14:53:39,429 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 14:57:36,517 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:57:36,518 - ERROR - Command output: 
2024-10-08 14:57:36,518 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/main.py", line 3, in <module>
    from version_control import create_new_branch, commit_all_changes, push_changes, auto_version_control, add_git_tracked_directories
ImportError: cannot import name 'create_new_branch' from 'version_control' (/home/formidablepencil/envy/version_control/__init__.py)

2024-10-08 14:58:46,687 - ERROR - Error running script: Command '['python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:58:46,687 - ERROR - Command output: 
2024-10-08 14:58:46,687 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 14:59:18,443 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 14:59:18,443 - ERROR - Command output: 
2024-10-08 14:59:18,443 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 15:03:12,861 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 15:03:12,864 - INFO - PYTHONPATH set to default: envy
2024-10-08 15:03:27,414 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main2.py']' returned non-zero exit status 1.
2024-10-08 15:03:27,415 - ERROR - Command output: 
2024-10-08 15:03:27,415 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main2.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 15:04:38,651 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main2.py']' returned non-zero exit status 1.
2024-10-08 15:04:38,652 - ERROR - Command output: 
2024-10-08 15:04:38,652 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main2.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 15:05:04,234 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main2.py']' returned non-zero exit status 1.
2024-10-08 15:05:04,235 - ERROR - Command output: 
2024-10-08 15:05:04,235 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main2.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 15:06:09,359 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main2.py']' returned non-zero exit status 1.
2024-10-08 15:06:09,359 - ERROR - Command output: 
2024-10-08 15:06:09,359 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main2.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 15:06:16,710 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 15:06:16,710 - INFO - PYTHONPATH set to default: envy
2024-10-08 15:06:36,401 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 15:06:36,402 - INFO - PYTHONPATH set to default: envy
2024-10-08 15:07:18,120 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main2.py']' returned non-zero exit status 1.
2024-10-08 15:07:18,121 - ERROR - Command output: 
2024-10-08 15:07:18,122 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main2.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 15:07:33,523 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main2.py']' returned non-zero exit status 1.
2024-10-08 15:07:33,524 - ERROR - Command output: 
2024-10-08 15:07:33,524 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main2.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 15:08:57,075 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main2.py']' returned non-zero exit status 1.
2024-10-08 15:08:57,076 - ERROR - Command output: 
2024-10-08 15:08:57,076 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main2.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 15:10:54,086 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 15:10:54,087 - ERROR - Command output: 
2024-10-08 15:10:54,087 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 1, in <module>
    from central_ai_manager.main2 import CentralAIManager
ModuleNotFoundError: No module named 'central_ai_manager'

2024-10-08 15:11:05,900 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 15:11:05,904 - INFO - PYTHONPATH set to default: envy
2024-10-08 15:11:22,129 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 15:11:22,131 - ERROR - Command output: 
2024-10-08 15:11:22,132 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 1, in <module>
    from central_ai_manager.main2 import CentralAIManager
ModuleNotFoundError: No module named 'central_ai_manager'

2024-10-08 15:11:29,534 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 15:11:29,536 - INFO - PYTHONPATH set to default: envy
2024-10-08 15:11:40,693 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 15:11:40,694 - ERROR - Command output: 
2024-10-08 15:11:40,695 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 1, in <module>
    from central_ai_manager.main2 import CentralAIManager
ModuleNotFoundError: No module named 'central_ai_manager'

2024-10-08 15:12:08,287 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 15:12:08,289 - ERROR - Command output: 
2024-10-08 15:12:08,290 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 1, in <module>
    from central_ai_manager.main2 import CentralAIManager
ModuleNotFoundError: No module named 'central_ai_manager'

2024-10-08 15:12:19,785 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 15:12:19,786 - ERROR - Command output: 
2024-10-08 15:12:19,787 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 1, in <module>
    from central_ai_manager.main2 import CentralAIManager
ModuleNotFoundError: No module named 'central_ai_manager'

2024-10-08 15:12:57,551 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 15:12:57,552 - INFO - PYTHONPATH set to default: envy
2024-10-08 15:16:08,290 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main2.py']' returned non-zero exit status 1.
2024-10-08 15:16:08,290 - ERROR - Command output: 
2024-10-08 15:16:08,291 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main2.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 15:17:00,918 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 15:17:00,919 - INFO - PYTHONPATH set to default: envy
2024-10-08 15:28:41,238 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 15:28:41,240 - ERROR - Command output: 
2024-10-08 15:28:41,240 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 1, in <module>
    from central_ai_manager.core import CentralAIManager
ModuleNotFoundError: No module named 'central_ai_manager'

2024-10-08 15:29:33,598 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 15:29:33,598 - ERROR - Command output: 
2024-10-08 15:29:33,598 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 1, in <module>
    from central_ai_manager.core import CentralAIManager
ModuleNotFoundError: No module named 'central_ai_manager'

2024-10-08 15:38:02,119 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 15:38:02,120 - ERROR - Command output: 
2024-10-08 15:38:02,120 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 1, in <module>
    from central_ai_manager.core import CentralAIManager
ModuleNotFoundError: No module named 'central_ai_manager'

2024-10-08 15:48:24,530 - INFO - Assets path configured: /home/formidablepencil/envy/assets
2024-10-08 15:48:24,533 - INFO - Starting up UDS server on /tmp/OlMzBOxASy
2024-10-08 15:48:24,534 - INFO - Flet app has started...
2024-10-08 15:48:24,534 - INFO - App URL: /tmp/OlMzBOxASy
2024-10-08 15:48:24,534 - INFO - Starting Flet View app...
2024-10-08 15:48:24,535 - INFO - Flet View found in: /home/formidablepencil/.flet/bin/flet-0.24.1
2024-10-08 15:48:33,131 - INFO - App session started
2024-10-08 16:04:12,368 - INFO - Assets path configured: /home/formidablepencil/envy/assets
2024-10-08 16:04:12,373 - INFO - Starting up UDS server on /tmp/C7Sx9xXOgS
2024-10-08 16:04:12,380 - INFO - Flet app has started...
2024-10-08 16:04:12,380 - INFO - App URL: /tmp/C7Sx9xXOgS
2024-10-08 16:04:12,380 - INFO - Starting Flet View app...
2024-10-08 16:04:12,380 - INFO - Flet View found in: /home/formidablepencil/.flet/bin/flet-0.24.1
2024-10-08 16:04:21,422 - INFO - App session started
2024-10-08 16:08:09,541 - INFO - Assets path configured: /home/formidablepencil/envy/assets
2024-10-08 16:08:09,548 - INFO - Starting up UDS server on /tmp/PG6amBcgXU
2024-10-08 16:08:09,551 - INFO - Flet app has started...
2024-10-08 16:08:09,551 - INFO - App URL: /tmp/PG6amBcgXU
2024-10-08 16:08:09,551 - INFO - Starting Flet View app...
2024-10-08 16:08:09,552 - INFO - Flet View found in: /home/formidablepencil/.flet/bin/flet-0.24.1
2024-10-08 16:08:17,901 - INFO - App session started
2024-10-08 16:09:54,235 - INFO - Assets path configured: /home/formidablepencil/envy/assets
2024-10-08 16:09:54,238 - INFO - Starting up UDS server on /tmp/ocvYZgxxmM
2024-10-08 16:09:54,239 - INFO - Flet app has started...
2024-10-08 16:09:54,239 - INFO - App URL: /tmp/ocvYZgxxmM
2024-10-08 16:09:54,239 - INFO - Starting Flet View app...
2024-10-08 16:09:54,239 - INFO - Flet View found in: /home/formidablepencil/.flet/bin/flet-0.24.1
2024-10-08 16:10:02,660 - INFO - App session started
2024-10-08 16:12:10,845 - INFO - Assets path configured: /home/formidablepencil/envy/assets
2024-10-08 16:12:10,858 - INFO - Starting up UDS server on /tmp/quNqrf9TsT
2024-10-08 16:12:10,860 - INFO - Flet app has started...
2024-10-08 16:12:10,860 - INFO - App URL: /tmp/quNqrf9TsT
2024-10-08 16:12:10,860 - INFO - Starting Flet View app...
2024-10-08 16:12:10,873 - INFO - Flet View found in: /home/formidablepencil/.flet/bin/flet-0.24.1
2024-10-08 16:12:20,530 - INFO - App session started
2024-10-08 16:13:01,198 - INFO - Assets path configured: /home/formidablepencil/envy/assets
2024-10-08 16:13:01,203 - INFO - Starting up UDS server on /tmp/TufQyvyIRE
2024-10-08 16:13:01,203 - INFO - Flet app has started...
2024-10-08 16:13:01,204 - INFO - App URL: /tmp/TufQyvyIRE
2024-10-08 16:13:01,204 - INFO - Starting Flet View app...
2024-10-08 16:13:01,205 - INFO - Flet View found in: /home/formidablepencil/.flet/bin/flet-0.24.1
2024-10-08 16:13:10,981 - INFO - App session started
2024-10-08 16:16:21,726 - INFO - Assets path configured: /home/formidablepencil/envy/assets
2024-10-08 16:16:21,733 - INFO - Starting up UDS server on /tmp/5sDPqOlVtm
2024-10-08 16:16:21,734 - INFO - Flet app has started...
2024-10-08 16:16:21,734 - INFO - App URL: /tmp/5sDPqOlVtm
2024-10-08 16:16:21,734 - INFO - Starting Flet View app...
2024-10-08 16:16:21,735 - INFO - Flet View found in: /home/formidablepencil/.flet/bin/flet-0.24.1
2024-10-08 16:16:35,132 - INFO - App session started
2024-10-08 16:18:57,207 - INFO - Assets path configured: /home/formidablepencil/envy/assets
2024-10-08 16:18:57,215 - INFO - Starting up UDS server on /tmp/IpdFPD2QZX
2024-10-08 16:18:57,216 - INFO - Flet app has started...
2024-10-08 16:18:57,216 - INFO - App URL: /tmp/IpdFPD2QZX
2024-10-08 16:18:57,216 - INFO - Starting Flet View app...
2024-10-08 16:18:57,217 - INFO - Flet View found in: /home/formidablepencil/.flet/bin/flet-0.24.1
2024-10-08 16:19:09,371 - INFO - App session started
2024-10-08 16:19:12,475 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 16:19:12,475 - ERROR - Command output: 
2024-10-08 16:19:12,475 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 1, in <module>
    from core import CentralAIManager
  File "/home/formidablepencil/envy/central_ai_manager/core.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 16:19:13,065 - ERROR - Task exception was never retrieved
future: <Task finished name='Task-8' coro=<__run_socket_server.<locals>.on_session_created() done, defined at /home/formidablepencil/envy/venv/lib/python3.11/site-packages/flet_runtime/app.py:228> exception=SystemExit(1)>
Traceback (most recent call last):
  File "/home/formidablepencil/envy/py", line 167, in main
    result = subprocess.run([sys.executable, os.path.basename(args.target)], check=True, capture_output=True, text=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/subprocess.py", line 571, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.11/asyncio/runners.py", line 190, in run
    return runner.run(main)
           ^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/asyncio/base_events.py", line 640, in run_until_complete
    self.run_forever()
  File "/usr/lib/python3.11/asyncio/base_events.py", line 607, in run_forever
    self._run_once()
  File "/usr/lib/python3.11/asyncio/base_events.py", line 1922, in _run_once
    handle._run()
  File "/usr/lib/python3.11/asyncio/events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
  File "/home/formidablepencil/envy/venv/lib/python3.11/site-packages/flet_runtime/app.py", line 244, in on_session_created
    await asyncio.get_running_loop().run_in_executor(
  File "/usr/lib/python3.11/concurrent/futures/thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/formidablepencil/envy/py", line 176, in main
    sys.exit(1)
SystemExit: 1
2024-10-08 16:19:59,548 - INFO - Assets path configured: /home/formidablepencil/envy/assets
2024-10-08 16:19:59,551 - INFO - Starting up UDS server on /tmp/bWqNOnx0O0
2024-10-08 16:19:59,556 - INFO - Flet app has started...
2024-10-08 16:19:59,556 - INFO - App URL: /tmp/bWqNOnx0O0
2024-10-08 16:19:59,556 - INFO - Starting Flet View app...
2024-10-08 16:19:59,557 - INFO - Flet View found in: /home/formidablepencil/.flet/bin/flet-0.24.1
2024-10-08 16:20:08,456 - INFO - App session started
2024-10-08 16:20:12,986 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 16:20:12,987 - ERROR - Command output: 
2024-10-08 16:20:12,987 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 1, in <module>
    from core import CentralAIManager
  File "/home/formidablepencil/envy/central_ai_manager/core.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 16:20:13,283 - ERROR - Task exception was never retrieved
future: <Task finished name='Task-8' coro=<__run_socket_server.<locals>.on_session_created() done, defined at /home/formidablepencil/envy/venv/lib/python3.11/site-packages/flet_runtime/app.py:228> exception=SystemExit(1)>
Traceback (most recent call last):
  File "/home/formidablepencil/envy/py", line 167, in main
    result = subprocess.run([sys.executable, os.path.basename(args.target)], check=True, capture_output=True, text=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/subprocess.py", line 571, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.11/asyncio/runners.py", line 190, in run
    return runner.run(main)
           ^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/asyncio/base_events.py", line 640, in run_until_complete
    self.run_forever()
  File "/usr/lib/python3.11/asyncio/base_events.py", line 607, in run_forever
    self._run_once()
  File "/usr/lib/python3.11/asyncio/base_events.py", line 1922, in _run_once
    handle._run()
  File "/usr/lib/python3.11/asyncio/events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
  File "/home/formidablepencil/envy/venv/lib/python3.11/site-packages/flet_runtime/app.py", line 244, in on_session_created
    await asyncio.get_running_loop().run_in_executor(
  File "/usr/lib/python3.11/concurrent/futures/thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/formidablepencil/envy/py", line 176, in main
    sys.exit(1)
SystemExit: 1
2024-10-08 16:22:55,946 - INFO - Assets path configured: /home/formidablepencil/envy/assets
2024-10-08 16:22:55,953 - INFO - Starting up UDS server on /tmp/HXfmiTjAPv
2024-10-08 16:22:55,955 - INFO - Flet app has started...
2024-10-08 16:22:55,956 - INFO - App URL: /tmp/HXfmiTjAPv
2024-10-08 16:22:55,956 - INFO - Starting Flet View app...
2024-10-08 16:22:55,957 - INFO - Flet View found in: /home/formidablepencil/.flet/bin/flet-0.24.1
2024-10-08 16:23:08,421 - INFO - App session started
2024-10-08 16:23:08,966 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 16:23:08,968 - INFO - PYTHONPATH set to default: envy
2024-10-08 16:27:08,207 - INFO - Assets path configured: /home/formidablepencil/envy/assets
2024-10-08 16:27:08,210 - INFO - Starting up UDS server on /tmp/1ySr7ejxDs
2024-10-08 16:27:08,213 - INFO - Flet app has started...
2024-10-08 16:27:08,213 - INFO - App URL: /tmp/1ySr7ejxDs
2024-10-08 16:27:08,213 - INFO - Starting Flet View app...
2024-10-08 16:27:08,214 - INFO - Flet View found in: /home/formidablepencil/.flet/bin/flet-0.24.1
2024-10-08 16:27:17,315 - INFO - App session started
2024-10-08 16:32:34,896 - INFO - Assets path configured: /home/formidablepencil/envy/assets
2024-10-08 16:32:34,901 - INFO - Starting up UDS server on /tmp/WgoigSgjEW
2024-10-08 16:32:34,903 - INFO - Flet app has started...
2024-10-08 16:32:34,903 - INFO - App URL: /tmp/WgoigSgjEW
2024-10-08 16:32:34,904 - INFO - Starting Flet View app...
2024-10-08 16:32:34,905 - INFO - Flet View found in: /home/formidablepencil/.flet/bin/flet-0.24.1
2024-10-08 16:32:48,512 - INFO - App session started
2024-10-08 16:32:49,241 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 16:32:49,242 - INFO - PYTHONPATH set to default: envy
2024-10-08 16:34:26,495 - INFO - Assets path configured: /home/formidablepencil/envy/assets
2024-10-08 16:34:26,501 - INFO - Starting up UDS server on /tmp/Psbo1wmEP6
2024-10-08 16:34:26,502 - INFO - Flet app has started...
2024-10-08 16:34:26,502 - INFO - App URL: /tmp/Psbo1wmEP6
2024-10-08 16:34:26,502 - INFO - Starting Flet View app...
2024-10-08 16:34:26,508 - INFO - Flet View found in: /home/formidablepencil/.flet/bin/flet-0.24.1
2024-10-08 16:34:33,731 - INFO - App session started
2024-10-08 16:34:34,311 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 16:34:34,312 - INFO - PYTHONPATH set to default: envy
2024-10-08 16:34:56,236 - INFO - Assets path configured: /home/formidablepencil/envy/assets
2024-10-08 16:34:56,238 - INFO - Starting up UDS server on /tmp/CD6i6KoPt3
2024-10-08 16:34:56,239 - INFO - Flet app has started...
2024-10-08 16:34:56,239 - INFO - App URL: /tmp/CD6i6KoPt3
2024-10-08 16:34:56,239 - INFO - Starting Flet View app...
2024-10-08 16:34:56,239 - INFO - Flet View found in: /home/formidablepencil/.flet/bin/flet-0.24.1
2024-10-08 16:35:04,053 - INFO - App session started
2024-10-08 16:35:04,645 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 16:35:04,645 - INFO - PYTHONPATH set to default: envy
2024-10-08 16:35:39,405 - INFO - Assets path configured: /home/formidablepencil/envy/assets
2024-10-08 16:35:39,409 - INFO - Starting up UDS server on /tmp/UW0W0GL3qr
2024-10-08 16:35:39,415 - INFO - Flet app has started...
2024-10-08 16:35:39,415 - INFO - App URL: /tmp/UW0W0GL3qr
2024-10-08 16:35:39,415 - INFO - Starting Flet View app...
2024-10-08 16:35:39,416 - INFO - Flet View found in: /home/formidablepencil/.flet/bin/flet-0.24.1
2024-10-08 16:35:52,207 - INFO - App session started
2024-10-08 16:35:58,630 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 16:35:58,631 - ERROR - Command output: 
2024-10-08 16:35:58,632 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 1, in <module>
    from core import CentralAIManager
  File "/home/formidablepencil/envy/central_ai_manager/core.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 16:35:59,245 - ERROR - Task exception was never retrieved
future: <Task finished name='Task-8' coro=<__run_socket_server.<locals>.on_session_created() done, defined at /home/formidablepencil/envy/venv/lib/python3.11/site-packages/flet_runtime/app.py:228> exception=SystemExit(1)>
Traceback (most recent call last):
  File "/home/formidablepencil/envy/py", line 167, in main
    result = subprocess.run([sys.executable, os.path.basename(args.target)], check=True, capture_output=True, text=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/subprocess.py", line 571, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.11/asyncio/runners.py", line 190, in run
    return runner.run(main)
           ^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/asyncio/base_events.py", line 640, in run_until_complete
    self.run_forever()
  File "/usr/lib/python3.11/asyncio/base_events.py", line 607, in run_forever
    self._run_once()
  File "/usr/lib/python3.11/asyncio/base_events.py", line 1922, in _run_once
    handle._run()
  File "/usr/lib/python3.11/asyncio/events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
  File "/home/formidablepencil/envy/venv/lib/python3.11/site-packages/flet_runtime/app.py", line 244, in on_session_created
    await asyncio.get_running_loop().run_in_executor(
  File "/usr/lib/python3.11/concurrent/futures/thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/formidablepencil/envy/py", line 176, in main
    sys.exit(1)
SystemExit: 1
2024-10-08 16:36:49,999 - INFO - Assets path configured: /home/formidablepencil/envy/assets
2024-10-08 16:36:50,008 - INFO - Starting up UDS server on /tmp/kwpeiJWdgC
2024-10-08 16:36:50,019 - INFO - Flet app has started...
2024-10-08 16:36:50,020 - INFO - App URL: /tmp/kwpeiJWdgC
2024-10-08 16:36:50,020 - INFO - Starting Flet View app...
2024-10-08 16:36:50,021 - INFO - Flet View found in: /home/formidablepencil/.flet/bin/flet-0.24.1
2024-10-08 16:37:03,863 - INFO - App session started
2024-10-08 16:37:06,197 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 16:37:06,199 - INFO - PYTHONPATH set to default: envy
2024-10-08 16:38:57,066 - INFO - Assets path configured: /home/formidablepencil/envy/assets
2024-10-08 16:38:57,117 - INFO - Starting up UDS server on /tmp/7VQVTSmraP
2024-10-08 16:38:57,119 - INFO - Flet app has started...
2024-10-08 16:38:57,120 - INFO - App URL: /tmp/7VQVTSmraP
2024-10-08 16:38:57,120 - INFO - Starting Flet View app...
2024-10-08 16:38:57,127 - INFO - Flet View found in: /home/formidablepencil/.flet/bin/flet-0.24.1
2024-10-08 16:39:25,926 - INFO - App session started
2024-10-08 16:39:26,940 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 16:39:26,944 - INFO - PYTHONPATH set to default: envy
2024-10-08 16:40:57,271 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 16:40:57,273 - INFO - PYTHONPATH set to default: envy
2024-10-08 16:41:24,510 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 16:41:24,510 - ERROR - Command output: 
2024-10-08 16:41:24,511 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 1, in <module>
    from core import CentralAIManager
  File "/home/formidablepencil/envy/central_ai_manager/core.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 16:42:50,941 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 16:42:50,941 - ERROR - Command output: 
2024-10-08 16:42:50,941 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 1, in <module>
    from core import testme
  File "/home/formidablepencil/envy/central_ai_manager/core.py", line 4, in <module>
    from database.database import Database
ModuleNotFoundError: No module named 'database'

2024-10-08 16:43:30,636 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 16:43:30,636 - ERROR - Command output: 
2024-10-08 16:43:30,636 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 2, in <module>
    from hello_world import logging
ModuleNotFoundError: No module named 'hello_world'

2024-10-08 16:44:53,104 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 16:44:53,104 - ERROR - Command output: 
2024-10-08 16:44:53,104 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 2, in <module>
    from hello_world.logging import log_message
ModuleNotFoundError: No module named 'hello_world'

2024-10-08 16:45:04,336 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 16:45:04,338 - INFO - PYTHONPATH set to default: envy
2024-10-08 16:45:35,575 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 16:45:35,576 - ERROR - Command output: 
2024-10-08 16:45:35,576 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 2, in <module>
    from hello_world.logging import log_message
ModuleNotFoundError: No module named 'hello_world'

2024-10-08 16:51:30,990 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 16:51:30,991 - ERROR - Command output: 
2024-10-08 16:51:30,991 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/main.py", line 3, in <module>
    from version_control import create_new_branch, commit_all_changes, push_changes, auto_version_control, add_git_tracked_directories
ImportError: cannot import name 'create_new_branch' from 'version_control' (/home/formidablepencil/envy/version_control/__init__.py)

2024-10-08 16:56:07,011 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 16:56:07,014 - ERROR - Command output: 
2024-10-08 16:56:07,014 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 2, in <module>
    from hello_world.logging import log_message
ModuleNotFoundError: No module named 'hello_world'

2024-10-08 16:56:29,106 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 16:56:29,107 - ERROR - Command output: 
2024-10-08 16:56:29,107 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 2, in <module>
    from hello_world.logging import log_message
ModuleNotFoundError: No module named 'hello_world'

2024-10-08 16:58:44,195 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 16:58:44,199 - ERROR - Command output: 
2024-10-08 16:58:44,208 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 2, in <module>
    from hello_world.logging import log_message
ModuleNotFoundError: No module named 'hello_world'

2024-10-08 17:02:09,713 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:02:09,713 - ERROR - Command output: 
2024-10-08 17:02:09,713 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 2, in <module>
    from hello_world.logging import log_message
ModuleNotFoundError: No module named 'hello_world'

2024-10-08 17:07:07,729 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:07:07,730 - ERROR - Command output: 
2024-10-08 17:07:07,730 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 2, in <module>
    from hello_world.logging import log_message
ModuleNotFoundError: No module named 'hello_world'

2024-10-08 17:08:59,968 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 17:08:59,969 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:09:17,286 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 17:09:17,287 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:09:23,251 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 17:09:23,253 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:10:29,115 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:10:29,120 - ERROR - Command output: 
2024-10-08 17:10:29,120 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:11:14,415 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:11:14,416 - ERROR - Command output: 
2024-10-08 17:11:14,416 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:11:36,011 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:11:36,011 - ERROR - Command output: 
2024-10-08 17:11:36,011 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:11:49,121 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:11:49,122 - ERROR - Command output: 
2024-10-08 17:11:49,122 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:11:58,684 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:11:58,685 - ERROR - Command output: 
2024-10-08 17:11:58,685 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:12:44,889 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:12:44,894 - ERROR - Command output: 
2024-10-08 17:12:44,894 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:12:53,822 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:12:53,822 - ERROR - Command output: 
2024-10-08 17:12:53,822 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:13:59,987 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:14:00,081 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:14:00,081 - ERROR - Command output: 
2024-10-08 17:14:00,081 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:14:18,409 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:14:18,460 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:14:18,465 - ERROR - Command output: 
2024-10-08 17:14:18,469 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:14:38,456 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:14:38,497 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:14:38,499 - ERROR - Command output: 
2024-10-08 17:14:38,499 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:15:07,823 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:15:07,860 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:15:07,861 - ERROR - Command output: 
2024-10-08 17:15:07,861 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:15:14,855 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:15:14,922 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 17:15:29,096 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:15:29,129 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:15:29,130 - ERROR - Command output: 
2024-10-08 17:15:29,130 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:15:36,930 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:15:36,961 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:15:36,961 - ERROR - Command output: 
2024-10-08 17:15:36,961 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:16:07,549 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:16:07,604 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:16:07,604 - ERROR - Command output: 
2024-10-08 17:16:07,604 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:16:41,435 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:16:41,475 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:16:41,475 - ERROR - Command output: 
2024-10-08 17:16:41,475 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:17:09,807 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:17:09,865 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:17:09,866 - ERROR - Command output: 
2024-10-08 17:17:09,866 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:17:19,457 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:17:19,541 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 17:20:03,477 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:20:03,517 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 17:20:18,159 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:20:18,251 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:20:18,253 - ERROR - Command output: 
2024-10-08 17:20:18,255 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:20:28,408 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:20:28,443 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:20:28,444 - ERROR - Command output: 
2024-10-08 17:20:28,445 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:20:33,932 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:20:34,083 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:20:34,083 - ERROR - Command output: 
2024-10-08 17:20:34,083 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:21:48,934 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:21:48,967 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 17:21:58,696 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:21:58,726 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:21:58,726 - ERROR - Command output: 
2024-10-08 17:21:58,726 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:26:59,353 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:26:59,403 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 17:30:43,782 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:30:43,916 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'main.py']' returned non-zero exit status 1.
2024-10-08 17:30:43,917 - ERROR - Command output: 
2024-10-08 17:30:43,917 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/main.py", line 3, in <module>
    from version_control import create_new_branch, commit_all_changes, push_changes, auto_version_control, add_git_tracked_directories
ImportError: cannot import name 'create_new_branch' from 'version_control' (/home/formidablepencil/envy/version_control/__init__.py)

2024-10-08 17:30:52,250 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:30:52,282 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 17:35:37,643 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:35:37,726 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 main.py
2024-10-08 17:36:35,430 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:36:35,473 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 central_ai_manager/main.py
2024-10-08 17:36:52,400 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:36:52,432 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'central_ai_manager/main.py']' returned non-zero exit status 1.
2024-10-08 17:36:52,433 - ERROR - Command output: 
2024-10-08 17:36:52,433 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:37:08,672 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:37:08,697 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'central_ai_manager/main.py']' returned non-zero exit status 1.
2024-10-08 17:37:08,697 - ERROR - Command output: 
2024-10-08 17:37:08,697 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:37:22,792 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:37:22,819 - ERROR - Error running script: Command '['/home/formidablepencil/envy/venv/bin/python3', 'central_ai_manager/main.py']' returned non-zero exit status 1.
2024-10-08 17:37:22,819 - ERROR - Command output: 
2024-10-08 17:37:22,819 - ERROR - Command error: Traceback (most recent call last):
  File "/home/formidablepencil/envy/central_ai_manager/main.py", line 3, in <module>
    from testme import testmeplz
ModuleNotFoundError: No module named 'testme'

2024-10-08 17:39:04,610 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:39:04,667 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 central_ai_manager/main.py
2024-10-08 17:39:47,987 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:39:48,013 - INFO - Successfully executed command: /home/formidablepencil/envy/venv/bin/python3 central_ai_manager/main.py
2024-10-08 17:40:29,113 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:40:29,147 - ERROR - Error running command: Command '['/home/formidablepencil/envy/venv/bin/python3', '-m', 'pytest', '--color=yes', '.']' returned non-zero exit status 1.
2024-10-08 17:40:29,147 - ERROR - Command output: 
2024-10-08 17:40:29,148 - ERROR - Command error: /home/formidablepencil/envy/venv/bin/python3: No module named pytest

2024-10-08 17:41:04,773 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:46:11,925 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:48:40,336 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:48:52,141 - ERROR - Error running unit tests: Command '['pytest', '--color=yes', '/home/formidablepencil/envy/tests/unit']' returned non-zero exit status 1.
2024-10-08 17:48:52,142 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.2, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/formidablepencil/envy
configfile: pytest.ini
plugins: anyio-4.6.0
collected 6 items

tests/unit/test_database.py [31mF[0m[31mF[0m[31mF[0m[31m                                          [ 50%][0m
tests/unit/test_py.py [32m.[0m[32m.[0m[32m.[0m[31m                                                [100%][0m

=================================== FAILURES ===================================
[31m[1m________________________ TestDatabase.test_commit_task _________________________[0m

self = <test_database.TestDatabase testMethod=test_commit_task>

    [0m[94mdef[39;49;00m [92mtest_commit_task[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        task = {[33m"[39;49;00m[33mtitle[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mTask 1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mDo something[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        task_id = [96mself[39;49;00m.db.commit_task(task, [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        tasks = [96mself[39;49;00m.db.get_tasks()[90m[39;49;00m
        records = [96mself[39;49;00m.db.get_completion_records()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(tasks), [94m1[39;49;00m)[90m[39;49;00m
        [96mself[39;49;00m.assertDictEqual(tasks[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: task_id, **task})[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(records), [94m1[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(records[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: [94m1[39;49;00m, [33m'[39;49;00m[33mtask_id[39;49;00m[33m'[39;49;00m: task_id, [33m'[39;49;00m[33mcompleted_at[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mrelated_tasks[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mimpact_notes[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m})[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 3, 'task_id': 3, 'completed_at': '2023-04[61 chars]e X'} != {'id': 1, 'task_id': 3, 'completed_at': '2023-04[61 chars]e X'}[0m
[1m[31mE         {'completed_at': '2023-04-01',[0m
[1m[31mE       -  'id': 3,[0m
[1m[31mE       ?        ^[0m
[1m[31mE       [0m
[1m[31mE       +  'id': 1,[0m
[1m[31mE       ?        ^[0m
[1m[31mE       [0m
[1m[31mE          'impact_notes': 'Impacts feature X',[0m
[1m[31mE          'related_tasks': '2,3',[0m
[1m[31mE          'task_id': 3}[0m

[1m[31mtests/unit/test_database.py[0m:27: AssertionError
[31m[1m_______ TestDatabase.test_create_and_retrieve_coordination_capabilities ________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_coordination_capabilities>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_coordination_capabilities[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        capability1 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mScheduling[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task scheduling[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        capability2 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mNotifications[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task notifications[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability2)[90m[39;49;00m
        capabilities = [96mself[39;49;00m.db.get_coordination_capabilities()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(capabilities), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(capabilities[[94m0[39;49;00m], capability1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 5, 'name': 'Scheduling', 'description': 'Coordinate task scheduling'} != {'name': 'Scheduling', 'description': 'Coordinate task scheduling'}[0m
[1m[31mE       - {'description': 'Coordinate task scheduling', 'id': 5, 'name': 'Scheduling'}[0m
[1m[31mE       ?                                               ---------[0m
[1m[31mE       [0m
[1m[31mE       + {'description': 'Coordinate task scheduling', 'name': 'Scheduling'}[0m

[1m[31mtests/unit/test_database.py[0m:46: AssertionError
[31m[1m_________ TestDatabase.test_create_and_retrieve_implementation_details _________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_implementation_details>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_implementation_details[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        detail1 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mUI[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement button functionality[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        detail2 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mBackend[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement API endpoint[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail2)[90m[39;49;00m
        details = [96mself[39;49;00m.db.get_implementation_details()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(details), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(details[[94m0[39;49;00m], detail1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 60, 'component': 'UI', 'description': 'Implement button functionality'} != {'component': 'UI', 'description': 'Implement button functionality'}[0m
[1m[31mE       - {'component': 'UI', 'description': 'Implement button functionality', 'id': 60}[0m
[1m[31mE       ?                                                                    ----------[0m
[1m[31mE       [0m
[1m[31mE       + {'component': 'UI', 'description': 'Implement button functionality'}[0m

[1m[31mtests/unit/test_database.py[0m:36: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_commit_task[0m - AssertionError: {'id': 3, 'task_id': 3, 'completed_at': '2023-04[61 chars]e...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_coordination_capabilities[0m - AssertionError: {'id': 5, 'name': 'Scheduling', 'description': 'Coordinate ...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_implementation_details[0m - AssertionError: {'id': 60, 'component': 'UI', 'description': 'Implement but...
[31m========================= [31m[1m3 failed[0m, [32m3 passed[0m[31m in 2.30s[0m[31m ==========================[0m

2024-10-08 17:48:52,142 - ERROR - Command error: 
2024-10-08 17:49:10,607 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:49:23,892 - ERROR - Error running unit tests: Command '['pytest', '--color=yes', '/home/formidablepencil/envy/tests/unit']' returned non-zero exit status 1.
2024-10-08 17:49:23,892 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.2, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/formidablepencil/envy
configfile: pytest.ini
plugins: anyio-4.6.0
collected 6 items

tests/unit/test_database.py [31mF[0m[31mF[0m[31mF[0m[31m                                          [ 50%][0m
tests/unit/test_py.py [32m.[0m[32m.[0m[32m.[0m[31m                                                [100%][0m

=================================== FAILURES ===================================
[31m[1m________________________ TestDatabase.test_commit_task _________________________[0m

self = <test_database.TestDatabase testMethod=test_commit_task>

    [0m[94mdef[39;49;00m [92mtest_commit_task[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        task = {[33m"[39;49;00m[33mtitle[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mTask 1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mDo something[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        task_id = [96mself[39;49;00m.db.commit_task(task, [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        tasks = [96mself[39;49;00m.db.get_tasks()[90m[39;49;00m
        records = [96mself[39;49;00m.db.get_completion_records()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(tasks), [94m1[39;49;00m)[90m[39;49;00m
        [96mself[39;49;00m.assertDictEqual(tasks[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: task_id, **task})[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(records), [94m1[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(records[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: [94m1[39;49;00m, [33m'[39;49;00m[33mtask_id[39;49;00m[33m'[39;49;00m: task_id, [33m'[39;49;00m[33mcompleted_at[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mrelated_tasks[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mimpact_notes[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m})[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 4, 'task_id': 4, 'completed_at': '2023-04[61 chars]e X'} != {'id': 1, 'task_id': 4, 'completed_at': '2023-04[61 chars]e X'}[0m
[1m[31mE         {'completed_at': '2023-04-01',[0m
[1m[31mE       -  'id': 4,[0m
[1m[31mE       ?        ^[0m
[1m[31mE       [0m
[1m[31mE       +  'id': 1,[0m
[1m[31mE       ?        ^[0m
[1m[31mE       [0m
[1m[31mE          'impact_notes': 'Impacts feature X',[0m
[1m[31mE          'related_tasks': '2,3',[0m
[1m[31mE          'task_id': 4}[0m

[1m[31mtests/unit/test_database.py[0m:27: AssertionError
[31m[1m_______ TestDatabase.test_create_and_retrieve_coordination_capabilities ________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_coordination_capabilities>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_coordination_capabilities[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        capability1 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mScheduling[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task scheduling[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        capability2 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mNotifications[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task notifications[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability2)[90m[39;49;00m
        capabilities = [96mself[39;49;00m.db.get_coordination_capabilities()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(capabilities), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(capabilities[[94m0[39;49;00m], capability1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 7, 'name': 'Scheduling', 'description': 'Coordinate task scheduling'} != {'name': 'Scheduling', 'description': 'Coordinate task scheduling'}[0m
[1m[31mE       - {'description': 'Coordinate task scheduling', 'id': 7, 'name': 'Scheduling'}[0m
[1m[31mE       ?                                               ---------[0m
[1m[31mE       [0m
[1m[31mE       + {'description': 'Coordinate task scheduling', 'name': 'Scheduling'}[0m

[1m[31mtests/unit/test_database.py[0m:46: AssertionError
[31m[1m_________ TestDatabase.test_create_and_retrieve_implementation_details _________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_implementation_details>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_implementation_details[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        detail1 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mUI[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement button functionality[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        detail2 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mBackend[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement API endpoint[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail2)[90m[39;49;00m
        details = [96mself[39;49;00m.db.get_implementation_details()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(details), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(details[[94m0[39;49;00m], detail1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 62, 'component': 'UI', 'description': 'Implement button functionality'} != {'component': 'UI', 'description': 'Implement button functionality'}[0m
[1m[31mE       - {'component': 'UI', 'description': 'Implement button functionality', 'id': 62}[0m
[1m[31mE       ?                                                                    ----------[0m
[1m[31mE       [0m
[1m[31mE       + {'component': 'UI', 'description': 'Implement button functionality'}[0m

[1m[31mtests/unit/test_database.py[0m:36: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_commit_task[0m - AssertionError: {'id': 4, 'task_id': 4, 'completed_at': '2023-04[61 chars]e...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_coordination_capabilities[0m - AssertionError: {'id': 7, 'name': 'Scheduling', 'description': 'Coordinate ...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_implementation_details[0m - AssertionError: {'id': 62, 'component': 'UI', 'description': 'Implement but...
[31m========================= [31m[1m3 failed[0m, [32m3 passed[0m[31m in 1.69s[0m[31m ==========================[0m

2024-10-08 17:49:23,894 - ERROR - Command error: 
2024-10-08 17:51:00,042 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:51:11,758 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:57:54,966 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:57:57,338 - ERROR - Error running unit tests: Command '['pytest', '--color=yes', '/home/formidablepencil/envy/tests/unit']' returned non-zero exit status 1.
2024-10-08 17:57:57,338 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.2, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/formidablepencil/envy
configfile: pytest.ini
plugins: anyio-4.6.0
collected 6 items

tests/unit/test_database.py [31mF[0m[31mF[0m[31mF[0m[31m                                          [ 50%][0m
tests/unit/test_py.py [32m.[0m[32m.[0m[32m.[0m[31m                                                [100%][0m

=================================== FAILURES ===================================
[31m[1m________________________ TestDatabase.test_commit_task _________________________[0m

self = <test_database.TestDatabase testMethod=test_commit_task>

    [0m[94mdef[39;49;00m [92mtest_commit_task[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        task = {[33m"[39;49;00m[33mtitle[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mTask 1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mDo something[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        task_id = [96mself[39;49;00m.db.commit_task(task, [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        tasks = [96mself[39;49;00m.db.get_tasks()[90m[39;49;00m
        records = [96mself[39;49;00m.db.get_completion_records()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(tasks), [94m1[39;49;00m)[90m[39;49;00m
        [96mself[39;49;00m.assertDictEqual(tasks[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: task_id, **task})[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(records), [94m1[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(records[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: [94m1[39;49;00m, [33m'[39;49;00m[33mtask_id[39;49;00m[33m'[39;49;00m: task_id, [33m'[39;49;00m[33mcompleted_at[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mrelated_tasks[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mimpact_notes[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m})[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 5, 'task_id': 5, 'completed_at': '2023-04[61 chars]e X'} != {'id': 1, 'task_id': 5, 'completed_at': '2023-04[61 chars]e X'}[0m
[1m[31mE         {'completed_at': '2023-04-01',[0m
[1m[31mE       -  'id': 5,[0m
[1m[31mE       ?        ^[0m
[1m[31mE       [0m
[1m[31mE       +  'id': 1,[0m
[1m[31mE       ?        ^[0m
[1m[31mE       [0m
[1m[31mE          'impact_notes': 'Impacts feature X',[0m
[1m[31mE          'related_tasks': '2,3',[0m
[1m[31mE          'task_id': 5}[0m

[1m[31mtests/unit/test_database.py[0m:27: AssertionError
[31m[1m_______ TestDatabase.test_create_and_retrieve_coordination_capabilities ________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_coordination_capabilities>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_coordination_capabilities[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        capability1 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mScheduling[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task scheduling[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        capability2 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mNotifications[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task notifications[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability2)[90m[39;49;00m
        capabilities = [96mself[39;49;00m.db.get_coordination_capabilities()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(capabilities), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(capabilities[[94m0[39;49;00m], capability1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 9, 'name': 'Scheduling', 'description': 'Coordinate task scheduling'} != {'name': 'Scheduling', 'description': 'Coordinate task scheduling'}[0m
[1m[31mE       - {'description': 'Coordinate task scheduling', 'id': 9, 'name': 'Scheduling'}[0m
[1m[31mE       ?                                               ---------[0m
[1m[31mE       [0m
[1m[31mE       + {'description': 'Coordinate task scheduling', 'name': 'Scheduling'}[0m

[1m[31mtests/unit/test_database.py[0m:46: AssertionError
[31m[1m_________ TestDatabase.test_create_and_retrieve_implementation_details _________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_implementation_details>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_implementation_details[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        detail1 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mUI[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement button functionality[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        detail2 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mBackend[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement API endpoint[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail2)[90m[39;49;00m
        details = [96mself[39;49;00m.db.get_implementation_details()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(details), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(details[[94m0[39;49;00m], detail1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 64, 'component': 'UI', 'description': 'Implement button functionality'} != {'component': 'UI', 'description': 'Implement button functionality'}[0m
[1m[31mE       - {'component': 'UI', 'description': 'Implement button functionality', 'id': 64}[0m
[1m[31mE       ?                                                                    ----------[0m
[1m[31mE       [0m
[1m[31mE       + {'component': 'UI', 'description': 'Implement button functionality'}[0m

[1m[31mtests/unit/test_database.py[0m:36: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_commit_task[0m - AssertionError: {'id': 5, 'task_id': 5, 'completed_at': '2023-04[61 chars]e...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_coordination_capabilities[0m - AssertionError: {'id': 9, 'name': 'Scheduling', 'description': 'Coordinate ...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_implementation_details[0m - AssertionError: {'id': 64, 'component': 'UI', 'description': 'Implement but...
[31m========================= [31m[1m3 failed[0m, [32m3 passed[0m[31m in 0.37s[0m[31m ==========================[0m

2024-10-08 17:57:57,339 - ERROR - Command error: 
2024-10-08 17:58:09,312 - INFO - PYTHONPATH set to default: envy
2024-10-08 17:58:12,030 - ERROR - Error running unit tests: Command '['pytest', '--color=yes', '/home/formidablepencil/envy/tests/unit']' returned non-zero exit status 1.
2024-10-08 17:58:12,031 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.2, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/formidablepencil/envy
configfile: pytest.ini
plugins: anyio-4.6.0
collected 6 items

tests/unit/test_database.py [31mF[0m[31mF[0m[31mF[0m[31m                                          [ 50%][0m
tests/unit/test_py.py [32m.[0m[32m.[0m[32m.[0m[31m                                                [100%][0m

=================================== FAILURES ===================================
[31m[1m________________________ TestDatabase.test_commit_task _________________________[0m

self = <test_database.TestDatabase testMethod=test_commit_task>

    [0m[94mdef[39;49;00m [92mtest_commit_task[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        task = {[33m"[39;49;00m[33mtitle[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mTask 1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mDo something[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        task_id = [96mself[39;49;00m.db.commit_task(task, [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        tasks = [96mself[39;49;00m.db.get_tasks()[90m[39;49;00m
        records = [96mself[39;49;00m.db.get_completion_records()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(tasks), [94m1[39;49;00m)[90m[39;49;00m
        [96mself[39;49;00m.assertDictEqual(tasks[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: task_id, **task})[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(records), [94m1[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(records[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: [94m1[39;49;00m, [33m'[39;49;00m[33mtask_id[39;49;00m[33m'[39;49;00m: task_id, [33m'[39;49;00m[33mcompleted_at[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mrelated_tasks[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mimpact_notes[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m})[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 6, 'task_id': 6, 'completed_at': '2023-04[61 chars]e X'} != {'id': 1, 'task_id': 6, 'completed_at': '2023-04[61 chars]e X'}[0m
[1m[31mE         {'completed_at': '2023-04-01',[0m
[1m[31mE       -  'id': 6,[0m
[1m[31mE       ?        ^[0m
[1m[31mE       [0m
[1m[31mE       +  'id': 1,[0m
[1m[31mE       ?        ^[0m
[1m[31mE       [0m
[1m[31mE          'impact_notes': 'Impacts feature X',[0m
[1m[31mE          'related_tasks': '2,3',[0m
[1m[31mE          'task_id': 6}[0m

[1m[31mtests/unit/test_database.py[0m:27: AssertionError
[31m[1m_______ TestDatabase.test_create_and_retrieve_coordination_capabilities ________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_coordination_capabilities>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_coordination_capabilities[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        capability1 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mScheduling[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task scheduling[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        capability2 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mNotifications[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task notifications[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability2)[90m[39;49;00m
        capabilities = [96mself[39;49;00m.db.get_coordination_capabilities()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(capabilities), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(capabilities[[94m0[39;49;00m], capability1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 11, 'name': 'Scheduling', 'description': 'Coordinate task scheduling'} != {'name': 'Scheduling', 'description': 'Coordinate task scheduling'}[0m
[1m[31mE       - {'description': 'Coordinate task scheduling', 'id': 11, 'name': 'Scheduling'}[0m
[1m[31mE       ?                                               ----------[0m
[1m[31mE       [0m
[1m[31mE       + {'description': 'Coordinate task scheduling', 'name': 'Scheduling'}[0m

[1m[31mtests/unit/test_database.py[0m:46: AssertionError
[31m[1m_________ TestDatabase.test_create_and_retrieve_implementation_details _________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_implementation_details>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_implementation_details[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        detail1 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mUI[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement button functionality[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        detail2 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mBackend[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement API endpoint[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail2)[90m[39;49;00m
        details = [96mself[39;49;00m.db.get_implementation_details()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(details), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(details[[94m0[39;49;00m], detail1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 66, 'component': 'UI', 'description': 'Implement button functionality'} != {'component': 'UI', 'description': 'Implement button functionality'}[0m
[1m[31mE       - {'component': 'UI', 'description': 'Implement button functionality', 'id': 66}[0m
[1m[31mE       ?                                                                    ----------[0m
[1m[31mE       [0m
[1m[31mE       + {'component': 'UI', 'description': 'Implement button functionality'}[0m

[1m[31mtests/unit/test_database.py[0m:36: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_commit_task[0m - AssertionError: {'id': 6, 'task_id': 6, 'completed_at': '2023-04[61 chars]e...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_coordination_capabilities[0m - AssertionError: {'id': 11, 'name': 'Scheduling', 'description': 'Coordinate...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_implementation_details[0m - AssertionError: {'id': 66, 'component': 'UI', 'description': 'Implement but...
[31m========================= [31m[1m3 failed[0m, [32m3 passed[0m[31m in 0.41s[0m[31m ==========================[0m

2024-10-08 17:58:12,031 - ERROR - Command error: 
2024-10-08 18:18:35,954 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:18:38,901 - ERROR - Error running unit tests: Command '['pytest', '--color=yes', '/home/formidablepencil/envy/tests/unit']' returned non-zero exit status 1.
2024-10-08 18:18:38,901 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.2, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/formidablepencil/envy
configfile: pytest.ini
plugins: anyio-4.6.0
collected 6 items

tests/unit/test_database.py [31mF[0m[31mF[0m[31mF[0m[31m                                          [ 50%][0m
tests/unit/test_py.py [32m.[0m[32m.[0m[32m.[0m[31m                                                [100%][0m

=================================== FAILURES ===================================
[31m[1m________________________ TestDatabase.test_commit_task _________________________[0m

self = <test_database.TestDatabase testMethod=test_commit_task>

    [0m[94mdef[39;49;00m [92mtest_commit_task[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        task = {[33m"[39;49;00m[33mtitle[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mTask 1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mDo something[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        task_id = [96mself[39;49;00m.db.commit_task(task, [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        tasks = [96mself[39;49;00m.db.get_tasks()[90m[39;49;00m
        records = [96mself[39;49;00m.db.get_completion_records()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(tasks), [94m1[39;49;00m)[90m[39;49;00m
        [96mself[39;49;00m.assertDictEqual(tasks[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: task_id, **task})[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(records), [94m1[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(records[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: [94m1[39;49;00m, [33m'[39;49;00m[33mtask_id[39;49;00m[33m'[39;49;00m: task_id, [33m'[39;49;00m[33mcompleted_at[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mrelated_tasks[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mimpact_notes[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m})[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 7, 'task_id': 7, 'completed_at': '2023-04[61 chars]e X'} != {'id': 1, 'task_id': 7, 'completed_at': '2023-04[61 chars]e X'}[0m
[1m[31mE         {'completed_at': '2023-04-01',[0m
[1m[31mE       -  'id': 7,[0m
[1m[31mE       ?        ^[0m
[1m[31mE       [0m
[1m[31mE       +  'id': 1,[0m
[1m[31mE       ?        ^[0m
[1m[31mE       [0m
[1m[31mE          'impact_notes': 'Impacts feature X',[0m
[1m[31mE          'related_tasks': '2,3',[0m
[1m[31mE          'task_id': 7}[0m

[1m[31mtests/unit/test_database.py[0m:27: AssertionError
[31m[1m_______ TestDatabase.test_create_and_retrieve_coordination_capabilities ________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_coordination_capabilities>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_coordination_capabilities[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        capability1 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mScheduling[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task scheduling[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        capability2 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mNotifications[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task notifications[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability2)[90m[39;49;00m
        capabilities = [96mself[39;49;00m.db.get_coordination_capabilities()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(capabilities), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(capabilities[[94m0[39;49;00m], capability1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 13, 'name': 'Scheduling', 'description': 'Coordinate task scheduling'} != {'name': 'Scheduling', 'description': 'Coordinate task scheduling'}[0m
[1m[31mE       - {'description': 'Coordinate task scheduling', 'id': 13, 'name': 'Scheduling'}[0m
[1m[31mE       ?                                               ----------[0m
[1m[31mE       [0m
[1m[31mE       + {'description': 'Coordinate task scheduling', 'name': 'Scheduling'}[0m

[1m[31mtests/unit/test_database.py[0m:46: AssertionError
[31m[1m_________ TestDatabase.test_create_and_retrieve_implementation_details _________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_implementation_details>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_implementation_details[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        detail1 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mUI[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement button functionality[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        detail2 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mBackend[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement API endpoint[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail2)[90m[39;49;00m
        details = [96mself[39;49;00m.db.get_implementation_details()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(details), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(details[[94m0[39;49;00m], detail1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 68, 'component': 'UI', 'description': 'Implement button functionality'} != {'component': 'UI', 'description': 'Implement button functionality'}[0m
[1m[31mE       - {'component': 'UI', 'description': 'Implement button functionality', 'id': 68}[0m
[1m[31mE       ?                                                                    ----------[0m
[1m[31mE       [0m
[1m[31mE       + {'component': 'UI', 'description': 'Implement button functionality'}[0m

[1m[31mtests/unit/test_database.py[0m:36: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_commit_task[0m - AssertionError: {'id': 7, 'task_id': 7, 'completed_at': '2023-04[61 chars]e...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_coordination_capabilities[0m - AssertionError: {'id': 13, 'name': 'Scheduling', 'description': 'Coordinate...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_implementation_details[0m - AssertionError: {'id': 68, 'component': 'UI', 'description': 'Implement but...
[31m========================= [31m[1m3 failed[0m, [32m3 passed[0m[31m in 0.42s[0m[31m ==========================[0m

2024-10-08 18:18:38,901 - ERROR - Command error: 
2024-10-08 18:18:52,273 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:18:52,273 - INFO - Running integration tests for ./py in directory: /home/formidablepencil/envy/
2024-10-08 18:18:54,902 - ERROR - Error running command: Command '['pytest', '--color=yes', '/home/formidablepencil/envy/', '-k', 'unit']' returned non-zero exit status 2.
2024-10-08 18:18:54,903 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.2, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/formidablepencil/envy
configfile: pytest.ini
plugins: anyio-4.6.0
collected 17 items / 3 errors / 14 deselected / 3 selected

==================================== ERRORS ====================================
[31m[1m__________ ERROR collecting codebase_manager/test_codebase_manager.py __________[0m
[31mImportError while importing test module '/home/formidablepencil/envy/codebase_manager/test_codebase_manager.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
codebase_manager/test_codebase_manager.py:3: in <module>
    from codebase_manager import CodebaseManager
codebase_manager/codebase_manager.py:3: in <module>
    from version_control_manager import VersionControlManager
E   ModuleNotFoundError: No module named 'version_control_manager'[0m
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /home/formidablepencil/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /home/formidablepencil/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[31m[1m___________ ERROR collecting version_control/test_auto_versioning.py ___________[0m
[31mImportError while importing test module '/home/formidablepencil/envy/version_control/test_auto_versioning.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
version_control/test_auto_versioning.py:1: in <module>
    from .git_operations import (
E   ModuleNotFoundError: No module named 'envy.version_control.git_operations'[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m codebase_manager/test_codebase_manager.py
[31mERROR[0m tests/unit/test_py.py
[31mERROR[0m version_control/test_auto_versioning.py
!!!!!!!!!!!!!!!!!!! Interrupted: 3 errors during collection !!!!!!!!!!!!!!!!!!!!
[31m======================= [33m14 deselected[0m, [31m[1m3 errors[0m[31m in 0.47s[0m[31m =======================[0m

2024-10-08 18:18:54,903 - ERROR - Command error: 
2024-10-08 18:19:18,980 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:19:18,980 - INFO - Running unit tests for ./py in directory: /home/formidablepencil/envy/
2024-10-08 18:19:21,726 - ERROR - Error running command: Command '['pytest', '--color=yes', '/home/formidablepencil/envy/', '-k', 'unit']' returned non-zero exit status 2.
2024-10-08 18:19:21,727 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.2, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/formidablepencil/envy
configfile: pytest.ini
plugins: anyio-4.6.0
collected 17 items / 3 errors / 14 deselected / 3 selected

==================================== ERRORS ====================================
[31m[1m__________ ERROR collecting codebase_manager/test_codebase_manager.py __________[0m
[31mImportError while importing test module '/home/formidablepencil/envy/codebase_manager/test_codebase_manager.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
codebase_manager/test_codebase_manager.py:3: in <module>
    from codebase_manager import CodebaseManager
codebase_manager/codebase_manager.py:3: in <module>
    from version_control_manager import VersionControlManager
E   ModuleNotFoundError: No module named 'version_control_manager'[0m
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /home/formidablepencil/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /home/formidablepencil/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[31m[1m___________ ERROR collecting version_control/test_auto_versioning.py ___________[0m
[31mImportError while importing test module '/home/formidablepencil/envy/version_control/test_auto_versioning.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
version_control/test_auto_versioning.py:1: in <module>
    from .git_operations import (
E   ModuleNotFoundError: No module named 'envy.version_control.git_operations'[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m codebase_manager/test_codebase_manager.py
[31mERROR[0m tests/unit/test_py.py
[31mERROR[0m version_control/test_auto_versioning.py
!!!!!!!!!!!!!!!!!!! Interrupted: 3 errors during collection !!!!!!!!!!!!!!!!!!!!
[31m======================= [33m14 deselected[0m, [31m[1m3 errors[0m[31m in 0.36s[0m[31m =======================[0m

2024-10-08 18:19:21,727 - ERROR - Command error: 
2024-10-08 18:19:32,351 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:19:32,352 - INFO - Running integration tests for ./py in directory: /home/formidablepencil/envy/
2024-10-08 18:19:34,936 - ERROR - Error running command: Command '['pytest', '--color=yes', '/home/formidablepencil/envy/', '-k', 'unit']' returned non-zero exit status 2.
2024-10-08 18:19:34,937 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.2, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/formidablepencil/envy
configfile: pytest.ini
plugins: anyio-4.6.0
collected 17 items / 3 errors / 14 deselected / 3 selected

==================================== ERRORS ====================================
[31m[1m__________ ERROR collecting codebase_manager/test_codebase_manager.py __________[0m
[31mImportError while importing test module '/home/formidablepencil/envy/codebase_manager/test_codebase_manager.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
codebase_manager/test_codebase_manager.py:3: in <module>
    from codebase_manager import CodebaseManager
codebase_manager/codebase_manager.py:3: in <module>
    from version_control_manager import VersionControlManager
E   ModuleNotFoundError: No module named 'version_control_manager'[0m
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /home/formidablepencil/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /home/formidablepencil/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[31m[1m___________ ERROR collecting version_control/test_auto_versioning.py ___________[0m
[31mImportError while importing test module '/home/formidablepencil/envy/version_control/test_auto_versioning.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
version_control/test_auto_versioning.py:1: in <module>
    from .git_operations import (
E   ModuleNotFoundError: No module named 'envy.version_control.git_operations'[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m codebase_manager/test_codebase_manager.py
[31mERROR[0m tests/unit/test_py.py
[31mERROR[0m version_control/test_auto_versioning.py
!!!!!!!!!!!!!!!!!!! Interrupted: 3 errors during collection !!!!!!!!!!!!!!!!!!!!
[31m======================= [33m14 deselected[0m, [31m[1m3 errors[0m[31m in 0.38s[0m[31m =======================[0m

2024-10-08 18:19:34,937 - ERROR - Command error: 
2024-10-08 18:19:43,336 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:19:47,193 - ERROR - Error running unit tests: Command '['pytest', '--color=yes', '/home/formidablepencil/envy/tests/unit']' returned non-zero exit status 1.
2024-10-08 18:19:47,193 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.2, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/formidablepencil/envy
configfile: pytest.ini
plugins: anyio-4.6.0
collected 6 items

tests/unit/test_database.py [31mF[0m[31mF[0m[31mF[0m[31m                                          [ 50%][0m
tests/unit/test_py.py [32m.[0m[32m.[0m[32m.[0m[31m                                                [100%][0m

=================================== FAILURES ===================================
[31m[1m________________________ TestDatabase.test_commit_task _________________________[0m

self = <test_database.TestDatabase testMethod=test_commit_task>

    [0m[94mdef[39;49;00m [92mtest_commit_task[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        task = {[33m"[39;49;00m[33mtitle[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mTask 1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mDo something[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        task_id = [96mself[39;49;00m.db.commit_task(task, [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        tasks = [96mself[39;49;00m.db.get_tasks()[90m[39;49;00m
        records = [96mself[39;49;00m.db.get_completion_records()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(tasks), [94m1[39;49;00m)[90m[39;49;00m
        [96mself[39;49;00m.assertDictEqual(tasks[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: task_id, **task})[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(records), [94m1[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(records[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: [94m1[39;49;00m, [33m'[39;49;00m[33mtask_id[39;49;00m[33m'[39;49;00m: task_id, [33m'[39;49;00m[33mcompleted_at[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mrelated_tasks[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mimpact_notes[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m})[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 8, 'task_id': 8, 'completed_at': '2023-04[61 chars]e X'} != {'id': 1, 'task_id': 8, 'completed_at': '2023-04[61 chars]e X'}[0m
[1m[31mE         {'completed_at': '2023-04-01',[0m
[1m[31mE       -  'id': 8,[0m
[1m[31mE       ?        ^[0m
[1m[31mE       [0m
[1m[31mE       +  'id': 1,[0m
[1m[31mE       ?        ^[0m
[1m[31mE       [0m
[1m[31mE          'impact_notes': 'Impacts feature X',[0m
[1m[31mE          'related_tasks': '2,3',[0m
[1m[31mE          'task_id': 8}[0m

[1m[31mtests/unit/test_database.py[0m:27: AssertionError
[31m[1m_______ TestDatabase.test_create_and_retrieve_coordination_capabilities ________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_coordination_capabilities>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_coordination_capabilities[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        capability1 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mScheduling[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task scheduling[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        capability2 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mNotifications[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task notifications[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability2)[90m[39;49;00m
        capabilities = [96mself[39;49;00m.db.get_coordination_capabilities()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(capabilities), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(capabilities[[94m0[39;49;00m], capability1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 15, 'name': 'Scheduling', 'description': 'Coordinate task scheduling'} != {'name': 'Scheduling', 'description': 'Coordinate task scheduling'}[0m
[1m[31mE       - {'description': 'Coordinate task scheduling', 'id': 15, 'name': 'Scheduling'}[0m
[1m[31mE       ?                                               ----------[0m
[1m[31mE       [0m
[1m[31mE       + {'description': 'Coordinate task scheduling', 'name': 'Scheduling'}[0m

[1m[31mtests/unit/test_database.py[0m:46: AssertionError
[31m[1m_________ TestDatabase.test_create_and_retrieve_implementation_details _________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_implementation_details>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_implementation_details[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        detail1 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mUI[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement button functionality[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        detail2 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mBackend[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement API endpoint[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail2)[90m[39;49;00m
        details = [96mself[39;49;00m.db.get_implementation_details()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(details), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(details[[94m0[39;49;00m], detail1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 70, 'component': 'UI', 'description': 'Implement button functionality'} != {'component': 'UI', 'description': 'Implement button functionality'}[0m
[1m[31mE       - {'component': 'UI', 'description': 'Implement button functionality', 'id': 70}[0m
[1m[31mE       ?                                                                    ----------[0m
[1m[31mE       [0m
[1m[31mE       + {'component': 'UI', 'description': 'Implement button functionality'}[0m

[1m[31mtests/unit/test_database.py[0m:36: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_commit_task[0m - AssertionError: {'id': 8, 'task_id': 8, 'completed_at': '2023-04[61 chars]e...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_coordination_capabilities[0m - AssertionError: {'id': 15, 'name': 'Scheduling', 'description': 'Coordinate...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_implementation_details[0m - AssertionError: {'id': 70, 'component': 'UI', 'description': 'Implement but...
[31m========================= [31m[1m3 failed[0m, [32m3 passed[0m[31m in 0.94s[0m[31m ==========================[0m

2024-10-08 18:19:47,194 - ERROR - Command error: 
2024-10-08 18:21:08,219 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:21:08,223 - INFO - Running unit tests for ./py in directory: /home/formidablepencil/envy/
2024-10-08 18:21:13,306 - ERROR - Error running command: Command '['pytest', '--color=yes', '/home/formidablepencil/envy/', '-k', 'unit']' returned non-zero exit status 2.
2024-10-08 18:21:13,317 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.2, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/formidablepencil/envy
configfile: pytest.ini
plugins: anyio-4.6.0
collected 17 items / 3 errors / 14 deselected / 3 selected

==================================== ERRORS ====================================
[31m[1m__________ ERROR collecting codebase_manager/test_codebase_manager.py __________[0m
[31mImportError while importing test module '/home/formidablepencil/envy/codebase_manager/test_codebase_manager.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
codebase_manager/test_codebase_manager.py:3: in <module>
    from codebase_manager import CodebaseManager
codebase_manager/codebase_manager.py:3: in <module>
    from version_control_manager import VersionControlManager
E   ModuleNotFoundError: No module named 'version_control_manager'[0m
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /home/formidablepencil/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /home/formidablepencil/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[31m[1m___________ ERROR collecting version_control/test_auto_versioning.py ___________[0m
[31mImportError while importing test module '/home/formidablepencil/envy/version_control/test_auto_versioning.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
version_control/test_auto_versioning.py:1: in <module>
    from .git_operations import (
E   ModuleNotFoundError: No module named 'envy.version_control.git_operations'[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m codebase_manager/test_codebase_manager.py
[31mERROR[0m tests/unit/test_py.py
[31mERROR[0m version_control/test_auto_versioning.py
!!!!!!!!!!!!!!!!!!! Interrupted: 3 errors during collection !!!!!!!!!!!!!!!!!!!!
[31m======================= [33m14 deselected[0m, [31m[1m3 errors[0m[31m in 1.24s[0m[31m =======================[0m

2024-10-08 18:21:13,318 - ERROR - Command error: 
2024-10-08 18:21:46,467 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:21:46,467 - INFO - Running integration tests for ./py in directory: /home/formidablepencil/envy/
2024-10-08 18:21:50,587 - ERROR - Error running command: Command '['pytest', '--color=yes', '/home/formidablepencil/envy/', '-k', 'unit']' returned non-zero exit status 2.
2024-10-08 18:21:50,588 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.2, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/formidablepencil/envy
configfile: pytest.ini
plugins: anyio-4.6.0
collected 17 items / 3 errors / 14 deselected / 3 selected

==================================== ERRORS ====================================
[31m[1m__________ ERROR collecting codebase_manager/test_codebase_manager.py __________[0m
[31mImportError while importing test module '/home/formidablepencil/envy/codebase_manager/test_codebase_manager.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
codebase_manager/test_codebase_manager.py:3: in <module>
    from codebase_manager import CodebaseManager
codebase_manager/codebase_manager.py:3: in <module>
    from version_control_manager import VersionControlManager
E   ModuleNotFoundError: No module named 'version_control_manager'[0m
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /home/formidablepencil/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /home/formidablepencil/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[31m[1m___________ ERROR collecting version_control/test_auto_versioning.py ___________[0m
[31mImportError while importing test module '/home/formidablepencil/envy/version_control/test_auto_versioning.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
version_control/test_auto_versioning.py:1: in <module>
    from .git_operations import (
E   ModuleNotFoundError: No module named 'envy.version_control.git_operations'[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m codebase_manager/test_codebase_manager.py
[31mERROR[0m tests/unit/test_py.py
[31mERROR[0m version_control/test_auto_versioning.py
!!!!!!!!!!!!!!!!!!! Interrupted: 3 errors during collection !!!!!!!!!!!!!!!!!!!!
[31m======================= [33m14 deselected[0m, [31m[1m3 errors[0m[31m in 0.56s[0m[31m =======================[0m

2024-10-08 18:21:50,588 - ERROR - Command error: 
2024-10-08 18:31:00,483 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:31:00,490 - INFO - Running integration tests for ./py in directory: /home/formidablepencil/envy/
2024-10-08 18:31:07,924 - ERROR - Error running command: Command '['pytest', '--color=yes', '/home/formidablepencil/envy/', '-k', 'unit']' returned non-zero exit status 2.
2024-10-08 18:31:07,925 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.2, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/formidablepencil/envy
configfile: pytest.ini
plugins: anyio-4.6.0
collected 17 items / 3 errors / 14 deselected / 3 selected

==================================== ERRORS ====================================
[31m[1m__________ ERROR collecting codebase_manager/test_codebase_manager.py __________[0m
[31mImportError while importing test module '/home/formidablepencil/envy/codebase_manager/test_codebase_manager.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
codebase_manager/test_codebase_manager.py:3: in <module>
    from codebase_manager import CodebaseManager
codebase_manager/codebase_manager.py:3: in <module>
    from version_control_manager import VersionControlManager
E   ModuleNotFoundError: No module named 'version_control_manager'[0m
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /home/formidablepencil/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /home/formidablepencil/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[31m[1m___________ ERROR collecting version_control/test_auto_versioning.py ___________[0m
[31mImportError while importing test module '/home/formidablepencil/envy/version_control/test_auto_versioning.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
version_control/test_auto_versioning.py:1: in <module>
    from .git_operations import (
E   ModuleNotFoundError: No module named 'envy.version_control.git_operations'[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m codebase_manager/test_codebase_manager.py
[31mERROR[0m tests/unit/test_py.py
[31mERROR[0m version_control/test_auto_versioning.py
!!!!!!!!!!!!!!!!!!! Interrupted: 3 errors during collection !!!!!!!!!!!!!!!!!!!!
[31m======================= [33m14 deselected[0m, [31m[1m3 errors[0m[31m in 0.79s[0m[31m =======================[0m

2024-10-08 18:31:07,926 - ERROR - Command error: 
2024-10-08 18:41:26,916 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:41:26,917 - INFO - Running integration tests for py script in directory: /home/formidablepencil/envy/tests/integration/test_py.py
2024-10-08 18:41:33,818 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:41:33,819 - INFO - Running unit tests for py script in directory: /home/formidablepencil/envy/tests/unit/test_py.py
2024-10-08 18:41:38,623 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:41:43,069 - ERROR - Error running unit tests: Command '['pytest', '--color=yes', '/home/formidablepencil/envy/tests/unit']' returned non-zero exit status 1.
2024-10-08 18:41:43,069 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.2, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/formidablepencil/envy
configfile: pytest.ini
plugins: anyio-4.6.0
collected 6 items

tests/unit/test_database.py [31mF[0m[31mF[0m[31mF[0m[31m                                          [ 50%][0m
tests/unit/test_py.py [32m.[0m[32m.[0m[32m.[0m[31m                                                [100%][0m

=================================== FAILURES ===================================
[31m[1m________________________ TestDatabase.test_commit_task _________________________[0m

self = <test_database.TestDatabase testMethod=test_commit_task>

    [0m[94mdef[39;49;00m [92mtest_commit_task[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        task = {[33m"[39;49;00m[33mtitle[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mTask 1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mDo something[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        task_id = [96mself[39;49;00m.db.commit_task(task, [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        tasks = [96mself[39;49;00m.db.get_tasks()[90m[39;49;00m
        records = [96mself[39;49;00m.db.get_completion_records()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(tasks), [94m1[39;49;00m)[90m[39;49;00m
        [96mself[39;49;00m.assertDictEqual(tasks[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: task_id, **task})[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(records), [94m1[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(records[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: [94m1[39;49;00m, [33m'[39;49;00m[33mtask_id[39;49;00m[33m'[39;49;00m: task_id, [33m'[39;49;00m[33mcompleted_at[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mrelated_tasks[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mimpact_notes[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m})[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 9, 'task_id': 9, 'completed_at': '2023-04[61 chars]e X'} != {'id': 1, 'task_id': 9, 'completed_at': '2023-04[61 chars]e X'}[0m
[1m[31mE         {'completed_at': '2023-04-01',[0m
[1m[31mE       -  'id': 9,[0m
[1m[31mE       ?        ^[0m
[1m[31mE       [0m
[1m[31mE       +  'id': 1,[0m
[1m[31mE       ?        ^[0m
[1m[31mE       [0m
[1m[31mE          'impact_notes': 'Impacts feature X',[0m
[1m[31mE          'related_tasks': '2,3',[0m
[1m[31mE          'task_id': 9}[0m

[1m[31mtests/unit/test_database.py[0m:27: AssertionError
[31m[1m_______ TestDatabase.test_create_and_retrieve_coordination_capabilities ________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_coordination_capabilities>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_coordination_capabilities[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        capability1 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mScheduling[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task scheduling[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        capability2 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mNotifications[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task notifications[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability2)[90m[39;49;00m
        capabilities = [96mself[39;49;00m.db.get_coordination_capabilities()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(capabilities), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(capabilities[[94m0[39;49;00m], capability1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 17, 'name': 'Scheduling', 'description': 'Coordinate task scheduling'} != {'name': 'Scheduling', 'description': 'Coordinate task scheduling'}[0m
[1m[31mE       - {'description': 'Coordinate task scheduling', 'id': 17, 'name': 'Scheduling'}[0m
[1m[31mE       ?                                               ----------[0m
[1m[31mE       [0m
[1m[31mE       + {'description': 'Coordinate task scheduling', 'name': 'Scheduling'}[0m

[1m[31mtests/unit/test_database.py[0m:46: AssertionError
[31m[1m_________ TestDatabase.test_create_and_retrieve_implementation_details _________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_implementation_details>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_implementation_details[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        detail1 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mUI[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement button functionality[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        detail2 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mBackend[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement API endpoint[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail2)[90m[39;49;00m
        details = [96mself[39;49;00m.db.get_implementation_details()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(details), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(details[[94m0[39;49;00m], detail1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 72, 'component': 'UI', 'description': 'Implement button functionality'} != {'component': 'UI', 'description': 'Implement button functionality'}[0m
[1m[31mE       - {'component': 'UI', 'description': 'Implement button functionality', 'id': 72}[0m
[1m[31mE       ?                                                                    ----------[0m
[1m[31mE       [0m
[1m[31mE       + {'component': 'UI', 'description': 'Implement button functionality'}[0m

[1m[31mtests/unit/test_database.py[0m:36: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_commit_task[0m - AssertionError: {'id': 9, 'task_id': 9, 'completed_at': '2023-04[61 chars]e...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_coordination_capabilities[0m - AssertionError: {'id': 17, 'name': 'Scheduling', 'description': 'Coordinate...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_implementation_details[0m - AssertionError: {'id': 72, 'component': 'UI', 'description': 'Implement but...
[31m========================= [31m[1m3 failed[0m, [32m3 passed[0m[31m in 0.42s[0m[31m ==========================[0m

2024-10-08 18:41:43,070 - ERROR - Command error: 
2024-10-08 18:43:13,164 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:43:13,165 - INFO - Running unit tests for py script in directory: /home/formidablepencil/envy/tests/unit/test_py.py
2024-10-08 18:43:22,458 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:43:22,473 - INFO - Running integration tests for py script in directory: /home/formidablepencil/envy/tests/integration/test_py.py
2024-10-08 18:43:55,794 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:43:55,795 - INFO - Running integration tests for py script in directory: /home/formidablepencil/envy/tests/integration/test_py.py
2024-10-08 18:44:49,704 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:44:49,705 - INFO - Running integration tests for py script in directory: /home/formidablepencil/envy/tests/integration/test_py.py
2024-10-08 18:49:39,718 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:49:39,722 - INFO - Running integration tests for py script in directory: /home/formidablepencil/envy/tests/integration/test_py.py
2024-10-08 18:49:54,687 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:49:54,689 - INFO - Running unit tests for py script in directory: /home/formidablepencil/envy/tests/unit/test_py.py
2024-10-08 18:55:49,179 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:55:49,180 - INFO - Running unit tests for ./py in directory: /home/formidablepencil/envy/
2024-10-08 18:55:50,258 - ERROR - Error running command: Command '['pytest', '--color=yes', '/home/formidablepencil/envy/', '-k', 'unit']' returned non-zero exit status 2.
2024-10-08 18:55:50,258 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.2, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/formidablepencil/envy
configfile: pytest.ini
plugins: anyio-4.6.0
collected 17 items / 3 errors / 14 deselected / 3 selected

==================================== ERRORS ====================================
[31m[1m__________ ERROR collecting codebase_manager/test_codebase_manager.py __________[0m
[31mImportError while importing test module '/home/formidablepencil/envy/codebase_manager/test_codebase_manager.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
codebase_manager/test_codebase_manager.py:3: in <module>
    from codebase_manager import CodebaseManager
codebase_manager/codebase_manager.py:3: in <module>
    from version_control_manager import VersionControlManager
E   ModuleNotFoundError: No module named 'version_control_manager'[0m
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /home/formidablepencil/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /home/formidablepencil/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[31m[1m___________ ERROR collecting version_control/test_auto_versioning.py ___________[0m
[31mImportError while importing test module '/home/formidablepencil/envy/version_control/test_auto_versioning.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
version_control/test_auto_versioning.py:1: in <module>
    from .git_operations import (
E   ModuleNotFoundError: No module named 'envy.version_control.git_operations'[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m codebase_manager/test_codebase_manager.py
[31mERROR[0m tests/unit/test_py.py
[31mERROR[0m version_control/test_auto_versioning.py
!!!!!!!!!!!!!!!!!!! Interrupted: 3 errors during collection !!!!!!!!!!!!!!!!!!!!
[31m======================= [33m14 deselected[0m, [31m[1m3 errors[0m[31m in 0.43s[0m[31m =======================[0m

2024-10-08 18:55:50,259 - ERROR - Command error: 
2024-10-08 18:55:59,672 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:55:59,673 - INFO - Running integration tests for ./py in directory: /home/formidablepencil/envy/
2024-10-08 18:56:00,505 - ERROR - Error running command: Command '['pytest', '--color=yes', '/home/formidablepencil/envy/', '-k', 'unit']' returned non-zero exit status 2.
2024-10-08 18:56:00,506 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.2, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/formidablepencil/envy
configfile: pytest.ini
plugins: anyio-4.6.0
collected 17 items / 3 errors / 14 deselected / 3 selected

==================================== ERRORS ====================================
[31m[1m__________ ERROR collecting codebase_manager/test_codebase_manager.py __________[0m
[31mImportError while importing test module '/home/formidablepencil/envy/codebase_manager/test_codebase_manager.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
codebase_manager/test_codebase_manager.py:3: in <module>
    from codebase_manager import CodebaseManager
codebase_manager/codebase_manager.py:3: in <module>
    from version_control_manager import VersionControlManager
E   ModuleNotFoundError: No module named 'version_control_manager'[0m
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /home/formidablepencil/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /home/formidablepencil/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[31m[1m___________ ERROR collecting version_control/test_auto_versioning.py ___________[0m
[31mImportError while importing test module '/home/formidablepencil/envy/version_control/test_auto_versioning.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
version_control/test_auto_versioning.py:1: in <module>
    from .git_operations import (
E   ModuleNotFoundError: No module named 'envy.version_control.git_operations'[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m codebase_manager/test_codebase_manager.py
[31mERROR[0m tests/unit/test_py.py
[31mERROR[0m version_control/test_auto_versioning.py
!!!!!!!!!!!!!!!!!!! Interrupted: 3 errors during collection !!!!!!!!!!!!!!!!!!!!
[31m======================= [33m14 deselected[0m, [31m[1m3 errors[0m[31m in 0.36s[0m[31m =======================[0m

2024-10-08 18:56:00,506 - ERROR - Command error: 
2024-10-08 18:56:06,635 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:56:09,563 - ERROR - Error running unit tests: Command '['pytest', '--color=yes', '/home/formidablepencil/envy/tests/unit']' returned non-zero exit status 1.
2024-10-08 18:56:09,563 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.2, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/formidablepencil/envy
configfile: pytest.ini
plugins: anyio-4.6.0
collected 6 items

tests/unit/test_database.py [31mF[0m[31mF[0m[31mF[0m[31m                                          [ 50%][0m
tests/unit/test_py.py [32m.[0m[32m.[0m[32m.[0m[31m                                                [100%][0m

=================================== FAILURES ===================================
[31m[1m________________________ TestDatabase.test_commit_task _________________________[0m

self = <test_database.TestDatabase testMethod=test_commit_task>

    [0m[94mdef[39;49;00m [92mtest_commit_task[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        task = {[33m"[39;49;00m[33mtitle[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mTask 1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mDo something[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        task_id = [96mself[39;49;00m.db.commit_task(task, [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        tasks = [96mself[39;49;00m.db.get_tasks()[90m[39;49;00m
        records = [96mself[39;49;00m.db.get_completion_records()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(tasks), [94m1[39;49;00m)[90m[39;49;00m
        [96mself[39;49;00m.assertDictEqual(tasks[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: task_id, **task})[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(records), [94m1[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(records[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: [94m1[39;49;00m, [33m'[39;49;00m[33mtask_id[39;49;00m[33m'[39;49;00m: task_id, [33m'[39;49;00m[33mcompleted_at[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mrelated_tasks[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mimpact_notes[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m})[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 10, 'task_id': 10, 'completed_at': '2023-0[62 chars]e X'} != {'id': 1, 'task_id': 10, 'completed_at': '2023-04[61 chars]e X'}[0m
[1m[31mE         {'completed_at': '2023-04-01',[0m
[1m[31mE       -  'id': 10,[0m
[1m[31mE       ?         -[0m
[1m[31mE       [0m
[1m[31mE       +  'id': 1,[0m
[1m[31mE          'impact_notes': 'Impacts feature X',[0m
[1m[31mE          'related_tasks': '2,3',[0m
[1m[31mE          'task_id': 10}[0m

[1m[31mtests/unit/test_database.py[0m:27: AssertionError
[31m[1m_______ TestDatabase.test_create_and_retrieve_coordination_capabilities ________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_coordination_capabilities>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_coordination_capabilities[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        capability1 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mScheduling[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task scheduling[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        capability2 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mNotifications[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task notifications[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability2)[90m[39;49;00m
        capabilities = [96mself[39;49;00m.db.get_coordination_capabilities()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(capabilities), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(capabilities[[94m0[39;49;00m], capability1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 19, 'name': 'Scheduling', 'description': 'Coordinate task scheduling'} != {'name': 'Scheduling', 'description': 'Coordinate task scheduling'}[0m
[1m[31mE       - {'description': 'Coordinate task scheduling', 'id': 19, 'name': 'Scheduling'}[0m
[1m[31mE       ?                                               ----------[0m
[1m[31mE       [0m
[1m[31mE       + {'description': 'Coordinate task scheduling', 'name': 'Scheduling'}[0m

[1m[31mtests/unit/test_database.py[0m:46: AssertionError
[31m[1m_________ TestDatabase.test_create_and_retrieve_implementation_details _________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_implementation_details>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_implementation_details[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        detail1 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mUI[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement button functionality[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        detail2 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mBackend[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement API endpoint[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail2)[90m[39;49;00m
        details = [96mself[39;49;00m.db.get_implementation_details()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(details), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(details[[94m0[39;49;00m], detail1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 74, 'component': 'UI', 'description': 'Implement button functionality'} != {'component': 'UI', 'description': 'Implement button functionality'}[0m
[1m[31mE       - {'component': 'UI', 'description': 'Implement button functionality', 'id': 74}[0m
[1m[31mE       ?                                                                    ----------[0m
[1m[31mE       [0m
[1m[31mE       + {'component': 'UI', 'description': 'Implement button functionality'}[0m

[1m[31mtests/unit/test_database.py[0m:36: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_commit_task[0m - AssertionError: {'id': 10, 'task_id': 10, 'completed_at': '2023-0[62 chars]...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_coordination_capabilities[0m - AssertionError: {'id': 19, 'name': 'Scheduling', 'description': 'Coordinate...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_implementation_details[0m - AssertionError: {'id': 74, 'component': 'UI', 'description': 'Implement but...
[31m========================= [31m[1m3 failed[0m, [32m3 passed[0m[31m in 0.41s[0m[31m ==========================[0m

2024-10-08 18:56:09,563 - ERROR - Command error: 
2024-10-08 18:56:30,152 - INFO - PYTHONPATH set to default: envy
2024-10-08 18:56:30,154 - INFO - Running integration tests for ./py in directory: /home/formidablepencil/envy/
2024-10-08 18:56:31,522 - ERROR - Error running command: Command '['pytest', '--color=yes', '/home/formidablepencil/envy/', '-k', 'unit']' returned non-zero exit status 2.
2024-10-08 18:56:31,523 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.2, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/formidablepencil/envy
configfile: pytest.ini
plugins: anyio-4.6.0
collected 17 items / 3 errors / 14 deselected / 3 selected

==================================== ERRORS ====================================
[31m[1m__________ ERROR collecting codebase_manager/test_codebase_manager.py __________[0m
[31mImportError while importing test module '/home/formidablepencil/envy/codebase_manager/test_codebase_manager.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
codebase_manager/test_codebase_manager.py:3: in <module>
    from codebase_manager import CodebaseManager
codebase_manager/codebase_manager.py:3: in <module>
    from version_control_manager import VersionControlManager
E   ModuleNotFoundError: No module named 'version_control_manager'[0m
[31m[1m____________________ ERROR collecting tests/unit/test_py.py ____________________[0m
[31mimport file mismatch:
imported module 'test_py' has this __file__ attribute:
  /home/formidablepencil/envy/tests/integration/test_py.py
which is not the same as the test file we want to collect:
  /home/formidablepencil/envy/tests/unit/test_py.py
HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules[0m
[31m[1m___________ ERROR collecting version_control/test_auto_versioning.py ___________[0m
[31mImportError while importing test module '/home/formidablepencil/envy/version_control/test_auto_versioning.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/usr/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
version_control/test_auto_versioning.py:1: in <module>
    from .git_operations import (
E   ModuleNotFoundError: No module named 'envy.version_control.git_operations'[0m
[36m[1m=========================== short test summary info ============================[0m
[31mERROR[0m codebase_manager/test_codebase_manager.py
[31mERROR[0m tests/unit/test_py.py
[31mERROR[0m version_control/test_auto_versioning.py
!!!!!!!!!!!!!!!!!!! Interrupted: 3 errors during collection !!!!!!!!!!!!!!!!!!!!
[31m======================= [33m14 deselected[0m, [31m[1m3 errors[0m[31m in 0.50s[0m[31m =======================[0m

2024-10-08 18:56:31,523 - ERROR - Command error: 
2024-10-08 19:24:33,169 - INFO - PYTHONPATH set to default: envy
2024-10-08 19:24:36,049 - ERROR - Error running unit tests: Command '['pytest', '--color=yes', '/home/formidablepencil/envy/tests/unit']' returned non-zero exit status 1.
2024-10-08 19:24:36,049 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.2, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/formidablepencil/envy
configfile: pytest.ini
plugins: anyio-4.6.0
collected 6 items

tests/unit/test_database.py [31mF[0m[31mF[0m[31mF[0m[31m                                          [ 50%][0m
tests/unit/test_py.py [32m.[0m[32m.[0m[32m.[0m[31m                                                [100%][0m

=================================== FAILURES ===================================
[31m[1m________________________ TestDatabase.test_commit_task _________________________[0m

self = <test_database.TestDatabase testMethod=test_commit_task>

    [0m[94mdef[39;49;00m [92mtest_commit_task[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        task = {[33m"[39;49;00m[33mtitle[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mTask 1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mDo something[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        task_id = [96mself[39;49;00m.db.commit_task(task, [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        tasks = [96mself[39;49;00m.db.get_tasks()[90m[39;49;00m
        records = [96mself[39;49;00m.db.get_completion_records()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(tasks), [94m1[39;49;00m)[90m[39;49;00m
        [96mself[39;49;00m.assertDictEqual(tasks[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: task_id, **task})[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(records), [94m1[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(records[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: [94m1[39;49;00m, [33m'[39;49;00m[33mtask_id[39;49;00m[33m'[39;49;00m: task_id, [33m'[39;49;00m[33mcompleted_at[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mrelated_tasks[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mimpact_notes[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m})[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 11, 'task_id': 11, 'completed_at': '2023-0[62 chars]e X'} != {'id': 1, 'task_id': 11, 'completed_at': '2023-04[61 chars]e X'}[0m
[1m[31mE         {'completed_at': '2023-04-01',[0m
[1m[31mE       -  'id': 11,[0m
[1m[31mE       ?        -[0m
[1m[31mE       [0m
[1m[31mE       +  'id': 1,[0m
[1m[31mE          'impact_notes': 'Impacts feature X',[0m
[1m[31mE          'related_tasks': '2,3',[0m
[1m[31mE          'task_id': 11}[0m

[1m[31mtests/unit/test_database.py[0m:27: AssertionError
[31m[1m_______ TestDatabase.test_create_and_retrieve_coordination_capabilities ________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_coordination_capabilities>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_coordination_capabilities[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        capability1 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mScheduling[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task scheduling[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        capability2 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mNotifications[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task notifications[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability2)[90m[39;49;00m
        capabilities = [96mself[39;49;00m.db.get_coordination_capabilities()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(capabilities), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(capabilities[[94m0[39;49;00m], capability1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 21, 'name': 'Scheduling', 'description': 'Coordinate task scheduling'} != {'name': 'Scheduling', 'description': 'Coordinate task scheduling'}[0m
[1m[31mE       - {'description': 'Coordinate task scheduling', 'id': 21, 'name': 'Scheduling'}[0m
[1m[31mE       ?                                               ----------[0m
[1m[31mE       [0m
[1m[31mE       + {'description': 'Coordinate task scheduling', 'name': 'Scheduling'}[0m

[1m[31mtests/unit/test_database.py[0m:46: AssertionError
[31m[1m_________ TestDatabase.test_create_and_retrieve_implementation_details _________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_implementation_details>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_implementation_details[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        detail1 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mUI[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement button functionality[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        detail2 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mBackend[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement API endpoint[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail2)[90m[39;49;00m
        details = [96mself[39;49;00m.db.get_implementation_details()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(details), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(details[[94m0[39;49;00m], detail1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 76, 'component': 'UI', 'description': 'Implement button functionality'} != {'component': 'UI', 'description': 'Implement button functionality'}[0m
[1m[31mE       - {'component': 'UI', 'description': 'Implement button functionality', 'id': 76}[0m
[1m[31mE       ?                                                                    ----------[0m
[1m[31mE       [0m
[1m[31mE       + {'component': 'UI', 'description': 'Implement button functionality'}[0m

[1m[31mtests/unit/test_database.py[0m:36: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_commit_task[0m - AssertionError: {'id': 11, 'task_id': 11, 'completed_at': '2023-0[62 chars]...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_coordination_capabilities[0m - AssertionError: {'id': 21, 'name': 'Scheduling', 'description': 'Coordinate...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_implementation_details[0m - AssertionError: {'id': 76, 'component': 'UI', 'description': 'Implement but...
[31m========================= [31m[1m3 failed[0m, [32m3 passed[0m[31m in 0.42s[0m[31m ==========================[0m

2024-10-08 19:24:36,049 - ERROR - Command error: 
2024-10-08 19:24:51,166 - INFO - PYTHONPATH set to default: envy
2024-10-08 19:24:53,685 - ERROR - Error running unit tests: Command '['pytest', '--color=yes', '/home/formidablepencil/envy/tests/unit']' returned non-zero exit status 1.
2024-10-08 19:24:53,685 - ERROR - Command output: [1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.2, pytest-8.3.3, pluggy-1.5.0
rootdir: /home/formidablepencil/envy
configfile: pytest.ini
plugins: anyio-4.6.0
collected 6 items

tests/unit/test_database.py [31mF[0m[31mF[0m[31mF[0m[31m                                          [ 50%][0m
tests/unit/test_py.py [32m.[0m[32m.[0m[32m.[0m[31m                                                [100%][0m

=================================== FAILURES ===================================
[31m[1m________________________ TestDatabase.test_commit_task _________________________[0m

self = <test_database.TestDatabase testMethod=test_commit_task>

    [0m[94mdef[39;49;00m [92mtest_commit_task[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        task = {[33m"[39;49;00m[33mtitle[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mTask 1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mDo something[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        task_id = [96mself[39;49;00m.db.commit_task(task, [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        tasks = [96mself[39;49;00m.db.get_tasks()[90m[39;49;00m
        records = [96mself[39;49;00m.db.get_completion_records()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(tasks), [94m1[39;49;00m)[90m[39;49;00m
        [96mself[39;49;00m.assertDictEqual(tasks[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: task_id, **task})[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(records), [94m1[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(records[[94m0[39;49;00m], {[33m'[39;49;00m[33mid[39;49;00m[33m'[39;49;00m: [94m1[39;49;00m, [33m'[39;49;00m[33mtask_id[39;49;00m[33m'[39;49;00m: task_id, [33m'[39;49;00m[33mcompleted_at[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2023-04-01[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mrelated_tasks[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33m2,3[39;49;00m[33m"[39;49;00m, [33m'[39;49;00m[33mimpact_notes[39;49;00m[33m'[39;49;00m: [33m"[39;49;00m[33mImpacts feature X[39;49;00m[33m"[39;49;00m})[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 12, 'task_id': 12, 'completed_at': '2023-0[62 chars]e X'} != {'id': 1, 'task_id': 12, 'completed_at': '2023-04[61 chars]e X'}[0m
[1m[31mE         {'completed_at': '2023-04-01',[0m
[1m[31mE       -  'id': 12,[0m
[1m[31mE       ?         -[0m
[1m[31mE       [0m
[1m[31mE       +  'id': 1,[0m
[1m[31mE          'impact_notes': 'Impacts feature X',[0m
[1m[31mE          'related_tasks': '2,3',[0m
[1m[31mE          'task_id': 12}[0m

[1m[31mtests/unit/test_database.py[0m:27: AssertionError
[31m[1m_______ TestDatabase.test_create_and_retrieve_coordination_capabilities ________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_coordination_capabilities>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_coordination_capabilities[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        capability1 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mScheduling[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task scheduling[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        capability2 = {[33m"[39;49;00m[33mname[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mNotifications[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mCoordinate task notifications[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_coordination_capability(capability2)[90m[39;49;00m
        capabilities = [96mself[39;49;00m.db.get_coordination_capabilities()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(capabilities), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(capabilities[[94m0[39;49;00m], capability1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 23, 'name': 'Scheduling', 'description': 'Coordinate task scheduling'} != {'name': 'Scheduling', 'description': 'Coordinate task scheduling'}[0m
[1m[31mE       - {'description': 'Coordinate task scheduling', 'id': 23, 'name': 'Scheduling'}[0m
[1m[31mE       ?                                               ----------[0m
[1m[31mE       [0m
[1m[31mE       + {'description': 'Coordinate task scheduling', 'name': 'Scheduling'}[0m

[1m[31mtests/unit/test_database.py[0m:46: AssertionError
[31m[1m_________ TestDatabase.test_create_and_retrieve_implementation_details _________[0m

self = <test_database.TestDatabase testMethod=test_create_and_retrieve_implementation_details>

    [0m[94mdef[39;49;00m [92mtest_create_and_retrieve_implementation_details[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        detail1 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mUI[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement button functionality[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        detail2 = {[33m"[39;49;00m[33mcomponent[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mBackend[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mdescription[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mImplement API endpoint[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail1)[90m[39;49;00m
        [96mself[39;49;00m.db.create_implementation_detail(detail2)[90m[39;49;00m
        details = [96mself[39;49;00m.db.get_implementation_details()[90m[39;49;00m
        [96mself[39;49;00m.assertEqual([96mlen[39;49;00m(details), [94m2[39;49;00m)[90m[39;49;00m
>       [96mself[39;49;00m.assertDictEqual(details[[94m0[39;49;00m], detail1)[90m[39;49;00m
[1m[31mE       AssertionError: {'id': 78, 'component': 'UI', 'description': 'Implement button functionality'} != {'component': 'UI', 'description': 'Implement button functionality'}[0m
[1m[31mE       - {'component': 'UI', 'description': 'Implement button functionality', 'id': 78}[0m
[1m[31mE       ?                                                                    ----------[0m
[1m[31mE       [0m
[1m[31mE       + {'component': 'UI', 'description': 'Implement button functionality'}[0m

[1m[31mtests/unit/test_database.py[0m:36: AssertionError
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_commit_task[0m - AssertionError: {'id': 12, 'task_id': 12, 'completed_at': '2023-0[62 chars]...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_coordination_capabilities[0m - AssertionError: {'id': 23, 'name': 'Scheduling', 'description': 'Coordinate...
[31mFAILED[0m tests/unit/test_database.py::[1mTestDatabase::test_create_and_retrieve_implementation_details[0m - AssertionError: {'id': 78, 'component': 'UI', 'description': 'Implement but...
[31m========================= [31m[1m3 failed[0m, [32m3 passed[0m[31m in 0.38s[0m[31m ==========================[0m

2024-10-08 19:24:53,685 - ERROR - Command error: 
